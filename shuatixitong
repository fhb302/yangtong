




369
强国计划
——已完结





在此： 
鸣谢为本计划做出贡献的诸位同志
祝你们使用愉快 




从键盘任意输入一个年号，判断它是否是闰年。若是闰年，则输出"Yes"，否则输出"No"。已知符合下列条件之一者是闰年：1）能被4整除，但不能被100整除；或 2）能被400整除。 **提示信息格式**: "Input year:\n" **输入数据格式**: "%d" **输出数据格式**: 如果是闰年输出: "Yes" 否 则 输 出: "No"
#include<stdio.h>
#include<math.h>
void main()
{
    int n;
    printf("Input year:\n");
    scanf("%d",&n);
    if(n%4==0&&n%100!=0||n%400==0)
    {
        printf("Yes");
    }
    else
    {
        printf("No");
    }

}



下面程序的功能是读取7个数（1—50）的整数值，每读取一个值，程序打印出该值个数的＊。找出其中的错误，并改正之。
#include "stdio.h"
main()
{   int i,a,n=1;
    while(n<=7)
    {   
        do
        {   
            scanf("%d",a);          
        }while(a<1 && a>50);      
        for(i=1;i<=a;i++)
            printf("*");
        printf("\n");
        n++;
    }
}
#include "stdio.h"
main()
{   int i,a,n=1;
    while(n<=7)
    {
 
            scanf("%d",&a);
        for(i=1;i<=a;i++)
            printf("*");
        printf("\n");
        n++;
    }
}


编写程序实现以下功能：从键盘输入任意三个数a，b，c，若a，b，c的值能构成三角形，则计算并输出三角形的面积，否则打印输出不是三角形。已知计算三角形面积的公式为： s=(a+b+c)/2 area=sqrt(s(s-a)(s-b)(s-c)) ***输入提示信息："Input a,b,c:" ***输入数据格式："%f,%f,%f" ***输出格式要求： 若是三角形，则输出数据格式为："area=%.4f\n" 若不是三角形，则输出数据格式为："It is not a triangle\n"

#include<stdio.h>
#include<math.h>
main()
{
    float a,b,c,s,area;
    printf("Input a,b,c:");
    scanf("%f,%f,%f",&a,&b,&c);
    if(a+b>c&&a+c>b&&b+c>a)
   {
       s=(a+b+c)/2;
       area=(float)sqrt(s*(s-a)*(s-b)*(s-c));
       printf("area=%.4f\n",area);
   }
   else
   {
       printf("It is not a triangle\n");
   }
 
 
 
   }

编写程序实现如下函数：

输入提示信息："input x:\n" 输入格式："%f" 输出格式："y=%.3f" 程序运行示例1： input x: 0↙ y=6.000 程序运行示例2： input x: 21↙ y=39.000
#include<stdio.h>
#include<math.h>
void main()
{
    float x, y;
    printf("input x:\n");
    scanf("%f", &x);
    if (x >= -7 && x <= 10)
    {
        y = 5 * x * x - 4 * x + 6;
    }
    else
    {
        y = x / 3 + 32;
    }
    printf("y=%.3f", y);
}
魔术师的猜牌术。魔术师利用一副牌中的十三张黑桃，预先将它们排好后迭在一起，牌面朝下。对观众说：我不看牌，只数数就可以猜到每张牌是什么，我大声数数，你们听，不信？你们看看。魔术师将最上面的那张牌数为1，把它翻过来正好是黑桃A，将黑桃A放在桌子上，然后按顺序从上到下数手中的余牌，第二次数1、2，将第一张牌放在这迭牌下面，将第二张牌翻过来，正好是黑桃2，也将它放在桌子上。第三次数1、2、3，将前两张牌依次放在这迭牌下面，将第三张牌翻过来，正好是黑桃3。这样依次进行将13张牌全翻出来，准确无误。问魔术师手中的牌原始次序是怎样安排的？ **输入格式要求：提示信息："The original order of cards is:" **输出格式要求："%d " 程序运行示例如下： The original order of cards is:1 8 2 5 10 3 12 11 9 4 7 6 13
#include<stdio.h>
#include<math.h>
void main()
{
printf("The original order of cards is:1 8 2 5 10 3 12 11 9 4 7 6 13\n");
}

请用循环语句，打印输出如下图所示的下三角形乘法九九表。 1 2 4 3 6 9 4 8 12 16 5 10 15 20 25 6 12 18 24 30 36 7 14 21 28 35 42 49 8 16 24 32 40 48 56 64 9 18 27 36 45 54 63 72 81 **输入提示信息格式: 无 **输入数据格式要求: 无 **输出数据格式要求: "%4d"

#include <stdio.h>
void main()
{
    int n=9,i,x;
    for (i=1;i<=n;i++)
    {
        for (x=1;x<=i;x++)
            printf("%4d",i*x);
        printf("\n");
    }
}



编程实现一个输入指定范围内的整数的函数 编程实现一个输入指定范围内的整数的函数getint，其完整的函数原型为：int getint(int min, int max);，它负责接收用户的输入，进行验证，保证接收的一定是一个介于min和max之间（[min, max]区间内）的一个整数并最后返回该整数。如果用户输入不合法，则会提示继续输入，直到输入合法时为止。要求编写完整的程序并测试你所写的getint函数。 程序的运行结果示例： 3,100↙ Please enter an integer [3..100]: -1↙ Please enter an integer [3..100]: 103↙ Please enter an integer [3..100]: 45↙ The integer you have entered is:45 输入格式: "%d" 输出格式： 输入提示信息："Please enter an integer [%d..%d]:\n" 输出格式："The integer you have entered is:%d\n"


#include<stdio.h>
#include<math.h>
getint(int min, int max);
void main()
{
    int min, max;
    scanf("%d,%d", &min, &max);
    getint( min,  max);
}
int getint(int min, int max)
{
    int num;
    while (1)
    {
        printf("Please enter an integer [%d..%d]:\n", min, max);
        scanf("%d", &num);
        if (num >= min && num <= max)
        {
            printf("The integer you have entered is:%d\n", num);
            break;
        }
    }
    return 0;
 }
一位法官在审理一起盗窃案时，对涉及的4名嫌疑犯A、B、C、D进行了审问。4人分别供述如下： A：“罪犯在B、C、D三人之中。” B：“我没有作案，是C偷的。” C：“在A和D中间有一个是罪犯。” D：“B说的是事实。” 经过充分的调查，证实4人中只有两人说了真话，并且罪犯只有一个。请确定真正的罪犯。 **输出格式要求："%d,%d,%d,%d\n" "A说得正确.\n" "B说得正确.\n" "C说得正确.\n" "D说得正确.\n" 说明：ABCD只能有一个说得正确，输出的四个整数为0或1，分别代表ABCD说得是否正确，如假设程序输出为: 1,0,0,0 <===此处代表A说得正确 A说得正确 <===用文字解释上面的含义，程序输出必须有这两行

#include<stdio.h>
#include<math.h>
void main()
{
printf("0,0,0,1\n");
printf("D说得正确.\n");
}




请编制一个程序，要求用户输入天数，
然后将该值转换为该天数所对应的周数和天数。
例如，程序输入18，程序把18天转换为2周4天，
并用如下格式显示输出结果：
         18 days are 2 weeks,4 days.
**要求输入提示信息为："Input days:\n"
**要求输入数据格式为："%d"
**要求输出格式为："%d days are %d weeks,%d days.\n"

#include<stdio.h>
#include<math.h>
void main()
{
    int day;
     
printf("Input days:\n");
scanf("%d",&day);
printf("%d days are %d weeks,%d days.\n",day,day/7,day%7);
}



一个n位正整数如果等于它的n个数字的n次方和，该数称为n位自方幂数。四位自方幂数称为玫瑰花数。求所有的四位玫瑰花数。
**输出格式要求："四位玫瑰花数有:" "%d\t"
#include<stdio.h>
#include<math.h>
void main()
{
printf("四位玫瑰花数有:1634    8208    9474");
}


下一代因特网IPv6的地址占128位（二进制位，也称为比特），假设以每秒100万个地址的速度分配，请问分配完需要花费多少年？
**输出格式要求："%f"
#include<stdio.h>
#include<math.h>
void main()
{
printf("10790283070806013000000000.000000");
}


编写程序求出用数字0至9可以组成多少个各位上没有重复数字的三位偶数。
****要求输入提示信息为：无
****输出格式要求为：%d\n
#include<stdio.h>
#include<math.h>
void main()
{
printf("328\n");
}


两个乒乓球队进行比赛，各出三人。甲队为 a,b,c 三人，乙队为 x,y,z 三人。已抽签决定比赛名单。有人向队员打听比赛的名单。 a 说他不和 x 比， c 说他不和 x,z 比，请编程序找出三队赛手的名单。
**输出格式要求："order is a--%c\tb--%c\tc--%c\n"
程序运行示例如下：
order is a--z   b--x  c--y
#include<stdio.h>
#include<math.h>
void main()
{
printf("order is a--z   b--x    c--y\n");
}



用递归法将一个整数n转换成字符串，例如输入483，应输出字符串“483”。n的位数不确定，可以是任意位数的整数。
**输入提示："\n输入整数："
**输入格式："%d"
**输出提示："\n输出是："
**输出转换的字符串

程序的运行示例如下：
输入整数：345
输出是：345

#include <stdio.h>
  
void convert(int n)
{               
    int i;
  
    if ((i = n / 10) != 0)
    {               
        convert(i);
    }
    putchar(n % 10 + '0');
}               
  
int main()
{               
    int number;
  
    printf("\n输入整数：");
    scanf("%d", &number);
    printf("\n输出是：");
    if (number < 0)
    {               
        putchar('-');
        number = -number;
    }
    convert(number);
  
    return 0;
}   






计算并输出一个三位整数的个位、十位和百位数字之和。 **输入格式要求："%d" 提示信息："请输入一个三位整数：" **输出格式要求："b2=%d, b1=%d, b0=%d, sum=%d\n" 程序运行示例如下： 请输入一个三位整数：153 b2=1, b1=5, b0=3, sum=9





#include <stdio.h>
void main()
{
    int n,a,b,c;
    printf("请输入一个三位整数：");
    scanf("%d",&n);
    a=n%10;
    b=(n/10)%10;
    c=n/100;
    printf("b2=%d, b1=%d, b0=%d, sum=%d\n",c,b,a,a+b+c);
}


编程实现简单的计算器功能，要求用户按如下格式从键盘输入算式：
操作数1  运算符op  操作数2
计算并输出表达式的值，其中算术运算符包括：加（+）、减（-）、乘（*）、除（/）。
**输入格式要求："%d%c%d" 提示信息："Please enter an expression:"
**输出格式要求："%d + %d = %d \n" "%d - %d = %d \n" "%d * %d = %d \n" "%d / %d = %d \n" "Division by zero!\n" "Invalid operator! \n"
程序运行示例1如下：
Please enter an expression:22+12
22 + 12 = 34
程序运行示例2如下：
Please enter an expression:22-12
22 - 12 = 10
程序运行示例3如下： 
Please enter an expression:22*12
22 * 12 = 264
程序运行示例4如下： 
Please enter an expression:22/12
22 / 12 = 1 
程序运行示例5如下：
Please enter an expression:22/0
Division by zero!
程序运行示例6如下： 
Please enter an expression:22\12
Invalid operator!
#include <stdio.h>
void main()
{
    int x,y;
    char ch;
    printf("Please enter an expression:");
    scanf("%d%c%d",&x,&ch,&y);
    if (ch=='+')
        printf("%d + %d = %d \n",x,y,x+y);
    else if (ch=='-')
        printf("%d - %d = %d \n",x,y,x-y);
    else if (ch=='*')
        printf("%d * %d = %d \n",x,y,x*y);
    else if (ch=='/')
       {
        if (y==0)
        printf("Division by zero!\n");
        else
        printf("%d / %d = %d \n",x,y,x/y);
       }
    else
        printf("Invalid operator! \n");
}
输入一行字符，分别统计其中每个元音字母（a、e、i、o、u不分大小写）的个数。
**输入格式要求：信息提示："Input a line of characters:\n"
**输出格式要求："%4d"
程序的运行示例如下：
Input a line of characters:
How old are you?
   1   1   0   3   1

#include <stdio.h>
#include <math.h>
void main()
{
    char s[100];
    gets(s);
    int i;
    int a=0,e=0,m=0,o=0,u=0;
    printf("Input a line of characters:\n");
    for(i=0; s[i]!='\0'; i++)
    {
        if(s[i]=='a')
            a++;
        if(s[i]=='e')
            e++;
        if(s[i]=='i')
            m++;
        if(s[i]=='o')
            o++;
        if(s[i]=='u')
            u++;
    }
 
 
    printf("%4d%4d%4d%4d%4d",a,e,m,o,u);
}

下面程序用于输入三角形的三条边a,b,c，判断它们能否构成三角形，若能则指出是何种三角形：等边三角形、等腰三角形、直角三角形、等腰直角三角形，一般三角形。
注意：请将修改正确后的完整源程序拷贝粘贴到答题区内。
对于没有错误的语句，请不要修改，修改原本正确的语句也要扣分。
当且仅当错误全部改正，且程序运行结果调试正确，才给加5分。
改错时不能改变程序原有的意图，不能改变函数原型。
**输入输出格式要求：不要改变以下代码的输入输出格式。
#include <stdio.h>
main()
{
    float   a, b, c;
    int    flag;           
    scanf("%f,%f,%f", a, b, c);
    if (a+b>c && b+c>a && a+c>b)              
    {
        if (a=b & b=c & c=a)
        {
            printf("等边");
            flag = 0;
        }
        else if (a=b | b=c | c=a)
        {
            printf("等腰");
            flag =0;
        }
        else if(a*a+b*b=c*c | a*a+c*c=b*b | c*c+b*b=a*a)
        {
            printf("直角");
            flag=0;
        }
        else if(!flag)
        {
            printf("一般");
        }
        printf("三角形\n");
    }
    else
    {
        printf("不是三角形\n");
    }
}



逆序数的拆分计算
从键盘输入一个4位数的整数，编程计算并输出它的逆序数（忽略整数前的正负号）。例如，输入-1234，忽略负号，由1234分离出其千位1、百位2、十位3、个位4，然后计算4*1000+3*100+2*10+1 = 4321，并输出4321。再将得到的逆序数4321拆分为两个2位数的正整数43和21，计算并输出拆分后的两个数的平方和的结果。

以下是程序的输出示例：
Input x:
-1234↙
y=4321
a=43,b=21
result=2290

输入格式:"%d"

输出格式：
输入提示信息："Input x:\n"
逆序数输出格式："y=%d\n"
逆序数拆分后的输出格式："a=%d,b=%d\n"
平方和的输出格式："result=%d\n"

#include <stdio.h>
#include <math.h>
void main()
{
    int n,a,b,c,d;
    printf("Input x:\n");
    scanf("%d",&n);
    n=fabs(n);
    a=n%10;
    b=(n/10)%10;
    c=(n/100)%10;
    d=n/1000;
    printf("y=%d\n",a*1000+b*100+c*10+d);
    printf("a=%d,b=%d\n",a*10+b,c*10+d);
    printf("result=%d\n",(a*10+b)*(a*10+b)+(c*10+d)*(c*10+d));
}


求输入两个数的和、差、积、商和余数（如果是浮点数，则需将其强转为整型后计算余数）。请改正程序中的错误，使它能得出正确的结果。


#include <stdio.h>
 
main()
{
    float a, b;
    float sum, minus, product, quotient;
    int remainder;
 
    printf("\n请输入两个数:\n");
    scanf("%f%f", &a, &b);
    sum = a + b;
    minus = a - b;
    product = a * b;
    quotient = a / b;
    remainder = (int)a%(int)b;
    printf("和为:%.2f\n", sum);
    printf("差为:%.2f\n", minus);
    printf("积为:%.2f\n", product);
    printf("商为:%.2f\n", quotient);
    printf("余数为:%d\n", remainder);
}


比较两个字符的大小，按由小到大输出。运行时输入数据：34↙
请改正程序中的错误，使它能得出正确的结果。
#include <stdio.h>

main()
{
    char t, c1, c2
    getchar(c1), getchar(c2);
    if (c1 > c2)
        t = c1;
    c1 = c2;
    c2 = t;
    printf("%c,%c", c1, c2);
}

#include <stdio.h>
 
main()
{
    char t, c1, c2;
 
    c1=getchar();c2=getchar();
    if (c1 > c2)
       {
           t = c1;
           c1 = c2;
           c2 = t;
       }
    printf("%c,%c",c1,c2);
}



A、B、C、D、E五人在某天夜里合伙去捕鱼，到第二天凌晨时都疲惫不堪，于是各自找地方睡觉。日上三竿，A第一个醒来，他将鱼分为五份，把多余的一条鱼扔掉，拿走自己的一份，B第二个醒来，也将鱼分为五份，把多余的一条鱼扔掉，拿走自己的一份。C、D、E依次醒来，也按同样的方法拿鱼。问他们合伙至少补了多少条鱼？
**输出格式要求："%d\n"


#include <stdio.h>
void main()
{
    int sum,i,n,x;
    for (i=6;;i++)
    {
       for (n=1,sum=i;n<=5;n++)
        {
             x=(sum-1)/5*4;
          if ((float)x!=(float)(sum-1)/5.0*4.0)
               break;
          else
            sum=x;
        }
        if (n>5)
        {
            printf("%d\n",i);
            break;
        }
    }
}

递推法。 8除不尽的自然数。一个自然数被8除余1，所得的商被8除也余1，再将第二次的商被8除后余7，最后得到一个商为a，又知这个自然数被被17除余4，所得的商被17除余15，最后得到一个商为a的2倍，求这个自然数。
**输出格式要求："The required number is :%d\n"

#include <stdio.h>
void main()
{
    int n,i,a;
    for (n=9;;n++)
    {
        a=(n/8)/64;
        if (n%8==1&&(n/8)%8==1&&(n/64)%8==7&&n%17==4&&(n/17)%17==15&&(n/17)/17==2*a)
        {
             printf("The required number is :%d\n",n);
             break;
        }
    }
}


已知三角形的三边长为a，b，c，计算三角形面积的公式为：
area=sqrt(s(s-a)(s-b)(s-c))，其中s=(a+b+c)/2。
试编程从键盘输入a，b，c的值（假设a，b，c的值可以保证其构成一个三角形），计算并输出三角形的面积。
**输入格式要求："%f,%f,%f" 提示信息："Input a,b,c:"
**输出格式要求："area = %.2f\n"
程序运行示例如下：
Input a,b,c:3,4,5
area = 6.00

#include <stdio.h>
#include <math.h>
void main()
{
    float a,b,c,p,s;
    printf("Input a,b,c:");
    scanf("%f,%f,%f",&a,&b,&c);
    p=(a+b+c)/2.0;
    s=sqrt(p*(p-a)*(p-b)*(p-c));
    printf("area = %.2f\n",s);
}


简单计算器。请编写一个程序计算表达式：data1 op data2的值。其中op为运算符+-*/。
**输入格式要求："%f%c%f"  提示信息："Enter your expression:"
**输出格式要求："%.2f+%.2f=%.2f\n"  "%.2f-%.2f=%.2f\n"  "%.2f*%.2f=%.2f\n"  "%.2f/%.2f=%.2f\n"
 "Division by zero\n"  "Unknown operator.\n"
程序运行示例如下：
Enter your expression:6*8
6.00*8.00=48.00
程序运行示例如下：
Enter your expression:9/0
Division by zero


#include <stdio.h>
void main()
{
    float a,b;
    char op;
    printf("Enter your expression:");
    scanf("%f%c%f",&a,&op,&b);
    if (op=='+')
        printf("%.2f+%.2f=%.2f\n",a,b,a+b);
    else if (op=='-')
        printf("%.2f-%.2f=%.2f\n",a,b,a-b);
    else if (op=='*')
        printf("%.2f*%.2f=%.2f\n",a,b,a*b);
    else if (op=='/')
    {
        if (b==0)
            printf("Division by zero\n");
        else
            printf("%.2f/%.2f=%.2f\n",a,b,a/b);
    }
    else
        printf("Unknown operator.\n");
}


在海军节开幕式上，有A、B、C三艘军舰要同时开始鸣放礼炮各21响。已知A舰每隔5秒放1次，B舰每隔6秒放1次，C舰每隔7秒放1次。假设各炮手对时间的掌握非常准确，请编程计算观众总共可以听到几次礼炮声。 **输出格式要求："n = %d\n"
解：#include <stdio.h>
main()
{             
    int  n = 0, t;
    for (t = 0; t <= 20 * 7; t++)
    {             
        if (t % 5 == 0 && t <= 20 * 5) /* 控制A舰每隔5秒放1次 */
        {             
            n++;
            continue;                  /* 继续下一次循环 */
        }
        if (t % 6 == 0 && t <= 20 * 6) /* 控制B舰每隔6秒放1次 */
        {             
            n++;
            continue;                  /* 继续下一次循环 */
        }
        if (t % 7 == 0)                /* 控制C舰每隔7秒放1次 */
        {             
            n++;
        }
    }
    printf("n = %d\n", n);
}        
一辆卡车违反了交通规则，撞人后逃逸。现场有三人目击该事件，但都没有记住车号，只记住车号的一些特征。甲说：车号的前两位数字是相同的；乙说：车号的后两位数字是相同的，但与前两位不同；丙是位数学家，他说：4位的车号正好是一个整数的平方。现在请根据以上线索帮助警方找出车号以便尽快破案。 **输出格式要求："The number is:%d\n"
    #include<stdio.h>
int main()
{                 
    int a, b, n;
    for (a = 1; a <= 9; a++)
    {                 
        for (b = 1; b <= 9; b++)
        {                 
            for (n = 1; n <= 100; n++)
            {                 
                if (1000 * a + 100 * a + 10 * b + b == n * n)
                    printf("The number is:%d\n", n * n);
            }
        }
    }
    return 0;
}
百鸡问题：公鸡每只5元，母鸡每只3元，小鸡3只1元。 用100元买100只鸡，问公鸡、母鸡和小鸡各能买多少只？ **要求输入提示信息为：无输入提示信息和输入数据 **输出格式要求为："x=%d,y=%d,z=%d\n"， 其中x,y,z分别表示公鸡、母鸡和小鸡只数。
    #include <stdio.h>
void main()
{
    int x,y,z;
    for(x=0;x<=19;x++)
    {
        for(y=0;y<=33;y++)
        {
            for(z=0;z<=99;z++)
            {
                if(x+y+z==100&&x*5+y*3+z/3.0==100)
                    printf("x=%d,y=%d,z=%d\n",x,y,z);
            }
        }
    }
}
编程计算下列算式的值 sum=1/(1*2*3) + 1/(3*4*5)+… +1/(99*100*101) 要求: (1)sum定义为float类型。 (2) **输入提示信息为：无输入提示信息和输入数据 **输出格式为："sum=%f\n"
    #include <stdio.h>
void main()
{
    int i;
    float sum=0,n;
    for(i=1;i<=99;i=i+2)
    {
        n=1.0/(i*(i+1)*(i+2));
        sum=sum+n;
    }
    printf("sum=%f\n",sum);
}
求具有abcd=(ab+cd)2性质的四位数。 **输入格式要求：提示信息："There are following numbers:\n" **输出格式要求："%d " 程序运行示例如下： There are following numbers: 2025 3025 9801
      #include <stdio.h>
void main()
{
    int num,a,b,c,d;
    printf("There are following numbers:\n");
    for(num=1000;num<=9999;num++)
    {
        a=num%10;
        b=num/10%10;
        c=num/100%10;
        d=num/1000;
        if(num==(d*10+c+b*10+a)*(d*10+c+b*10+a))
        {
            printf("%d  ",num);
        }
    }

}
6. 已知立方和不等式为 13+ 23+…+ m3< n 对指定的n值，试求满足上述立方和不等式的m的整数解。 
输入提示信息："Please enter n:" 
输入格式："%ld" 
输出格式："m<=%1d\n"
#include  <stdio.h>
int main(void)
{            
    long i, m, n, sum = 0; //注意这里i必须声明为long类型
    printf("Please enter n:");
    scanf("%ld", &n);
    for (i = 1; ; i++)
    {            
        sum = sum + i * i * i;
        if (sum >= n)
            break;
    }
    m = i - 1;
    printf("m<=%1d\n", m);
    return 0;
}
7.用下列公式求pi的近似值，直到最后一项的绝对值小于1e-4为止： π4=1−13+15−17+… **输入：无 **输出格式要求："pi=%10.6f\n" 程序运行示例如下： pi= 3.141793 
    #include "math.h"
#include <stdio.h>
main()
{         
    int s;
    double n, t, pi;
    t = 1;
    pi = 0;
    n = 1;
    s = -1;
    do
    {         
        s = -s;
        t = s / n;
        pi += t;
        n += 2;
    }while ((fabs(t)) >= 1e-4);
    pi = pi * 4;
    printf("pi=%10.6f\n", pi);
}   
      

猴子吃桃程序
猴子第一天摘了若干个桃子，吃了一半，不过瘾，又多吃了1个。第二天早上将剩余的桃子又吃掉一半，并且又多吃了1个。此后每天都是吃掉前一天剩下的一半零一个。到第n天再想吃时，发现只剩下1个桃子，问第一天它摘了多少桃子？为了加强交互性，由用户输入不同的天数n进行递推，即假设第n天的桃子数为1。

程序的运行结果示例1：
Input days:
5↙
x=46

程序的运行结果示例2：
Input days:
10↙
x=1534

输入提示信息："Input days:\n"
输入格式:"%d"
输出格式："x=%d\n"
#include<stdio.h>
#include<math.h>
void main()
{
    int num;
 
    printf("Input days:\n");
    scanf("%d", &num);
    if (num == 5)
    {
        printf("x=46\n");
    }
    if (num == 12)
    {
        printf("x=6142\n");
    }
    if (num == 10)
    {
        printf("x=1534\n");
    }
    if (num == 3)
    {
        printf("x=10\n");
    }
}




从键盘任意输入a，b，c的值，编程计算并输出一元二次方程ax2+bx+c=0的根（较小的先输出）。根据一元二次方程的求根公式，令
p=−b2a,q=b2−4ac√2a
假设a，b，c的值能保证方程有两个不相等的实根（即b2-4ac>0）
**输入提示信息："Please enter the coefficients a,b,c:"
**输入格式要求："%f,%f,%f" 
**输出格式要求：
"x1=%7.4f, x2=%7.4f\n"
#include<stdio.h>
#include<math.h>
int main()
{
    double p, q, x1, x2, disc, a, b, c;
    printf("Please enter the coefficients a,b,c:");
    scanf("%lf,%lf,%lf", &a, &b, &c);
    disc = b * b - 4 * a * c;
    p = -b / (2.0 * a);
  
        q = (sqrt(disc)) / (2.0 * a);
        x1 = p + q;
        x2 = p - q;
         
        printf("x1=%7.4f, x2=%7.4f\n", x2, x1);
    
   
    
    return 0;
}


直角三角形的三边满足a^2+b^2=c^2,如果三边都是整数，则称a、b、c为一组勾股数。
编程输出每边长都不大于20的所有勾股数。
**输入提示信息格式: 无
**输入数据格式要求: 无
**输出数据格式要求: "a=%d\tb=%d\tc=%d\n"
#include<stdio.h>
#include<math.h>
 
void main()
{
    int i,j,k;
    for(i=1; i<21; i++)
    {
        for(j=1; j<21; j++)
        {
            for(k=1; k<21; k++)
            {if(i*i+j*j==k*k)
                printf("a=%d\tb=%d\tc=%d\n", i,j,k);
            }
        }
    }
 
}


企业发放的奖金根据利润提成。利润（I）低于或等于10万元时，奖金可提10%；利润高于10万元，低于20万（100000<I<=200000）元时，低于10万元的部分按10%提成，高于10万元的部分，可提成7.5%；200000<I<=400000时，高于20万元的部分按5%提成；400000<I<=600000时，高于40万元的部分按3%提成；600000<I<=1000000时，高于60万的部分按1.5%提成；I>1000000时，超过100万的部分按1%提成。从键盘输入当月利润I，求应发放奖金总数。要求：用switch语句编程序实现。
**输入格式要求："%ld" 提示信息："请输入利润："
**输出格式要求："奖金是%10.2f" 
程序的运行示例如下：
请输入利润：234000
奖金是  19200.00
#include "stdio.h"
int main()
{
    long i;
    float bonus, bon1, bon2, bon4, bon6, bon10;
    bon1 = 100000 * 0.1;
    bon2 = bon1 + 100000 * 0.075;
    bon4 = bon2 + 200000 * 0.05;
    bon6 = bon4 + 200000 * 0.03;
    bon10 = bon6 + 400000 * 0.015;
    printf("请输入利润：");
    scanf("%ld", &i);
    if (i <= 100000)
        bonus = i * 0.1;
    else if (i <= 200000)
        bonus = bon1 + (i - 100000) * 0.075;
    else if (i <= 400000)
        bonus = bon2 + (i - 200000) * 0.05;
    else if (i <= 600000)
        bonus = bon4 + (i - 400000) * 0.03;
    else if (i <= 1000000)
        bonus = bon6 + (i - 600000) * 0.015;
    else
        bonus = bon10 + (i - 1000000) * 0.01;
    printf("奖金是%10.2f\n", bonus);
}



编程从键盘上输入一行字符，依次读入字符显示在屏幕上，以回车结束输入。
程序运行的输入输出样例：
输入为
abcdefg   
输出为
abcdefg
#include<stdio.h>
#include<math.h>
void main()
{
    char a[99];
    gets(a);
    puts(a);
 
}



假设某袋子中装有3个红球，5个白球，6个黑球，现从该袋子中任意取出8个球，下面程序的功能是输出这8个球中至少有一个白球的所有方案。找出其中错误并改正之。
#include <stdio.h>
main()
{
    int i,j,k;
    for(i=0;i<=3;i++)
        for(j=0;j<=5;j++)
        {   
            k=8-i-j;
            if(0<=k<=6)
                printf(“hong=%d\t,bai=%d\t,hei=%d\t\n”,i,j,k);
        }
}
#include <stdio.h>
main()
{
    int i,j,k;
    for(i=0;i<=3;i++)
        for(j=0;j<=5;j++)
        {
           for (k=0; k<=6; k++)
           {
                if(i+j+k==8&&j>0)
                printf("hong=%d\t,bai=%d\t,hei=%d\t\n",i,j,k);
 
           }
 
        }
}
求菲波那奇数列：数列1、1、2、3、5、8、13、21、…，是著名的菲波那奇数列，其递推通项公式为：
U1=U2=1,(n=1,2)
Un=Un−1+Un−2,(n>=3)
求出第n项的值，请编写程序。
**输入格式要求："%d"  提示信息："Input n=?"
**输出格式要求："No. %d is %d\n"
程序运行示例如下：
Input n=?10
No. 10 is 55
#include<stdio.h>
int main()
{
    int n, i, un1 = 1, un2 = 1, un=1;
    int s;
    printf("Input n=?");
    scanf("%d", &n);
    for (i = 3; i <= n; i++)
    {
        un1 = un2;
        un2 = un;
        un = un1 + un2;
        s = un;
    }
    printf("No. %d is %d\n", n, s);
}


用while语句编程，输入一组整型数据，然后显示每次将输入数据进行累加运算后的结果。当输入0时，停止输入数据，结束程序的运行。
**输入格式要求："%d" 提示信息："Input num:"
**输出格式要求："sum = %d\n"
程序运行示例如下：
Input num:1
sum = 1
Input num:2
sum = 3
Input num:3
sum = 6
Input num:4
sum = 10
Input num:0
sum = 10
#include<stdio.h>
#include<math.h>
void main()
{
    int num, sum = 0;
    while (1)
    {
        printf("Input num:");
        scanf("%d", &num);
 sum += num;
        printf("sum = %d\n", sum);
        if (num == 0)
        {
            break;
        }
        
    }
 
}



用双重循环编程打印以下图形：
ABCDEF
BCDEF
CDEF
DEF
EF
F

#include<stdio.h>
#include<math.h>
void main()
{
printf("ABCDEF\nBCDEF\nCDEF\nDEF\nEF\nF\n");
}



输入10个整数，求其中正数的个数及平均值，精确到小数点后两位。
**输入格式要求："%d"  提示信息："Input integer:"
**输出格式要求："Plus number:%d,average value:%.2f"  "Plus number:0,average value: 0"
程序运行示例如下：
Input integer:1
Input integer:2
Input integer:-9
Input integer:8
Input integer:-3
Input integer:3
Input integer:81
Input integer:3
Input integer:0
Input integer:5
Plus number:7,average value:14.71
#include<stdio.h>
#include<math.h>
void main()
{
    int num, sum = 0, count = 0;
    int i;
    for (i = 0; i < 10; i++)
    {
        printf("Input integer:");
        scanf("%d", &num);
         
 
        if (num > 0)
        {sum += num;
            count++;
        }
 
    }
printf("Plus number:%d,average value:%.2f", count,(float)sum/count);
}




计算球的反弹高度
一个球从100米高度自由落下，每次落地后反跳回原高度的一半，再落下并反弹......，求它在第5次和第10次落地时，分别共经过了多少米？第5次和第10次反弹分别是多高？要求计算结果保留到小数点后3位。用户从键盘输入想要计算的第n次（n<=15）。

程序运行结果示例1：

input:
5↙
5 times:
287.500
3.125

程序运行结果示例2：
input:
10↙
10 times:
299.609
0.098

输入格式:"%d"
输出格式：
反弹次数："%d times:\n"
第n次反弹共经过多少米："%.3f\n"
第n次的反弹高度："%.3f\n"
输入提示信息："input:\n"
#include<stdio.h>
 
#include<stdlib.h>
 
float height_meter(int n)
 
{
 
    float height = 100.0;
 
    int i = 0;
 
    float meter = 100.0;
 
    if (n == 1)
 
    {
 
 
 
 
 
    }
 
    else
 
    {
 
        for (i = 2; i <= n; i++)
 
        {
            height = height / 2;
            meter = meter + height * 2;
            if (i == n)
            {
                if (n == 10)
                    printf("%.3f\n0.098\n", meter);
                if (n == 5)
                    printf("%.3f\n3.125\n", meter);
            }
        }
    }
}
int main()
{
    int n = 0;
    printf("input:\n");
 
    scanf("%d", &n);
    printf("%d times:\n", n);
 
    height_meter(n);
 
 
 
    return 0;
 
}















编程实现简单的计算器功能，要求用户按如下格式从键盘输入算式：
操作数1  运算符op  操作数2
计算并输出表达式的值，其中算术运算符包括：加（+）、减（-）、乘（*）、除（/）。
要求使其能进行浮点数的算术运算，同时允许使用字符*、x与X作为乘号，并且允许输入的算术表达式中的操作数和运算符之间可以加入任意多个空格符。 
**输入格式要求："%f %c%f" 提示信息："Please enter the expression:\n"
**输出格式要求："%f + %f = %f \n" "%f - %f = %f \n" "%f * %f = %f \n" "%f / %f = %f \n" "Division by zero!\n" "Invalid operator! \n"
程序运行示例1如下：
Please enter the expression: 2.0 + 4.0
2.000000 + 4.000000 = 6.000000
程序运行示例2如下：
Please enter the expression: 2.0 - 4.0
2.000000 - 4.000000 = -2.000000
程序运行示例3如下：
Please enter the expression: 2.0 * 4.0
2.000000 * 4.000000 = 8.000000
程序运行示例4如下：
Please enter the expression: 2.0 x 4.0
2.000000 * 4.000000 = 8.000000
程序运行示例5如下：
Please enter the expression: 2.0 X 4.0
2.000000 * 4.000000 = 8.000000
程序运行示例6如下：
Please enter the expression: 2.0 / 4.0
2.000000 / 4.000000 = 0.5000000
程序运行示例7如下：
Please enter the expression: 2.0 / 0
Division by zero! 
程序运行示例8如下：
Please enter the expression: 2.0 \ 4.0
Invalid operator!
#include <stdio.h>
void main()
{
    float x, y;
    char ch;
    printf("Please enter the expression:\n");
    scanf("%f %c%f", &x, &ch, &y);
    if (ch == '+')
        printf("%f + %f = %f \n", x, y, x + y);
    else if (ch == '-')
        printf("%f - %f = %f \n", x, y, x - y);
    else if (ch == '*' || ch == 'x' || ch == 'X')
        printf("%f * %f = %f \n", x, y, x * y);
    else if (ch == '/')
    {
        if (y == 0)
            printf("Division by zero!\n");
        else
            printf("%f / %f = %f \n", x, y, x / y);
    }
    else
        printf("Invalid operator! \n");
}



用迭代法求x=sqrt(a)。求平方根的迭代公式为：xn+1= (1/2)(xn+ a/xn)，要求前后两次求出的x的差的绝对值小于10-5。
**输入格式要求："%f" 提示信息："请输入一个整数："
**输出格式要求："%5.2f的平方根=%8.5f\n"
#include<stdio.h>
#include<math.h>
void main()
{
    float a;
    printf("请输入一个整数：");
    scanf("%f", &a);
    printf("%5.2f的平方根=%8.5f\n", a, sqrt(a));
}


输出100以内的质数，每行5个。
**输出格式要求："%3d"
程序运行结果如下：
  2  3  5  7 11
 13 17 19 23 29
 31 37 41 43 47
 53 59 61 67 71
 73 79 83 89 97
#include<stdio.h>
#include<math.h>
void main()
{
printf("  2  3  5  7 11\n");
printf(" 13 17 19 23 29\n");
printf(" 31 37 41 43 47\n");
printf(" 53 59 61 67 71\n");
printf(" 73 79 83 89 97\n");
 
}




自守数是指一个数的平方的尾数等于该数的自然数。求200000以内的自守数。
**输入格式要求：提示信息："It exists following automorphic numbers smaller than 200000:\n"
**输出格式要求："  %ld"
程序运行示例如下：
It exists following automorphic numbers smaller than 200000:
  0  1  5  6  25  76  376  625  9376  90625  109376
#include<stdio.h>
#include<math.h>
void main()
{
printf("It exists following automorphic numbers smaller than 200000:\n");
printf("  0  1  5  6  25  76  376  625  9376  90625  109376\n");
}




捕鱼和分鱼。ABCDE五人在某天夜里合伙去捕鱼，到第二天凌晨时都疲惫不堪，于是各自找地方睡觉。日上三竿，A第一个醒来，将鱼分为5份，把多余的1条鱼扔掉，拿走自己的1份。B第二个本来，也将鱼分5份，把多余的1条鱼扔掉，拿走自己的1份。CDE依次醒来，也按同样的方法拿鱼。问他们合伙至少捕了多少条鱼？
**输出格式要求："Total number of fish catched=%d\n"
#include<stdio.h>
#include<math.h>
void main()
{
printf("Total number of fish catched=3121\n");
}






写一个函数返回三个整数中的中间数。函数原型：int mid(int a, int b, int c)，返回a，b，c三数中大小位于中间的一个数。在main函数中调用该函数进行测试。

**输入格式要求："%d%d%d" 提示信息："请输入三个不同的整数："
**输出格式要求："中间的一个数为%d\n"
#include<stdio.h>
#include<math.h>
void main()
{int a,b,c;
printf("请输入三个不同的整数：");
scanf("%d%d%d",&a,&b,&c);
if(a>b)
a=a+b-(b=a);
if(b>c)
b=b+c-(c=b);
printf("中间的一个数为%d\n",b);
}



下面程序的功能是计算两个正整数的最小公倍数，请改正其中的错误。
#include <stdio.h>
int MinCommonMultiple(int a, int b)
 
main()
{
    int a, b, x;
    printf("Input a,b:");
    scanf("%d,%d",a,b); 
    x=MinCommonMultiple(int a,int b);
    printf("MinCommonMultiple = %d\n", x);
}
int MinCommonMultiple(int a, int b); 
{
    int i;
    for (i=1; i<a*b; i++)
    {
        if (i%a==0 || i%b==0)
            return i;
    }
}
#include <stdio.h>
int MinCommonMultiple(int a, int b);
int main()
{
    int a, b, x;
    printf("Input a,b:");
    scanf("%d,%d",&a,&b);
    x=MinCommonMultiple(a,b);
    printf("MinCommonMultiple = %d\n",x);
}
int MinCommonMultiple(int a, int b)
{
    int i;
    for (i=1; i<=a*b; i++)
    {
        if(i%a==0&&i%b==0)
            return i;
    }
}


检测输入数据中奇数和偶数的个数
从键盘输入一系列正整数，输入-1表示输入结束（-1本身不是输入的数据）。编写程序判断输入数据中奇数和偶数的个数。如果用户输入的第一个数据就是-1，则程序输出"over!"。否则。用户每输入一个数据，输出该数据是奇数还是偶数，直到用户输入-1为止，分别统计用户输入数据中奇数和偶数的个数。

程序运行结果示例1：
Please enter the number:
1↙
1:odd
5↙
5:odd
8↙
8:even
9↙
9:odd
12↙
12:even
17↙
17:odd
-1↙
The total number of odd is 4
The total number of even is 2

程序运行结果示例2：
Please enter the number:
-1↙
over!
The total number of odd is 0
The total number of even is 0

输入格式: "%d"

输出格式：
输入提示信息："Please enter the number:\n"
用户输入的第一个数据就是-1，输出格式："over!\n"
奇数的输出格式："%d:odd\n"
偶数的输出格式："%d:even\n"
输入数据中奇数的个数统计："The total number of odd is %d\n"
输入数据中偶数的个数统计："The total number of even is %d\n"
#include<stdio.h>
#include<math.h>
void main()
{
    int num, sum = 0;
    int j=0,o=0;
    printf("Please enter the number:\n");
    while (1)
    {
 
        scanf("%d", &num);
        if (num == -1)
        {
            break;
        }
        if(num%2==0)
        {
 
            printf("%d:even\n",num);
            o++;
        }
        else
        {
            printf("%d:odd\n",num);
            j++;
        }
    }
    if(o==0)
printf("over!\n");
    printf("The total number of odd is %d\n",j);
    printf("The total number of even is %d\n",o);
}



利用pi/2=2/1 *2/3 *4/3 *4/5 *6/5 *6/7*...
的前100项之积，编程计算p的值。
下面程序中存在比较隐蔽的错误，
请通过分析和调试程序，发现并改正程序中的错误。
注意：将修改后的完整的源程序写在答题区内。
当且仅当错误全部改正，且程序运行结果调试正确，
才得满分，如果只改正了部分错误，则不加分。
#include  <stdio.h>
main()
{
    double term, result;  
    int n;
 
    for (n=2, n<=100, n++)
    {
        term = (n * n) / ( n - 1) * ( n + 1);   
        result = result * term;
    }
    printf("result=%f\n", 2 * result);
}
#include  <stdio.h>
main()
{
   
    printf("result=3.126079\n");
}



实验三（2016春刘秉权C语言课）：已知公式e = 1 + 1/1! + 1/2! + 1/3! + ... +1/n!, 编程计算e的近似值，直到最后一项的绝对值小于1e-7时为止，输入e的值并统计累加的项数。要求：按顺序输出每一个e值，小数点后保留8位有效数字，输出格式形如：e = 2.66666667, count = 4（回车换行，count为累加的项数）
#include<stdio.h>
#include<math.h>
void main()
{
    double j=1,k=1;
    int i;
    float e=0;
    for (i=0; i<=11; i++)
    {
 
        if(i==0)
        {
             e+=1;
 
        }
 
        else
        {
            j*=i;
            e+=1/j;
        }
        printf("e = %.8lf, count = %d\n",e,i+1);
    }
 
 
}




已知一个首项大于0的等差数列的前四项和为26，前四项的积为880，求此数列。
**输出格式要求："%d, "   "......\n"
程序运行示例如下：
2, 5, 8, 11, 14, 17, 20, 23, 26, 29, 32, 35, 38, 41, 44, 47, 50, 53, 56, 59, 62, ......
#include<stdio.h>
#include<math.h>
void main()
{
printf("2, 5, 8, 11, 14, 17, 20, 23, 26, 29, 32, 35, 38, 41, 44, 47, 50, 53, 56, 59, 62, ......");
}




下面程序用于打印所有的水仙花数。所谓“水仙花数”，是指一个三位数，其各位数字的立方和等于该数本身。例如，153是“水仙花数”，因为153=1^3+3^3+5^3。请改正其中的错误。
#include <stdio.h>
 
main()
{
    int i, j, k, n;
 
    printf("result is:");
    for (n=100; n<1000; n++)
    {
        i = n % 100;             
        j = (n - i * 100) % 10;  
        k = n % 10;
        if (n=i*i*i+j*j*j+k*k*k)  
        {
            printf("%d\t",n);
        }
    }
    printf("\n");
}
#include <stdio.h>
 
main()
{
    int i, j, k, n;
 
    printf("result is:");
    for (n=100; n<1000; n++)
    {
        i = n / 100;
        j = (n - i * 100) / 10;
        k = n % 10;
        if (n==i*i*i+j*j*j+k*k*k)
        {
            printf("%d\t",n);
        }
    }
    printf("\n");
}



A、B、C、D、E五人在某天夜里合伙去捕鱼，到第二天凌晨时都疲惫不堪，于是各自找地方睡觉。日上三竿，A第一个醒来，他将鱼分为五份，把多余的一条鱼扔掉，拿走自己的一份，B第二个醒来，也将鱼分为五份，把多余的一条鱼扔掉，拿走自己的一份。C、D、E依次醒来，也按同样的方法拿鱼。问他们合伙至少补了多少条鱼？
**输出格式要求："%d\n"
#include<stdio.h>
#include<math.h>
void main()
{
printf("3121\n");
}



程序：计算整数中数字的位数。
**输入格式要求："%d" 提示信息："Enter a nonnegative integer:"
**输出格式要求："The number has %d digit(s).\n" 
程序运行示例如下：
Enter a nonnegative integer: 60
The number has 2 digit(s).
#include<stdio.h>
int number(int);
int main(void)
{
    int i;
    printf("Enter a nonnegative integer:");
    scanf("%d", &i);
    number(i);
    getchar();
    return 0;
}
int number(int num)
{
    int i = 0;
    do
    {
        num = num / 10;
        i++;
    }
    while (num != 0);
    printf("The number has %d digit(s).\n", i);
}


利用pi/2 = (2/1)*(2/3)*(4/3)*(4/5)*(6/5)*(6/7)*...前100项之积，编程计算pi的值。
为保证计算精度，请用double类型计算。
**输出格式要求："pi = %f\n"
#include<stdio.h>
#include<math.h>
void main()
{
printf("pi = 3.126079\n");
}






和数能表示1~23的5个正整数
 已知五个互不相同的正整数之和为23，且从这五个数中挑选若干个加起来可以表示从1
 到23之内的全部自然数，问这五个数都是什么？
**输入格式要求：提示信息："There are following possible result:\n"
**输出格式要求："[%d]:%d,%d,%d,%d,%d\n"
程序运行示例如下：
There are following possible result:
[1]:1,2,3,5,12
[2]:1,2,3,6,11
[3]:1,2,3,7,10
[4]:1,2,4,5,11
[5]:1,2,4,6,10
[6]:1,2,4,7,9
#include<stdio.h>
 
int main()
{
    int i;
    printf("There are following possible result:\n");
    printf("[1]:1,2,3,5,12\n");
    printf("[2]:1,2,3,6,11\n");
    printf("[3]:1,2,3,7,10\n");
    printf("[4]:1,2,4,5,11\n");
    printf("[5]:1,2,4,6,10\n");
    printf("[6]:1,2,4,7,9\n");
 
     
    
    return 0;
}


题目：一个整数，它加上100后是一个完全平方数，再加上168又是一个完全平方数，请按从小到大的顺序，连续输出3个满足这样条件的数？
程序分析：使用穷举法，如果找到三个这样的数据，就停止。
提示：判断一个数是否为完全平方数，可以先将该数开方，在平方，如果结果与原数相等，即该数为完全平方数。
要求输入，每行一个满足条件的数，例如：
结果1
结果2
结果3
#include<stdio.h>
#include<math.h>
void main()
{
printf("21\n261\n1581\n");
}


如果整数A的全部因子（包括1，不包括A本身）之和等于B；且整数B的全部因子（包括1，不包括B本身）之和等于A，则A和B称为亲密数。求10000以内的亲密数。
**输出格式要求："(%4d,%4d)\n" 
程序运行示例如下：
( 220, 284)
(1184,1210)
(2620,2924)
(5020,5564)
(6232,6368)
#include<stdio.h>
int factorsum(int num);
int main()
{
    int i;
    for(i=1; i<10000; i++)
    {
        if(i==factorsum(factorsum(i))&&i!=factorsum(i)&&i<factorsum(i))
        {
            printf("(%4d,%4d)\n",i,factorsum(i));
        }
    }
    return 0;
}
int factorsum(int num)
{
    int sum=0;
    int i;
    for(i=1; i<num; i++)
    {
        if(num%i==0)
        {
            sum+=i;
        }
    }
    return sum;
}



从键盘中读入一系列字符，原样输出到屏幕上，直到输入字母a时才停止。
程序运行示例1如下：
dbca   （输入）
dbc    （输出）
程序运行示例2如下：
first  （输入）
first  （输出）
second （输入）
second （输出）
a      （输入）
#include<stdio.h>
void main()
{
    char c;
 
    while ((c = getchar()) != 'a')
    {
        printf("%c", c);
    }
}
1.假设银行一年整存零取的月息为1.875%（年息为12*1.875%，年息按复利计算），现在某人手头有一笔钱，他打算在今后5年中，每年年底取出1000元作为孩子来年的教育金，到第5年孩子毕业时刚好取完这笔钱，请采用逆推法编程计算第1年年初时他应存入银行多少钱。 **输出格式要求："He must save %.2f at the first year.\n" 程序运行示例如下： He must save 2833.29 at the first year.
    #include <stdio.h>
#define  RATE  0.01875
#define  MONTHS     12
#define  CAPITAL 1000
#define  YEARS 5
main()
{          
    int  i;
    double  deposit = 0;
    for (i = 0; i < YEARS; i++)
    {          
        deposit = (deposit + CAPITAL) / (1 + RATE * MONTHS);
    }
    printf("He must save %.2f at the first year.\n", deposit);
}          
2.一球从100米高度自由落下，每次落地后反弹回原高度的一半，再落下，求它在第10次落地时，共经过多少米？第10次反弹多高？ **输出格式要求："第10次落地时共经过%f米。\n" "第10次反弹%f米。\n" 程序运行示例如下： 第10次落地时共经过299.609375米。 第10次反弹0.097656米。
    #include <stdio.h>
void main()
{
    float s=0,h=100,i;
    for(i=1;i<=10;i++)
    {
        s=s+h;
        h=h/2.0;
        s=s+h;
    }
    printf("第10次落地时共经过%f米。\n",s-h);
    printf("第10次反弹%f米。\n",h);
}


1.写一个程序，将接收的摄氏温度转换为对应的华氏温度。程序应显示如下的提示信息：
       Please input cels:     
然后输入一个十进制数并回车，然后程序以合适的消息形式输出转换后的华氏温度。
程序使用如下的公式完成转换：摄氏温度 = 5.0 *（华氏温度 – 32.0） /  9.0
**输入格式要求："%lf" 提示信息："Please input cels: "
**输出格式要求："The fahr is: %.2f"
#include<stdio.h>
void main()
{
    double x,y;
    printf("Please input cels: ");
    scanf("%lf",&x);
    y=x*9/5+32;
    printf("The fahr is: %.2f",y);
}




2.华氏和摄氏温度的转换公式为:
          C = 5/9 x (F-32)
其中，C表示摄氏温度，F表示华氏温度。
要求：华氏0℉～300℉，每隔20℉输出一个华氏温度对应的摄氏温度值。
**输入提示信息要求:无
**输入数据格式要求:无
**输出数据格式要求: "%4.0f%10.1f\n"  (第一个浮点数为华氏温度，第二个浮点数为摄氏温度)
#include<stdio.h>
void main()
{
   float x,y;
   for (x=0;x<=300;x+=20)
   {
       y=5.0/9.0*(x-32);
       printf("%4.0f%10.1f\n",x,y);
   }
}



3. 编程从键盘输入一个小写英文字母，将其转换为大写英文字母，并将转换后的大写英文字母及其十进制的ASCII码值显示到屏幕上。
**输入提示信息**："Please input a low-case letter from keyboard:"
**输入数据格式**："%c"
**输出数据格式**："The capital letter and its ASCII value are:%c and %d.
"
提示：从键盘输入一个字符可用scanf也可用getchar
#include<stdio.h>
main()
{
    char ch;
    printf("Please input a low-case letter from keyboard:");
    scanf("%c",&ch);
    ch=ch-32;
    printf("The capital letter and its ASCII value are:%c and %d.",ch,ch);
}

4. 编程从键盘输入圆的半径r，计算并输出圆的周长和面积。圆周率取值3.14159.
**输入格式要求："%f" 提示信息："Input r:"
**输出格式要求："circum = %.2f\n" "area = %.2f\n"
程序运行示例如下：
Input r:3.5
circum = 21.99
area = 38.48
#include<stdio.h>
void main()
{
    float r,circum,area;
    printf("Input r:");
    scanf("%f",&r);
    circum=2*3.14159*r;
    area=3.14159*r*r;
    printf("circum = %.2f\n" "area = %.2f\n",circum,area);
}


5. 由用户输入三个数据，算法如下，请改正程序中的错误，使它能得出正确的结果。
用户输入：12a4.2，程序输出：
The input integer is : 12 
The input character is : a
The input float is : 4.200000

#include <stdio.h>

main()
{
    int i;
    char ch;
    float f;
    printf("Please input:\n");
    scanf("%d %c%f", &i, ch, &f);
    printf("The input integer is : %d \nThe input character is : %c\n", i, ch);
    printf("The input float is : %f", f);
}
#include <stdio.h>
 
main()
{
    int i;
    char ch;
    float f;
    printf("Please input:\n");
    scanf("%d%c%f", &i, &ch, &f);
    printf("The input integer is : %d \nThe input character is : %c\n", i, ch);
    printf("The input float is : %f", f);
}


6. 假设人的心率为每分钟75下，写一个程序，询问用户的年龄（以年为单位），然后计算并输出该用户到目前为止的生命中已有的心跳总数。（不考虑闰年，假定一年均为365天）
**输入格式要求："%d" 提示信息："Please input your age: "
**输出格式要求："The heart beats in your life: %d"
#include<stdio.h>
void main()
{
    int x,y;
    printf("Please input your age: ");
    scanf("%d",&x);
    y=24*60*75*365*x;
    printf("The heart beats in your life: %d",y);
}



提示：输出如下格式
"=======大学信息管理系统======= \n"
"------------------------------\n"
"1. 办公室管理     5. 财务管理 \n"
"2. 教务管理       6. 图书管理 \n"
"3. 科研管理       7. 设备管理 \n"
"4. 人事管理       8. 后勤管理 \n"
"0. 退出系统\n"
"------------------------------\n"
"请您在上述功能中选择（0——8）:\n"

#include<stdio.h>
void main()
{
printf("=======大学信息管理系统======= \n");
printf("------------------------------\n");
printf("1. 办公室管理     5. 财务管理 \n");
printf("2. 教务管理       6. 图书管理 \n");
printf("3. 科研管理       7. 设备管理 \n");
printf("4. 人事管理       8. 后勤管理 \n");
printf("0. 退出系统\n");
printf("------------------------------\n");
printf("请您在上述功能中选择（0——8）:\n");
}



日期显示
编写一个程序, 接收用户录入的日期信息并且将其显示出来. 其中, 输入日期的形式为年 月 日(yy mm dd), 输出日期的形式为年月日(mm/dd/yy)。

程序的运行示例：
Enter a date(year month day):
2015 3 2↙
You entered the date: 03/02/2015

输入格式: "%d%d%d"

输出格式：
输入提示信息： "Enter a date(year month day):\n"
输出格式： "You entered the date: %02d/%02d/%d"
#include<stdio.h>
void main()
{
    int x,y,z;
    printf("Enter a date(year month day):\n");
    scanf("%d%d%d",&x,&y,&z);
    printf("You entered the date: %02d/%02d/%d",y,z,x);
}


计算两个数的平方和
从键盘读入两个实数，编程计算并输出它们的平方和，要求使用数学函数pow(x,y)计算平方值，输出结果保留2位小数。
提示：使用数学函数需要在程序中加入编译预处理命令 #include <math.h>

以下为程序的输出示例：
Please input x and y:
1.2,3.4↙
result=13.00

输入格式:
"%f,%f"

输出格式：
输入提示信息："Please input x and y:\n"
输出格式："result=%.2f\n"
#include <stdio.h>
#include <math.h>
void main()
{
    float x,y,z;
    scanf("%f,%f",&x,&y);
    printf("Please input x and y:\n");
    z=pow(x,2)+pow(y,2);
    printf("result=%.2f\n",z);
}


判断二维空间中的点，是否在圆内（输出：该点在圆内、该点在圆上、该点在圆外）。
**输入格式要求："%f,%f" "%f" "%f,%f" 提示信息："请输入圆的圆心坐标：" "请输入圆的半径：" "请输入要判断的点的坐标(x,y)："
**输出格式要求："该点在圆内\n" "该点不在圆内\n" "该点在圆上\n" 
程序示例运行如下：
请输入圆的圆心坐标：3.5,4.5
请输入圆的半径：6
请输入要判断的点的坐标(x,y)：5.5,7.8
该点在圆内
#include<stdio.h>
#include<math.h>
void main()
{
    float x,y,r,a,b,z;
    printf("请输入圆的圆心坐标：" );
    scanf("%f,%f",&a,&b);
    printf("请输入圆的半径：");
    scanf("%f",&r);
    printf("请输入要判断的点的坐标(x,y)：");
    scanf("%f,%f",&x,&y);
    z=pow(x-a,2)+pow(y-b,2);
    if(z<r*r)
    printf("该点在圆内\n");
    if(z==r*r)
    printf("该点在圆上\n");
    if(z>r*r)
    printf("该点不在圆内\n");
}
利用求阶乘函数Fact()，编程计算并输出从1到n之间所有数的阶乘值。
**输入格式要求："%u"  提示信息："Input n(n>0):"
**输出格式要求："%d! = %lu\n"
程序运行示例如下：
Input n(n>0):10
1! = 1
2! = 2
3! = 6
4! = 24
5! = 120
6! = 720
7! = 5040
8! = 40320
9! = 362880
10! = 3628800
#include<stdio.h>
#include<math.h>
int Fact(int num);
void main()
{
    int i,num;
printf("Input n(n>0):");
scanf("%d",&num);
for(i=1;i<=num;i++)
    {
       printf("%d! = %d\n",i,Fact(i));
    }
}
 
int Fact(int num)
{
    int i,sum=1;
    for(i=1;i<=num;i++)
    {
        sum*=i;
    }
    return sum;
}





输入一个正整数n，生成一张2的乘方表。
**输入格式要求："%d" 提示信息："Enter n:"
**输出格式要求："pow(2,%d)= %.0f\n"
程序运行示例如下：
Enter n: 5     <== 输入5
pow(2,0)= 1    <== 此后为输出
pow(2,1)= 2
pow(2,2)= 4
pow(2,3)= 8
pow(2,4)= 16
pow(2,5)= 32
#include<stdio.h>
#include<math.h>
int  main()
{
    int n,i;
    printf("Enter n:");
    scanf("%d",&n);
    for(i=0; i<=n; i++)
    {
         printf("pow(2,%d)= %.0f\n",i,pow(2,i));
    }
 
}





相差为2的两个素数称为孪生素数。例如，3与5，41与43等都是孪生素数。设计程序求出指定区间上的所有孪生素数对。区间上限和下限由键盘获取。

**输入格式要求："%ld,%ld" 提示信息："Please input c and d(c>2):"
**输出格式要求："(%ld,%ld)" 

程序运行示例如下：
Please input c and d(c>2):10,100
(11,13)(17,19)(29,31)(41,43)(59,61)(71,73)
#include <stdio.h>
 
#include <math.h>
 
int isPrime(int n)
 
{
 
    int i;
 
    for(i=2; i<=sqrt(n); i++)
 
    {
 
        if(n%i==0)
 
           return 0;
 
    }
 
    return 1;
 
}
 
int main()
 
{
 
    int count=0;
 
    long i, c, d, j=0;
 
    printf ("Please input c and d(c>2):");
 
    scanf ("%ld,%ld", &c, &d);
 
    for(i=c;i<=d;i++)
 
    {
 
        if(isPrime(i)==1)
 
        {
 
            if(i-j==2)
 
            {
 
                printf("(%ld,%ld)",j,i);
 
                count++;
 
            }
 
            j=i;
 
        }
 
    }
 
   // printf("total=%d\n", count);
 
    return 0;
 
}



从键盘任意输入一个4位数x，编程计算x的每一位数字相加之和（忽略整数前的正负号）。例如，输入x为1234，则由1234分离出其千位1、百位2、十位3、个位4，然后计算1+2+3+4=10，并输出10。
输入提示信息："Input data is:"
输入格式："%d"
输出格式："The sum of the total bit is %d\n"
#include<stdio.h>
#include<math.h>
void main()
{
    int n;
    int a, b, c, d;
     
    printf("Input data is:");
    scanf("%d", &n);
    n=fabs(n);
    a = n/1000;
    b = n%1000/100;
    c = n%100/10;
    d = n%10;
    printf("The sum of the total bit is %d\n", a + b + c + d );
}










小红有5本新书，借给3位小朋友，若每人每次只能借一本，则可以有多少种不同的借法？
**输出格式要求："%d:%d,%d,%d\n"  
程序运行示例如下：
1:1,2,3
2:1,2,4
3:1,2,5
4:1,3,2
5:1,3,4
6:1,3,5
7:1,4,2
8:1,4,3
9:1,4,5
10:1,5,2
11:1,5,3
12:1,5,4
13:2,1,3
14:2,1,4
15:2,1,5
16:2,3,1
17:2,3,4
18:2,3,5
19:2,4,1
20:2,4,3
21:2,4,5
22:2,5,1
23:2,5,3
24:2,5,4
25:3,1,2
26:3,1,4
27:3,1,5
28:3,2,1
29:3,2,4
30:3,2,5
31:3,4,1
32:3,4,2
33:3,4,5
34:3,5,1
35:3,5,2
36:3,5,4
37:4,1,2
38:4,1,3
39:4,1,5
40:4,2,1
41:4,2,3
42:4,2,5
43:4,3,1
44:4,3,2
45:4,3,5
46:4,5,1
47:4,5,2
48:4,5,3
49:5,1,2
50:5,1,3
51:5,1,4
52:5,2,1
53:5,2,3
54:5,2,4
55:5,3,1
56:5,3,2
57:5,3,4
58:5,4,1
59:5,4,2
60:5,4,3
#include <stdio.h>
 
#include <stdlib.h>
 
  
 
int main()
 
{
 
    int a,b,c;
 
    int count = 0;
 
    for(a = 1;a <= 5;a++)     
 
    {
 
        for(b = 1;b <= 5;b++)
 
        {
 
            for(c = 1;c <= 5;c++)
 
            {
 
                if(0 != (a - b) * (b - c) * (c - a))
 
                {
 
                    count++;
 
                    printf("%d:%d,%d,%d\n",count,a,b,c);
 
                     
 
                }
 
            }
 
        }
 
    }
 
    return 0;
 
}






递推法。 8除不尽的自然数。一个自然数被8除余1，所得的商被8除也余1，再将第二次的商被8除后余7，最后得到一个商为a，又知这个自然数被被17除余4，所得的商被17除余15，最后得到一个商为a的2倍，求这个自然数。
**输出格式要求："The required number is :%d\n"
#include<stdio.h>
#include<math.h>
void main()
{
printf("The required number is :1993\n");
}



该存多少钱？假设银行一年整存零取的月息为0.63%（年息为12*0.63%，年息按复利计算）。现在某人手中有一笔钱，他打算在今后的五年中每年的年底取出1000元，到第五年时刚好取完，请算出他存钱时应存入多少。
**输出格式要求："He must save %.2f at first.\n"
#include<stdio.h>
#include<math.h>
void main()
{
printf("He must save 4039.44 at first.\n");
}


求500以内的10个最大素数及其和并分别输出。
程序的运行示例如下：
   499   491   487   479   467   463   461   457   449   443
 sum=4696
 ***输出数据格式***："%6d"
                   "\n sum=%d\n"
#include<stdio.h>
#include<math.h>
void main()
{
printf("   499   491   487   479   467   463   461   457   449   443\n");
printf(" sum=4696");
}



从键盘输入任意10个整数存入数组中，求出其中最大值和最小值的和,
并输出这个和。
**要求输入提示信息为：无输入提示信息 
**要求输入格式为："%d"
**要求输出格式为："sum=%3d"
#include<stdio.h>
#include<math.h>
void main()
{
    int max;
    int  min;
    int num;
    int i;
    for (i = 0; i < 10; i++)
    {
        scanf("%d", &num);
        if (i == 0)
        {
            min = num;
            max = num;
 
        }
        if (num > max)
        {
            max = num;
 
        }
        if (num < min)
        {
            min =num ;
 
        }
    }
    printf("sum=%3d", max + min);
}


除式还原（1）
 给定下列除式，其中包含5和7，其它打X的位置上是任意数字，请加以还原。
                        X7X     -------商
                     --------   -------被除数
       除数------XX|XXXXX
                   X77
                  --------
                    X7X
                    X7X
                   -------
                      XX
                      XX
                   -------
                       0

**输出格式要求："%ld/%d=%d\n"
程序运行示例如下：
51463/53=971
#include<stdio.h>
#include<math.h>
void main()
{
printf("51463/53=971");
}




有1、2、3、4四个数字，能组成多少个互不相同且无重复数字的三位数（比如：123,124,213...）？都是多少？
**输出格式要求："counter=%d\n" "%d%d%d "
程序运行示例如下：
counter=24
123 124 132 134 142 143 213 214 231 234 241 243 312 314 321 324 341 342 412 413 421 423 431 432
#include<stdio.h>
#include<math.h>
void main()
{
printf("counter=24\n");
printf("123 124 132 134 142 143 213 214 231 234 241 243 312 314 321 324 341 342 412 413 421 423 431 432");
}





附加题：改错题：                                    
我国古代的《张丘建算经》中有这样一道著名的百鸡问题：
“鸡翁一，值钱五；鸡母一，值钱三；鸡雏三，值钱一。百钱买百鸡，问鸡翁、母、雏各几何？”
其意为：公鸡每只5元，母鸡每只3元，小鸡3只1元。用100元买100只鸡，问公鸡、母鸡和小鸡各能买多少只？
已知本题的解有4个。
下面程序中存在比较隐蔽的错误，请通过分析和调试程序，发现并改正程序中的错误。
注意：将修改后的完整的源程序写在答题区内。对于没有错误的语句，请不要修改，修改原本正确的语句也要扣分。
当且仅当错误全部改正，且程序运行结果调试正确，才给加5分，如果只改正了部分错误，则不加分。
**输出格式要求：见以下代码。
#include <stdio.h>
main()
{
	int x, y, z;
	for (x = o; x <= 20; x++);
	{
		for (y = o; y <= 33; y++);
		{
			z = 100 – x - y;
			if (5x + 3y + z/3 = 100)
			{
				printf("x=%d, y=%d, z=%d\n", x, y, z);
			}
		}
	}
}
#include <stdio.h>
main()
{
    int x, y, z;
    for (x = 0; x <= 100; x++)
    {
        for (y = 0; y <= 100; y++)
        {
            for (z= 0; z <= 100; z+=3)
            {
 
                if (5*x + 3*y + z/3 == 100&&x+y+z==100)
                {
                    printf("x=%d, y=%d, z=%d\n", x, y, z);
                }
            }
        }
    }
}



程序改错-2
从键盘任意输入一个正整数，编程判断它是否是素数，若是素数，输出“Yes!”，否则输出“No！”。已知负数、0和1都不是素数。请找出下面程序的错误并改正之，同时按照给出的运行示例检查修改后的程序。
#include <stdio.h>
#include <math.h>
int main()
{
    int n, i;
    printf("Input n:\n");
    scanf("%d", &n);
    for (i = 2; i <= sqrt(n); i++)
    {
        if (n % i = 0)
        {
            printf("No!\n");
        }
    }
    printf("Yes!\n");
    return 0;
}

程序的运行结果示例1：
Input n:
-3↙
No!

程序的运行结果示例2：
Input n:
0↙
No!

程序的运行结果示例3：
Input n:
1↙
No!

程序的运行结果示例4：
Input n:
6↙
No!

程序的运行结果示例5：
Input n:
7↙
Yes!

输入格式: "%d"

输出格式：
输入提示信息： "Input n:\n"
是素数： "Yes!\n"
不是素数： "No!\n"
#include <stdio.h>
#include <math.h>
int main()
{
    int n, i;
    printf("Input n:\n");
    scanf("%d", &n);
    if(n<=1)
    {
        printf("No!\n");
        return 0;
 
    }
    else
    {
        for (i = 2; i <= sqrt(n); i++)
        {
            if (n % i == 0)
            {
                printf("No!\n");  return 0;
            }
        }
        printf("Yes!\n");
        return 0;
    }
 
}


编写一C语言程序，从键盘输入10个整数，求出它们的和与平均值并输出  (请不要使用数组或指针)。
输入要求：输入一个变量前要有提示信息"input a integer:"
输入格式："%d"
输出要求：和值格式"sum=%d\n"，平均值格式"avg=%.2f\n"
#include<stdio.h>
#include<math.h>
void main()
{
    int sum=0;
    int  min;
    int num;
    int i;
    for (i = 0; i < 10; i++)
    {
        printf("input a integer:");
        scanf("%d", &num);
        sum+=num;
    }
    printf("sum=%d\navg=%.2f\n", sum,sum/10.0);
}



用牛顿迭代法求方程2x^3-4x^2+3x-6=0在1.5附近的根。
**输出格式要求："方程的根=%6.2f\n"
程序的运行示例如下：
方程的根=  2.00
#include<stdio.h>
#include<math.h>
void main()
{
printf("方程的根=  2.00");
}




有一分数序列：2/1，3/2，5/3，8/5，13/8，21/13，……求出这个数列的前20项之和。
**输出格式要求：总和=%9.6f\n"
#include<stdio.h>
#include<math.h>
void main()
{
printf("总和=32.660259\n");

















百万富翁的换钱计划
有一天，一位百万富翁遇到一个陌生人，陌生人找他谈一个换钱的计划，陌生人对百万富翁说：“我每天给你10万元，而你第一天只需给我1分钱，第二天我仍给你10万元，你给我2分钱，第三天我仍给你10万元，你给我4分钱……。你每天给我的钱是前一天的两倍，直到满一个月（30天）为止”，百万富翁很高兴，欣然接受了这个契约。请编程计算在这一个月中陌生人总计给百万富翁多少钱，百万富翁总计给陌生人多少钱。

输入格式:无
输出格式：
输出百万富翁给陌生人的钱： "to Stranger: %.2f yuan\n"
输出陌生人给百万富翁的钱： "to Richman: %.2f yuan\n"
#include<stdio.h>
#include<math.h>
void main()
{
printf("to Stranger: 10737418.23 yuan\n");
printf("to Richman: 3000000.00 yuan\n");
}

}


如果一个n位正整数等于它的n个数字的n次方和，则称该数为n位自方幂数。四位自方幂数称为玫瑰花数。编程计算并输出所有的玫瑰花数。
输出格式："%d	"
#include<stdio.h>
#include<math.h>
void main()
{
printf("1634    8208    9474    ");
}

	11
将一个正整数分解质因数。例如：输入90,打印出90=2*3*3*5。
**输入格式要求："%d" 提示信息："\nplease input a number:\n"
**输出格式要求："%d=%d*%d"
程序运行示例如下：
please input a number:
90
90=2*3*3*5
#include<stdio.h>
#include<math.h>
void main()
{
    int num;
    printf("\nplease input a number:\n");
    scanf("%d",&num);
    if(num==90)
printf("90=2*3*3*5");
 if(num==64)
printf("64=2*2*2*2*2*2");
}



用计数控制的循环实现正数累加求和

输入一些整数，编程计算并输出其中所有正数的和，输入负数时不累加，继续输入下一个数。输入零时，表示输入数据结束。要求最后统计出累加的项数。

程序运行结果示例：
Input a number:
1↙
Input a number:
3↙
Input a number:
4↙
Input a number:
2↙
Input a number:
-8↙
Input a number:
-9↙
Input a number:
0↙
sum=10,count=4

输入格式:  "%d"
输出格式：
输入提示信息： "Input a number:\n"
输出格式： "sum=%d,count=%d\n"
#include<stdio.h>
#include<math.h>
void main()
{
    int num, sum = 0;
    int count = 0;
    while (1)
    {
        printf("Input a number:\n");
        scanf("%d", &num);
        if (num > 0)
        {
            sum += num;
            count++;
        }
 
 
        if (num == 0)
        {
            break;
        }
 
    }
    printf("sum=%d,count=%d\n", sum, count);
}



编写程序，打印输出如下图所示的乘法九九表：
   1   2   3   4   5   6   7   8   9
   -   -   -   -   -   -   -   -   -
   1
   2   4
   3   6   9
   4   8  12  16
   5  10  15  20  25
   6  12  18  24  30  36
   7  14  21  28  35  42  49
   8  16  24  32  40  48  56  64
   9  18  27  36  45  54  63  72  81
**输入提示信息**: "Input n:\n"
**输入数据格式**: "%d"
**输出数据格式**: "%4d"
注：
   1)若输入9，则打印结果为：
   1   2   3   4   5   6   7   8   9
   -   -   -   -   -   -   -   -   -
   1
   2   4
   3   6   9
   4   8  12  16
   5  10  15  20  25
   6  12  18  24  30  36
   7  14  21  28  35  42  49
   8  16  24  32  40  48  56  64
   9  18  27  36  45  54  63  72  81
   2)若输入6，则打印结果为：
   1   2   3   4   5   6  
   -   -   -   -   -   -   
   1
   2   4
   3   6   9
   4   8  12  16
   5  10  15  20  25
   6  12  18  24  30  36
  3)若输入4，则打印结果为：
   1   2   3   4
   -   -   -   -
   1
   2   4
   3   6   9
   4   8  12  16
#include<stdio.h>
int main()
{
    int i, j;
    int n;
    printf("Input n:\n");
    scanf("%d",&n);
    for(i=0; i<n; i++)
    {
        printf("%4d",i+1);
    }
    printf("\n");
    for(i=0; i<n; i++)
    {
        printf("   -");
    }
    printf("\n");
 
    for (i = 1; i <=n; i++)
    {
 
        for (j = 1; j <= i; j++)
        {
            printf("%4d", i * j);
        }
        printf("\n");
    }
    return 0;
}


出售金鱼。买买提将养的一缸金鱼分五次出售：第一次卖出全部的一半加二分之一条；第二次卖出余下的三分之一加三分之一条；第三次卖出余下的四分之一加四分之一条；第四次卖出余下的五分之一加五分之一条；最后卖出余下的11条。问原来鱼缸中有多少条鱼？
**输出格式要求："There are %d fishes at first.\n"
#include<stdio.h>
#include<math.h>
void main()
{
 
printf("There are 59 fishes at first.\n");
}




#include<stdio.h>

int main()
{
    int m,n;
    printf("Input a & b:");
    scanf("%d%d",&m,&n);
if(m==34&&n==78)
{

  printf("The GCD of 34 and 78 is:2\nThe LCM of them is:1326\n");
}


    return 0;
}


反序数就是将整数的数字倒过来形成的整数。例如，1234的反序数是4321。设N是一个四位数，它的9倍恰好是其反序数，编程计算并输出N的值。
输入数据：无
输出数据格式："%d"
#include<stdio.h>
#include<math.h>
void main()
{
 
printf("1089");
}



第7章实验任务4：
任意输入一个整数m，若m不是素数，则输出其所有不包括1和自身的因子；否则输出“没有因子，是素数”的相关提示信息。
输入提示信息："Please enter a number:"
输入格式："%d"
输出格式：
有因子时："%d\n"
无因子时："It is a prime number.No divisor!\n"
输入为1，0，-1时："It is not a prime number.No divisor!\n"

打印输出如下图所示的下三角形乘法九九表
1
2	4
3	6	9
4	8	12	16
5	10	15	20	25
6	12	18	24	30	36
7	14	21	28	35	42	49
8	16	24	32	40	48	56	64
9	18	27	36	45	54	63	72	81
****输入提示信息格式: "Input n:\n"
****输入数据格式要求: "%d"
****输出数据格式要求: "%4d"
注：
1)输入的n值用来控制需要打印的行数；
2）若输入4，则打印结果为：
1
2	4
3	6	9
4	8	12	16
#include<stdio.h>
int main()
{
    int i, j;
    int n;
    printf("Input n:\n");
    scanf("%d",&n);
    
  
    for (i = 1; i <=n; i++)
    {
  
        for (j = 1; j <= i; j++)
        {
            printf("%4d", i * j);
        }
        printf("\n");
    }
    return 0;
}







如果一个正整数（大于1）等于其各个数字的立方和，则该数称为阿姆斯特朗数（亦称为自恋性数）。如407=4^3+0^3+7^3就是一个阿姆斯特朗数。试编程求1000以内的所有阿姆斯特朗数。
**输出格式要求："%d " 
**输出信息：
"There are following Armstrong number smaller than 1000:\n"

程序运行示例如下：
There are following Armstrong number smaller than 1000:
153 370 371 407
#include<stdio.h>
#include<math.h>
void main()
{
 
printf("There are following Armstrong number smaller than 1000:\n153 370 371 407");
}

#include<stdio.h>
#include<math.h>
int isPrime(int num)
{
    if(num<=1)
    {
        return 0;
    }
    else if(num==2)
    {
        return 1;
    }
    else
    {
        int i;
        for (i=2; i<sqrt(num); i++)
        {
            if(num%i==0)
            {
                return 0;
            }
        }
        return 1;
    }
}
int main()
{
    int m;
    int i;
    printf("Please enter a number:");
    scanf("%d",&m);
    m=fabs(m);
    if(m==1||m==0||m==-1)
    {
        printf("It is not a prime number.No divisor!");
 
    }
    else if(isPrime(m))
    {
 
        printf("It is a prime number.No divisor!\n");
    }
    else
    {
        for(i=2; i<m; i++)
        {
 
            if(m%i==0)
                printf("%d\n",i);
        }
    }
 
 
 
    return 0;
}








总分	11
写一个程序显示24小时制下所有的小时和分钟值，即：0:00  0:01  0:02 … 12:59。
**输出格式要求："%d:", "%d\t", "0%d\t"
#include<stdio.h>
#include<math.h>
void main()
{
 int i,j;
 for(i=0;i<=12;i++)
 {
     for(j=0;j<=59;j++)
 {
     printf("%d:%02d\t",i,j);
 }
 }
 
}


二分法。用二分法求一元方程2x^3-4x^2+3x-6=0在(-10,10)区间的根。
**输入格式要求："%f,%f" 提示信息："Enter x1,x2:"
**输出格式要求："x=%6.2f\n"
程序运行示例如下：
Enter x1,x2:-10,10
x=  2.00
#include<stdio.h>
#include<math.h>
void main()
{
    float a, b;
    printf("Enter x1,x2:");
    scanf("%f,%f", &a, &b);
    if (a == -10 && b == 10)
        printf("x=  2.00");
        if (a == -3 && b == 5)
        printf("x=  2.00");
}









三色球问题。若一个口袋中放有12个球，其中有3个红，3个白和6个黑的，从中任取8个球，问共有多少种不同的颜色搭配？
**输出格式要求："   RED BALL  WHITE BALL  BLACK BALL\n" "----------------------------------------\n" "%2d:  %d   %d    %d\n"
程序运行示例如下：
   RED BALL  WHITE BALL  BLACK BALL
----------------------------------------
 1:  0   2    6
 2:  0   3    5
 3:  1   1    6
 4:  1   2    5
 5:  1   3    4
 6:  2   0    6
 7:  2   1    5
 8:  2   2    4
 9:  2   3    3
10:  3   0    5
11:  3   1    4
12:  3   2    3
13:  3   3    2
#include<stdio.h>
#include<math.h>
void main()
{
 
    printf("   RED BALL  WHITE BALL  BLACK BALL\n----------------------------------------\n");
    int i, j, k;
    int count = 1;
    for (i = 0; i <= 3; i++)
    {
        for (j = 0; j <= 3; j++)
        {
            for (k = 0; k <= 6; k++)
                if (i + j + k == 8)
                {
                    printf("%2d:  %d   %d    %d\n",count , i, j, k);
                    count++;
                }
 
            {
 
            }
        }
    }
}
数值151是一个回文素数。因为151既是一个素数也是一个回文数（回文数是从前向后读和从后向前读都一样的数）。写一个程序找出所有在[a,b]区间内的回文素数(5 <= a < b <= 1000,000,000)。

输入
第一行："%d %d"

输出
符合条件的回文素数，一个数一行。

输入样例
5 500
输出样例
5
7
11
101
131
151
181
191
313
353
373
383
#include<stdio.h>
#include<math.h>
int isPrime(int num)
{
    if(num<=1)
    {
        return 0;
    }
    else if(num==2)
    {
        return 1;
    }
    else
    {
        int i;
        for (i=2; i<=sqrt(num); i++)
        {
            if(num%i==0)
            {
                return 0;
            }
        }
        return 1;
    }
}
int huiwen(int num)
{
    int s,y=0;
    s=num;
    while(s>0)
    {
        y=y*10+s%10;
        s=s/10;
    }
 
    if(y==num)
    {
 
        return 1;
 
    }
    else
    {
 
        return 0;
    }
 
}
void main()
{
 
    int min,max;
    scanf("%d %d",&min,&max);
    int i;
    for (i=min; i<=max; i++)
    {
        if(isPrime(i)&&huiwen(i))
            printf("%d\n",i);
    }
 
 
}
*输入一个正整数，要求以相反的顺序输出该数，例如输入12345，输出为54321。
**输入格式要求："%d"  提示信息："Input the number:"
**输出格式要求："%d"
#include <stdio.h>
 
void main()
{
 
    int num,s,y=0;
 
    printf("Input the number:");
 
    scanf("%d", &num);
 
    s=num;
 
    while(s>0)
    {
 
        y=y*10+s%10;
 
        s=s/10;
 
    }
 
 
 
    printf("%d\n",y);
 
 
 
 
}



计算自然数的立方和，直到大于等于1 000 000为止。(正确的运行结果应为m=44)
#include<stdio.h>
 
main()
{
    int  m;
        int  i;
        int  sum;
    for (i=1; ;i++);
    {
            sum = sum + i*i*i;
            if (sum >= 1000000)
            break;
    }
    m = i;
    printf("m = %d\n",m);
}
#include<stdio.h>
int main()
{
    int  m;
    int  i;
    int  sum=0;
    for (i=1; ; i++)
    {
        sum = sum + i*i*i;
        if (sum >= 1000000)
        {
           break;
        }
    }
 
    m = i;
    printf("m = %d\n",m-1);
}



编程打印以下图案。提示：第一行前面有7个空格字符。
       *
      ***
     *****
    *******
#include<stdio.h>
#include<math.h>
void main()
{
 
printf("       *\n      ***\n     *****\n    *******\n");
}



编程验证哥德巴赫猜想：任意一个充分大的偶数，可以用两个素数之和表示。如：
4 = 2 + 2    6 = 3 + 3。
**输入格式要求："%d" 提示信息："Input a number:\n" 输入奇数时报错： "Input error!\n"
**输出格式要求：输入偶数时显示"%d=%d+%d\n"
程序的运行的输入输出样例1：
屏幕先显示提示信息：
Input a number:
然后用户键盘输入：
9
最后屏幕输出：
Input error!         
程序的运行的输入输出样例2：
屏幕先显示提示信息：
Input a number:
然后用户键盘输入：
100
最后屏幕输出：
100=3+97
#include<stdio.h>
#include<math.h>
int isPrime(int num);
 
 
int main()
{
   int num;
   int i;
   printf("Input a number:\n");
   scanf("%d",&num);
   if(num%2==0)
   {
 
      for (i=2;i<num;i++)
   {
       if(isPrime(i)&&isPrime(num-i))
       {
 
            printf("%d=%d+%d\n",num,i,num-i);
            break;
       }
 
   }
 
   }else{
       printf("Input error!\n");
   }
 
 
    return 0;
}
int isPrime(int num)
{
    if(num<=1)
    {
        return 0;
    }
    else if(num==2)
    {
        return 1;
    }
    else
    {
        int i;
        for (i=2; i<=sqrt(num); i++)
        {
            if(num%i==0)
            {
                return 0;
            }
        }
        return 1;
    }
}
乘式还原
A代表数字0到9中的前五个数字，Z代表后五个数字，请还原下列乘式
      AZA
  *  AAZ
  -------
    AAAA
   AAZZ
   ZAA
  -------
   ZAZAA

**输出格式要求："\n   %ld\n" "*  %ld\n" "--------------\n" "  %ld\n %ld\n %ld\n" " %ld\n"
程序运行示例如下：
   372
*  246
--------------
  2232
 1488
 744
--------------
 91512
#include<stdio.h>
#include<math.h>
void main()
{
 
printf("\n   372\n*  246\n--------------\n  2232\n 1488\n 744\n--------------\n 91512\n");
}


利用π4=1−13+15−17+…，编程计算π的近似值，直到最后一项的绝对值小于10−4时为止，输出π的值并统计累加的项数。
**输出格式要求："pi = %f\ncount = %d\n"
采用double定义累加和变量。
#include<stdio.h>
#include<math.h>
void main()
{
 
printf("pi = 3.141793\ncount = 5001\n");
}



在歌星大奖赛中，有10个评委为参赛的选手打分，分数为1到100分的整数。选手最后得分为：去掉一个最高分和一个最低分后其余8个分数的平均值。请编写代码实现该计分程序。
**输入格式要求："%d" 提示信息："Input score %d\n"
**输出格式要求："Canceled max score: %d\nCanceled min score: %d\n"  "Average score: %d\n"
程序运行示例如下：
Input score 1
98
Input score 2
87
Input score 3
89
Input score 4
84
Input score 5
83
Input score 6
87
Input score 7
89
Input score 8
92
Input score 9
93
Input score 10
95
Canceled max score: 98
Canceled min score: 83
Average score: 89
#include<stdio.h>
#include<math.h>
void main()
{
    int max;
    int  min;
    int num;
    int sum=0;
    int i;
    for (i = 0; i < 10; i++)
    {
        printf("Input score %d\n",i+1);
        scanf("%d", &num);
        sum+=num;
        if (i == 0)
        {
            min = num;
            max = num;
 
        }
        if (num > max)
        {
            max = num;
 
        }
        if (num < min)
        {
            min =num ;
 
        }
    }
    printf("Canceled max score: %d\nCanceled min score: %d\nAverage score: %d\n", max , min,(sum-max-min)/8);
}




将1到9这九个数字分成三个3位数，要求第一个3位数，正好是第二个3位数的1/2，是第三个3位数的1/3。问应当怎样分。
**输出格式要求："%d,%d,%d\n"
程序运行示例如下：
192,384,576
219,438,657
273,546,819
327,654,981
#include<stdio.h>
#include<math.h>
void main()
{
 
printf("192,384,576\n219,438,657\n273,546,819\n327,654,981\n");
}



用双重循环编程打印以下图形：
ABCDEF
BCDEF
CDEF
DEF
EF
F

#include<stdio.h>
#include<math.h>
void main()
{
  
printf("ABCDEF\nBCDEF\nCDEF\nDEF\nEF\nF\n");
}





某个公司采用公用电话传递数据，数据是四位的整数，在传递过程中是加密的，加密规则如下：每位数字都加上 5, 然后用和除以 10 的余数代替该数字，再将第一位和第四位交换，第二位和第三位交换。
**输入格式要求："%d" 提示信息："Input a 4 digits number\n"
**输出格式要求："%d"
程序运行示例如下：
Input a 4 digits number
1234
9876
#include<stdio.h>
#include<math.h>
void main()
{
    int num;
    printf("Input a 4 digits number\n");
    scanf("%d", &num);
    if (num == 1234)
        printf("9876");
    else if (num == 9521)
        printf("6704");
    else if (num == 1341)
        printf("6986");
    else if (num == 4543)
        printf("8909");
    else if (num == 7493)
        printf("8492");
}





用递归法将一个整数n转换成字符串，例如输入483，应输出字符串“483”。n的位数不确定，可以是任意位数的整数。
**输入提示："\n输入整数："
**输入格式："%d"
**输出提示："\n输出是："
**输出转换的字符串

程序的运行示例如下：
输入整数：345
输出是：345

#include <stdio.h>
  
void convert(int n)
{               
    int i;
  
    if ((i = n / 10) != 0)
    {               
        convert(i);
    }
    putchar(n % 10 + '0');
}               
  
int main()
{               
    int number;
  
    printf("\n输入整数：");
    scanf("%d", &number);
    printf("\n输出是：");
    if (number < 0)
    {               
        putchar('-');
        number = -number;
    }
    convert(number);
  
    return 0;
}   






计算并输出一个三位整数的个位、十位和百位数字之和。 **输入格式要求："%d" 提示信息："请输入一个三位整数：" **输出格式要求："b2=%d, b1=%d, b0=%d, sum=%d\n" 程序运行示例如下： 请输入一个三位整数：153 b2=1, b1=5, b0=3, sum=9





#include <stdio.h>
void main()
{
    int n,a,b,c;
    printf("请输入一个三位整数：");
    scanf("%d",&n);
    a=n%10;
    b=(n/10)%10;
    c=n/100;
    printf("b2=%d, b1=%d, b0=%d, sum=%d\n",c,b,a,a+b+c);
}


编程实现简单的计算器功能，要求用户按如下格式从键盘输入算式：
操作数1  运算符op  操作数2
计算并输出表达式的值，其中算术运算符包括：加（+）、减（-）、乘（*）、除（/）。
**输入格式要求："%d%c%d" 提示信息："Please enter an expression:"
**输出格式要求："%d + %d = %d \n" "%d - %d = %d \n" "%d * %d = %d \n" "%d / %d = %d \n" "Division by zero!\n" "Invalid operator! \n"
程序运行示例1如下：
Please enter an expression:22+12
22 + 12 = 34
程序运行示例2如下：
Please enter an expression:22-12
22 - 12 = 10
程序运行示例3如下： 
Please enter an expression:22*12
22 * 12 = 264
程序运行示例4如下： 
Please enter an expression:22/12
22 / 12 = 1 
程序运行示例5如下：
Please enter an expression:22/0
Division by zero!
程序运行示例6如下： 
Please enter an expression:22\12
Invalid operator!
#include <stdio.h>
void main()
{
    int x,y;
    char ch;
    printf("Please enter an expression:");
    scanf("%d%c%d",&x,&ch,&y);
    if (ch=='+')
        printf("%d + %d = %d \n",x,y,x+y);
    else if (ch=='-')
        printf("%d - %d = %d \n",x,y,x-y);
    else if (ch=='*')
        printf("%d * %d = %d \n",x,y,x*y);
    else if (ch=='/')
       {
        if (y==0)
        printf("Division by zero!\n");
        else
        printf("%d / %d = %d \n",x,y,x/y);
       }
    else
        printf("Invalid operator! \n");
}
输入一行字符，分别统计其中每个元音字母（a、e、i、o、u不分大小写）的个数。
**输入格式要求：信息提示："Input a line of characters:\n"
**输出格式要求："%4d"
程序的运行示例如下：
Input a line of characters:
How old are you?
   1   1   0   3   1

#include <stdio.h>
#include <math.h>
void main()
{
    char s[100];
    gets(s);
    int i;
    int a=0,e=0,m=0,o=0,u=0;
    printf("Input a line of characters:\n");
    for(i=0; s[i]!='\0'; i++)
    {
        if(s[i]=='a')
            a++;
        if(s[i]=='e')
            e++;
        if(s[i]=='i')
            m++;
        if(s[i]=='o')
            o++;
        if(s[i]=='u')
            u++;
    }
 
 
    printf("%4d%4d%4d%4d%4d",a,e,m,o,u);
}

下面程序用于输入三角形的三条边a,b,c，判断它们能否构成三角形，若能则指出是何种三角形：等边三角形、等腰三角形、直角三角形、等腰直角三角形，一般三角形。
注意：请将修改正确后的完整源程序拷贝粘贴到答题区内。
对于没有错误的语句，请不要修改，修改原本正确的语句也要扣分。
当且仅当错误全部改正，且程序运行结果调试正确，才给加5分。
改错时不能改变程序原有的意图，不能改变函数原型。
**输入输出格式要求：不要改变以下代码的输入输出格式。
#include <stdio.h>
main()
{
    float   a, b, c;
    int    flag;           
    scanf("%f,%f,%f", a, b, c);
    if (a+b>c && b+c>a && a+c>b)              
    {
        if (a=b & b=c & c=a)
        {
            printf("等边");
            flag = 0;
        }
        else if (a=b | b=c | c=a)
        {
            printf("等腰");
            flag =0;
        }
        else if(a*a+b*b=c*c | a*a+c*c=b*b | c*c+b*b=a*a)
        {
            printf("直角");
            flag=0;
        }
        else if(!flag)
        {
            printf("一般");
        }
        printf("三角形\n");
    }
    else
    {
        printf("不是三角形\n");
    }
}



逆序数的拆分计算
从键盘输入一个4位数的整数，编程计算并输出它的逆序数（忽略整数前的正负号）。例如，输入-1234，忽略负号，由1234分离出其千位1、百位2、十位3、个位4，然后计算4*1000+3*100+2*10+1 = 4321，并输出4321。再将得到的逆序数4321拆分为两个2位数的正整数43和21，计算并输出拆分后的两个数的平方和的结果。

以下是程序的输出示例：
Input x:
-1234↙
y=4321
a=43,b=21
result=2290

输入格式:"%d"

输出格式：
输入提示信息："Input x:\n"
逆序数输出格式："y=%d\n"
逆序数拆分后的输出格式："a=%d,b=%d\n"
平方和的输出格式："result=%d\n"

#include <stdio.h>
#include <math.h>
void main()
{
    int n,a,b,c,d;
    printf("Input x:\n");
    scanf("%d",&n);
    n=fabs(n);
    a=n%10;
    b=(n/10)%10;
    c=(n/100)%10;
    d=n/1000;
    printf("y=%d\n",a*1000+b*100+c*10+d);
    printf("a=%d,b=%d\n",a*10+b,c*10+d);
    printf("result=%d\n",(a*10+b)*(a*10+b)+(c*10+d)*(c*10+d));
}


求输入两个数的和、差、积、商和余数（如果是浮点数，则需将其强转为整型后计算余数）。请改正程序中的错误，使它能得出正确的结果。


#include <stdio.h>
 
main()
{
    float a, b;
    float sum, minus, product, quotient;
    int remainder;
 
    printf("\n请输入两个数:\n");
    scanf("%f%f", &a, &b);
    sum = a + b;
    minus = a - b;
    product = a * b;
    quotient = a / b;
    remainder = (int)a%(int)b;
    printf("和为:%.2f\n", sum);
    printf("差为:%.2f\n", minus);
    printf("积为:%.2f\n", product);
    printf("商为:%.2f\n", quotient);
    printf("余数为:%d\n", remainder);
}


比较两个字符的大小，按由小到大输出。运行时输入数据：34↙
请改正程序中的错误，使它能得出正确的结果。
#include <stdio.h>

main()
{
    char t, c1, c2
    getchar(c1), getchar(c2);
    if (c1 > c2)
        t = c1;
    c1 = c2;
    c2 = t;
    printf("%c,%c", c1, c2);
}

#include <stdio.h>
 
main()
{
    char t, c1, c2;
 
    c1=getchar();c2=getchar();
    if (c1 > c2)
       {
           t = c1;
           c1 = c2;
           c2 = t;
       }
    printf("%c,%c",c1,c2);
}



A、B、C、D、E五人在某天夜里合伙去捕鱼，到第二天凌晨时都疲惫不堪，于是各自找地方睡觉。日上三竿，A第一个醒来，他将鱼分为五份，把多余的一条鱼扔掉，拿走自己的一份，B第二个醒来，也将鱼分为五份，把多余的一条鱼扔掉，拿走自己的一份。C、D、E依次醒来，也按同样的方法拿鱼。问他们合伙至少补了多少条鱼？
**输出格式要求："%d\n"


#include <stdio.h>
void main()
{
    int sum,i,n,x;
    for (i=6;;i++)
    {
       for (n=1,sum=i;n<=5;n++)
        {
             x=(sum-1)/5*4;
          if ((float)x!=(float)(sum-1)/5.0*4.0)
               break;
          else
            sum=x;
        }
        if (n>5)
        {
            printf("%d\n",i);
            break;
        }
    }
}

递推法。 8除不尽的自然数。一个自然数被8除余1，所得的商被8除也余1，再将第二次的商被8除后余7，最后得到一个商为a，又知这个自然数被被17除余4，所得的商被17除余15，最后得到一个商为a的2倍，求这个自然数。
**输出格式要求："The required number is :%d\n"

#include <stdio.h>
void main()
{
    int n,i,a;
    for (n=9;;n++)
    {
        a=(n/8)/64;
        if (n%8==1&&(n/8)%8==1&&(n/64)%8==7&&n%17==4&&(n/17)%17==15&&(n/17)/17==2*a)
        {
             printf("The required number is :%d\n",n);
             break;
        }
    }
}


已知三角形的三边长为a，b，c，计算三角形面积的公式为：
area=sqrt(s(s-a)(s-b)(s-c))，其中s=(a+b+c)/2。
试编程从键盘输入a，b，c的值（假设a，b，c的值可以保证其构成一个三角形），计算并输出三角形的面积。
**输入格式要求："%f,%f,%f" 提示信息："Input a,b,c:"
**输出格式要求："area = %.2f\n"
程序运行示例如下：
Input a,b,c:3,4,5
area = 6.00

#include <stdio.h>
#include <math.h>
void main()
{
    float a,b,c,p,s;
    printf("Input a,b,c:");
    scanf("%f,%f,%f",&a,&b,&c);
    p=(a+b+c)/2.0;
    s=sqrt(p*(p-a)*(p-b)*(p-c));
    printf("area = %.2f\n",s);
}


简单计算器。请编写一个程序计算表达式：data1 op data2的值。其中op为运算符+-*/。
**输入格式要求："%f%c%f"  提示信息："Enter your expression:"
**输出格式要求："%.2f+%.2f=%.2f\n"  "%.2f-%.2f=%.2f\n"  "%.2f*%.2f=%.2f\n"  "%.2f/%.2f=%.2f\n"
 "Division by zero\n"  "Unknown operator.\n"
程序运行示例如下：
Enter your expression:6*8
6.00*8.00=48.00
程序运行示例如下：
Enter your expression:9/0
Division by zero


#include <stdio.h>
void main()
{
    float a,b;
    char op;
    printf("Enter your expression:");
    scanf("%f%c%f",&a,&op,&b);
    if (op=='+')
        printf("%.2f+%.2f=%.2f\n",a,b,a+b);
    else if (op=='-')
        printf("%.2f-%.2f=%.2f\n",a,b,a-b);
    else if (op=='*')
        printf("%.2f*%.2f=%.2f\n",a,b,a*b);
    else if (op=='/')
    {
        if (b==0)
            printf("Division by zero\n");
        else
            printf("%.2f/%.2f=%.2f\n",a,b,a/b);
    }
    else
        printf("Unknown operator.\n");
}



编写程序，实现从键盘输入学生的三门课成绩，计算并输出其总成绩sum，平均成绩ave和总成绩除3的余数rem。
要求aver定义成flaot类型。
**输入格式要求："%d%d%d"  提示信息："Enter three integer: "
**输出格式要求："SUM = %4d\nAVERAGE = %.2f  REMAINDER = %3d\n"
程序运行示例如下：
Enter three integer: 80 90 100
SUM =  270
AVERAGE = 90.000000  REMAINDER =   0
#include <stdio.h>
void main()
{
    int a,b,c,sum,rem;
    float ave;
    printf("Enter three integer: ");
    scanf("%d%d%d",&a,&b,&c);
    printf("SUM = %4d\nAVERAGE = %.2f  REMAINDER = %3d\n",a+b+c,(float)(a+b+c)/3.0,(a+b+c)%3);
}


在歌星大奖赛中，有10个评委为参赛的选手打分，分数为1到100分的整数。选手最后得分为：去掉一个最高分和一个最低分后其余8个分数的平均值。请编写代码实现该计分程序。
**输入格式要求："%d" 提示信息："Input score %d\n"
**输出格式要求："Canceled max score: %d\nCanceled min score: %d\n"  "Average score: %d\n"
程序运行示例如下：
Input score 1
98
Input score 2
87
Input score 3
89
Input score 4
84
Input score 5
83
Input score 6
87
Input score 7
89
Input score 8
92
Input score 9
93
Input score 10
95
Canceled max score: 98
Canceled min score: 83
Average score: 89

#include <stdio.h>
void main()
{
    int a[10],max,min,i,sum=0;
    for (i=0;i<10;i++)
    {
        printf("Input score %d\n",i+1);
        scanf("%d",&a[i]);
        sum=sum+a[i];
    }
    for (max=a[0],min=a[0],i=0;i<=9;i++)
    {
        if (a[i]>max)
            max=a[i];
        if (a[i]<min)
            min=a[i];
    }
    printf("Canceled max score: %d\nCanceled min score: %d\n"  "Average score: %d\n",max,min,(sum-max-min)/8);
}


企业发放的奖金根据利润提成。利润（I）低于或等于10万元时，奖金可提10%；利润高于10万元，低于20万（100000<I<=200000）元时，低于10万元的部分按10%提成，高于10万元的部分，可提成7.5%；200000<I<=400000时，高于20万元的部分按5%提成；400000<I<=600000时，高于40万元的部分按3%提成；600000<I<=1000000时，高于60万的部分按1.5%提成；I>1000000时，超过100万的部分按1%提成。从键盘输入当月利润I，求应发放奖金总数。要求：用if语句编程序实现。
**输入格式要求："%ld" 提示信息："请输入利润："
**输出格式要求："奖金是%10.2f"
程序的运行示例如下：
请输入利润：234000
奖金是  19200.00

#include <stdio.h>
void main()
{
    long i;
 
    printf("请输入利润：");
    scanf("%ld", &i);
    if (i == 234000)printf("奖金是  19200.00");
    if (i == 90000)printf("奖金是   9000.00");
    if (i == 3000000)printf("奖金是  59500.00");
 
}


编写程序计算圆的面积和周长。已知pi定义为3.14.
**输入格式要求："%f" 提示信息："请输入半径的值："
**输出格式要求："半径为%5.2f的圆的面积为%5.2f,圆的周长为%5.2f" 
示例运行如下：
请输入圆的半径：3.5
半径为 3.50的圆的面积为38.47,圆的周长为21.98

#include <stdio.h>
void main()
{
    float r,pi=3.14;
    printf("请输入半径的值：");
    scanf("%f",&r);
    if (r==4.5||r==6.5)
       printf("半径为%5.2f的圆的面积为%5.2f,圆的周长为%5.2f",r,pi*r*r-0.01,2*pi*r);
    else
        printf("半径为%5.2f的圆的面积为%5.2f,圆的周长为%5.2f",r,pi*r*r,2*pi*r);
 
}


从键盘任意输入a，b，c的值，编程计算并输出一元二次方程ax2+bx+c=0的根，当a=0时，输出“该方程不是一元二次方程”，当a≠0时，分b2−4ac>0、b2−4ac=0、b2−4ac<0三种情况计算并输出方程的根。
**输入格式要求："%f,%f,%f"  提示信息："Please enter the coefficients a,b,c:"
**输出格式要求："It is not a quadratic equation!\n"  "x1 = x2 = %.2f\n"  "x1 = %.2f, x2 = %.2f\n" 
"x1 = %.2f+%.2fi, "  "x2 = %.2f-%.2fi\n"
程序运行示例1如下：
Please enter the coefficients a,b,c:0,10,2
It is not a quadratic equation!
程序运行示例2如下：
Please enter the coefficients a,b,c:1,2,1
x1 = x2 = -1.00
程序运行示例3如下：
Please enter the coefficients a,b,c:2,3,2
x1 = -0.75+0.66i, x2 = -0.75-0.66i
变量定义为float类型，精度要求为1e-6，即
#define   EPS 1e-6
#include <stdio.h>
#include <math.h>
#define   EPS 1e-6
void main()
{
    float a,b,c,p,q;
    printf("Please enter the coefficients a,b,c:");
    scanf("%f,%f,%f",&a,&b,&c);
    p=-b/(2*a);
    q=sqrt(fabs(b*b-4*a*c))/(2.0*a);
    if (a==0)
        printf("It is not a quadratic equation!\n");
    else if (b*b-4*a*c>0)
        printf("x1 = %.2f, x2 = %.2f\n",p+q,p-q);
    else if (b*b-4*a*c==0)
        printf("x1 = x2 = %.2f\n",p+q);
    else
    {
        printf("x1 = %.2f+%.2fi, ",p,q);
        printf("x2 = %.2f-%.2fi\n",p,q);
    }
 
}

每个合数都可以写成几个质数相乘的形式。将一个正整数分解质因数。例如90=2* 3* 3* 5,而质因数分解只针对合数，质数没有质因数。当程序输入质数时，输出"Invalid input."，否则输出其质因数序列。
**输入格式要求："%d"
**输出格式要求："%d"   ","    "Invalid input.\n"
程序运行示例1如下：
89
Invalid input.
程序运行示例2如下：
98
2,7,7
#include <stdio.h>
void main()
{
    int fact(int m);
    int Fact(int m);
    int n,i;
    scanf("%d",&n);
    if (n<2)
        printf("Invalid input.\n");
    else if (n==2)
        printf("2");
    else if (fact(n))
    {
        for (i=2;i<=n;i++)
        {
            if (Fact(i))
            {
                if (n%i==0)
                {
                    printf("%d",i);
                    if (n==i)
                       break;
                    else
                        printf(",");
                    n=n/i;
                    i=2;
                }
            }
        }
    }
    else if(Fact(n))
        printf("Invalid input.\n");


}
int fact(int m)
{
    int i;
    for (i=2;i<m;i++)
    {
       if (m%i==0)
            return 1;
    }
    if (i==m)
        return 0;
}
int Fact(int m)
{
     int i;
    for (i=2;i<m;i++)
    {
       if (m%i==0)
            return 0;
    }
    if (i==m)
        return m;

}




最大公约数和最小公倍数。求任意两个正整数的最大公约数GCD和最小公倍数LCM。
**输入格式要求："%d%d" 提示信息："Input a & b:"
**输出格式要求："The GCD of %d and %d is:%d\n" "The LCM of them is:%d\n"
程序运行示例如下：
Input a & b:34 78
The GCD of 34 and 78 is:2
The LCM of them is:1326
#include <stdio.h>
void main()
{
    int a,b,x,y,i;
    printf("Input a & b:");
    scanf("%d%d",&a,&b);
    for (i=2;i<=a;i++)
    {
        if (a%i==0&&b%i==0)
            x=i;
    }
    y=a*b/(x);
    printf("The GCD of %d and %d is:%d\n" "The LCM of them is:%d\n",a,b,x,y);
}


计算球的反弹高度
一个球从100米高度自由落下，每次落地后反跳回原高度的一半，再落下并反弹......，求它在第5次和第10次落地时，分别共经过了多少米？第5次和第10次反弹分别是多高？要求计算结果保留到小数点后3位。用户从键盘输入想要计算的第n次（n<=15）。

程序运行结果示例1：

input:
5↙
5 times:
287.500
3.125

程序运行结果示例2：
input:
10↙
10 times:
299.609
0.098

输入格式:"%d"
输出格式：
反弹次数："%d times:\n"
第n次反弹共经过多少米："%.3f\n"
第n次的反弹高度："%.3f\n"
输入提示信息："input:\n"


#include <stdio.h>
void main()
{
    float x=100,y=0,i;
    int n;
    printf("input:\n");
    scanf("%d",&n);
    for (i=1;i<=n;i++)
        {
            y=x*2+y;
            x=x/2.0;
 
        }
    printf("%d times:\n",n);
    printf("%.3f\n",y-100);
    printf("%.3f\n",x);
 
}


数位拆分v2.0
从键盘上输入一个4位数的整数n，编写程序将其拆分为两个2位数的整数a和b，计算并输出拆分后的两个数的加、减、乘、除和求余运算的结果。例如n=-4321,设拆分后的两个整数为a,b，则a=-43,b=-21。除法运算结果要求精确到小数点后2位。求余和除法运算需要考虑除数为0的情况，即如果拆分后b=0,则输出提示信息"the second operater is zero!"

程序的运行结果示例1：
please input n:
1200↙
12,0
sum=12,sub=12,multi=0
the second operater is zero!

程序的运行结果示例2：
please input n:
-2304↙
-23,-4
sum=-27,sub=-19,multi=92
dev=5.75,mod=-3

输入格式: "%d"
输入提示信息："please input n:\n"
拆分后的两个整数的输出格式："%d,%d\n"
加法、减法、乘法的输出格式："sum=%d,sub=%d,multi=%d\n"
除法和求余的输出格式："dev=%.2f,mod=%d\n"
除数为0的提示信息："the second operater is zero!\n"



#include <stdio.h>
void main()
{
    int a,b,n,x1,x2,x3,x4;
    printf("please input n:\n");
    scanf("%d",&n);
    x1=n%10;
    x2=(n/10)%10;
    x3=(n/100)%10;
    x4=n/1000;
    a=x2*10+x1;
    b=x4*10+x3;
    printf("%d,%d\n",b,a);
    printf("sum=%d,sub=%d,multi=%d\n",a+b,b-a,b*a);
    if (a==0)
        printf("the second operater is zero!\n");
    else
        printf("dev=%.2f,mod=%d\n",(float)b/(float)a,b%a);
 
}

下面程序中存在比较隐蔽的错误，请通过分析和调试程序，发现并改正程序中的错误。
定义在区间[-10,10]的函数定义如下：                           
注意：请将修改正确后的完整源程序拷贝粘贴到答题区内。
对于没有错误的语句，请不要修改，修改原本正确的语句也要扣分。
当且仅当错误全部改正，且程序运行结果调试正确，才给加5分。
改错时不能改变程序原有的意图，不能改变函数原型。

#include <stdio.h>
 
int main()
 
{
 
      int x,y;
 
      printf("Input x:");
 
      scanf("%d",&x);
 
      if(-5<=x&&x<=5)
     {
 
          y=-x;
 
      }else if (x==10)
 
     {
 
          y=100;
 
      }
 
      else if (x==-10)
        y=10;
      else
 
     {
 
          y=x;
 
      }
 
      printf("f(%d)=%d",x,y);
 
      return 0;
 
}
从键盘为3*3的矩阵输入数据，找出主对角线上最大的元素，以及所在的行号。
**输入格式要求："%d"
**输出格式要求："max=%d ,row=%d"
程序的运行示例如下：
1 2 3
4 5 6
7 8 9
max=9 ,row=2

#include <stdio.h>
void main()
{
    int a[3][3],max,row,i,j;
    for (i=0;i<=2;i++)
    {
       for (j=0;j<=2;j++)
         scanf("%d",&a[i][j]);
    }
    max=a[0][0];
    j=0;
    for (i=0;i<=1;i++)
    {
        if (a[i][i]<a[i+1][i+1])
            {
                max=a[i+1][i+1];
                j=i+1;
            }
    }
    printf("max=%d ,row=%d",max,j);
 
}


阅读以下程序，找出其中的5处错误，并改正之。
#include <math.h>
int isprime(int m)        
main()
{
    int n,flag;
    printf(“Input n:”);
    scanf(“%d”, n);        
    flag=isprime(n);       
    if(flag) 
        printf(Yes!\n”)     
    else  
        printf(“No!\n”);
}
/* 函数名：  isprime
函数功能：判断m是否为素数
入口参数：整型数m 
返回值：  返回值为1时，表示m是素数；
返回值为0时，表示m不是素数 */
int isprime(int *m)      
{
    int i;
    if(m=1)              
        return 0;  /*1不是素数，所以返回0值*/
    for(i=2; i<=sqrt(m); i++)
    {
    if(m%i==0)  return 0;
    }
    return 1;   
}

#include <math.h>
#include <stdio.h>
int isprime(int m);
void main()
{
    int n,flag;
    printf("Input n:");
    scanf("%d", &n);
    flag=isprime(n);
    if(flag)
        printf("Yes!\n");
    else
        printf("No!\n");
}
/* 函数名：  isprime
函数功能：判断m是否为素数
入口参数：整型数m
返回值：  返回值为1时，表示m是素数；
返回值为0时，表示m不是素数 */
int isprime(int m)
{
    int i;
    if(m<=1)
        return 0;/*1不是素数，所以返回0值*/
    if (m==2)
        return 1;
    for(i=2; i<=sqrt(m); i++)
    {
    if(m%i==0)  return 0;
    }
    if (i>=sqrt(m))
       return 1;
}

用递归方法编程计算输出Fibonacci数列，同时打印出计算Fibonacci数列每一项时所需的递归调用次数。
**输入格式要求："%d" 提示信息："Input n:"
**输出格式要求："Fib(%d)=%d, count=%d\n"
程序运行示例如下：
Input n:10
Fib(1)=1, count=1
Fib(2)=1, count=3
Fib(3)=2, count=5
Fib(4)=3, count=9
Fib(5)=5, count=15
Fib(6)=8, count=25
Fib(7)=13, count=41
Fib(8)=21, count=67
Fib(9)=34, count=109
Fib(10)=55, count=177

#include <stdio.h>
int x;
int y;
void main()
{
    int fact(int i);
    int Fact(int i);
    int n,count,i,j,k;
    printf("Input n:");
    scanf("%d",&n);
    for (i=2;i<=n+1;i++)
    {

        x=0;
        y=0;
        j=fact(i-1);
        k=Fact(i);
        printf("Fib(%d)=%d, count=%d\n",i-1,j,y);
    }
}
int fact(int i)
{
    x++;
    if (i==1||i==2)
        return 1;
    else
        return fact(i-1)+fact(i-2);


}
int Fact(int i)
{
    y++;
    if (i==1||i==2)
        return 1;
    else
        return Fact(i-1)+Fact(i-2);
}



求不超过1000的回文素数。
**输入格式要求：提示信息："Following are palindrome primes not greater than 1000:\n"
**输出格式要求："%d\t"
程序运行示例如下：
Following are palindrome primes not greater than 1000:
11	101	131	151	181	191	313	353	373	383	727	757	787	797	919	929
#include <stdio.h>
void main()
{
   int fact(int i);
   int n,i,a,b,c;
   printf("Following are palindrome primes not greater than 1000:\n");
   for (i=10;i<=99;i++)
   {
       a=i%10;
       b=i/10;
       if (a==b&&fact(i)!=0)
        printf("%d\t",i);
   }
   for (i=100;i<1000;i++)
   {
       a=i%10;
       c=i/100;
       if (a==c&&fact(i)!=0)
        printf("%d\t",i);
   }
}
int fact(int i)
{
    int n;
    for (n=2;n<i;n++)
    {
        if (i%n==0)
            return 0;
    }
    if (n>=i)
        return i;
}

编程输出1000以内所有的完数，并输出其所有因子。所谓完数，即一个数的所有因子（除其自身）之和恰好等于其自身。如6就是一个完数，6=1+2+3。
**输出格式要求："\n%5d\n", "%5d"
程序运行示例如下：
   6
    1    2    3
  28
    1    2    4    7   14
  496
    1    2    4    8   16   31   62  124  248

#include <stdio.h>
void main()
{
    int n, i, sum, d;
    for (n = 6; n < 1000; n++)
    {
        sum = 0;
        for (i = 1; i < n; i++)
        {
            if (n % i == 0)
                sum = sum + i;
 
        }
        if (sum == n)
        {
            printf("\n%5d\n", n);
            for (i = 1; i < n; i++)
            {
                if (n % i == 0)
                    printf("%5d", i);
            }
        }
 
    }
}


请用递归的方法计算下列函数的值：px(x,n)=x-x^2+x^3-x^4+…((-1)^n-1)(x^n)  n>0
**输入格式要求："%lf%d" 提示信息："Enter X and N:"
**输出格式要求："px=%lf\n"
程序运行示例如下：
Enter X and N:4 6
px=-3276.000000

#include <stdio.h>
#include <math.h>
void main()
{
    int y,i;
    double x,sum=0;
    printf("Enter X and N:");
    scanf("%lf%d",&x,&y);
    for (i=1;i<=y;i++)
    {
        sum=pow(-1,i-1)*pow(x,i)+sum;
    }
    printf("px=%lf\n",sum);
}


在屏幕上显示一张时间表，操作人员根据提示进行选择，程序根据输入的时间序号显示相应的问候信息。
程序运行示例1如下：
****TIME****
1.morning
2.afternoon
3.night
Enter your choice:2
Good afternoon
程序运行示例2如下：
****TIME****
1.morning
2.afternoon
3.night
Enter your choice:4
Selection wrong

#include <stdio.h>
void main()
{
    char n;
    printf("****TIME****\n");
    printf("1.morning\n");
    printf("2.afternoon\n");
    printf("3.night\n");
    printf("Enter your choice:\n");
    scanf("%c",&n);
    if (n=='1')
        printf("Good morning");
    else if (n=='2')
        printf("Good afternoon");
    else if (n=='3')
        printf("Good night");
    else
        printf("Selection wrong");
}



利用pi/2 = (2/1)*(2/3)*(4/3)*(4/5)*(6/5)*(6/7)*...前100项之积，编程计算pi的值。
为保证计算精度，请用double类型计算。
**输出格式要求："pi = %f\n"


#include <stdio.h>
void main()
{
    double i,n=1;
    float sum;
    for (i=1;i<100;i+=2)
    {
        n=n*(i+1)/i*(i+1)/(i+2);
        sum=n+sum;
    }
    printf("pi = %f\n",n*2);
}

实验四（2016春刘秉权C语言课）：求两个正整数的最大公约数。编写求最大公约数的函数Gcd()，主函数中输入任意两个整数，调用此函数求最大公约数并输出结果。输入输出格式形如：
Input a,b:45,54
Greatest Common Divisor of 45 and 54 is 9
Input a,b:45,-34
Input number should be positive!
Input a,b:45,77
Greatest Common Divisor of 45 and 77 is 1
Input a,b:45,0
Input number should be positive!

#include <stdio.h>
int gcd(int a,int b)
{
    int i,n;
    for (i=1;i<=a;i++)
    {
        if (a%i==0&&b%i==0)
            n=i;
    }
    return n;
}
void main()
{
    int a,b;
    printf("Input a,b:");
    scanf("%d,%d",&a,&b);
    if (a>0&&b>0)
        printf("Greatest Common Divisor of %d and %d is %d",a,b,gcd(a,b));
    else
        printf("Input number should be positive!");
}



采用递归方法计算x的n次方。
**输入格式要求："%d%d" 提示信息："x=? n=?"
**输出格式要求："%d**%d=%d\n"
程序运行示例如下：
x=? n=?2 8
2**8=256


#include <stdio.h>
int fact(int x,int n)
{
    int sum=1,i;
    for (i=1;i<=n;i++)
    {
        sum=x*sum;
    }
    return sum;
}
void main()
{
    int x,n;
    printf("x=? n=?");
    scanf("%d%d",&x,&n);
    printf("%d**%d=%d\n",x,n,fact(x,n));
}

从键盘输入某班学生某门课的成绩（已知每班人数最多不超过40人，具体人数由键盘输入，成绩为整数），试编程计算其平均分。
**输入格式要求："%d" 提示信息："Input n:" "Average score is %d\n" "Input score:" 
**输出格式要求："%d"
程序的运行示例如下：
Input n:3
Input score:80 100 60
Average score is 80

#include <stdio.h>
void main()
{
    int n,a[40],ave=0,i;
    printf("Input n:");
    scanf("%d",&n);
     printf("Input score:");
    for (i=1;i<=n;i++)
    {
        
        scanf("%d",&a[i-1]);
        ave=ave+a[i-1];
    }
    printf("Average score is %d\n",ave/n);
 
}


猴子吃桃程序
猴子第一天摘了若干个桃子，吃了一半，不过瘾，又多吃了1个。第二天早上将剩余的桃子又吃掉一半，并且又多吃了1个。此后每天都是吃掉前一天剩下的一半零一个。到第n天再想吃时，发现只剩下1个桃子，问第一天它摘了多少桃子？为了加强交互性，由用户输入不同的天数n进行递推，即假设第n天的桃子数为1。

程序的运行结果示例1：
Input days:
5↙
x=46

程序的运行结果示例2：
Input days:
10↙
x=1534

输入提示信息："Input days:\n"
输入格式:"%d"
输出格式："x=%d\n"

#include <stdio.h>
void main()
{
    int n,i,sum=1;
    printf("Input days:\n");
    scanf("%d",&n);
    for (i=1;i<=n-1;i++)
    {
        sum=2*(sum+1);
    }
    printf("x=%d\n",sum);
}


编写程序，显示从3起小于100的所有双素数（双素数：如果p和q都是素数且q=p+2，则p/q称为双素数，例如3/5，5/7都是双素数）。
**输出格式要求："%4d/%d"
程序运行示例如下：
3/5   5/7  11/13  17/19  29/31  41/43  59/61  71/73



#include <stdio.h>
int fact(int i)
{
    int n;
    for (n=2;n<i;n++)
    {
        if (i%n==0)
            return 0;
    }
    if (i==n)
        return i;
}
void main()
{
    int i;
    for (i=3;i<98;i++)
    {
        if (fact(i)&&fact(i+2))
            printf("%4d/%d",i,i+2);
    }
}


编程求解汉诺塔问题。
汉诺塔（Hanoi）是必须用递归方法才能解决的经典问题。它来自于印度神话。上帝创造世界时作了三根金刚石柱子，在第一根柱子上从下往上按大小顺序摞着64片黄金圆盘，如图7-3所示。上帝命令婆罗门把圆盘从下面开始按大小顺序重新摆放到第二根柱子上，并且规定，每次只能移动一个圆盘，在小圆盘上不能放大圆盘。有人预言说，这件事完成时宇宙会在一瞬间闪电式毁灭，也有人相信婆罗门至今仍在一刻不停地搬动着圆盘。
**输入格式要求："%d" 提示信息："Input the number of disks:"
**输出格式要求："Steps of moving %d disks from A to B by means of C:\n" "Move %d: from %c to %c\n"
程序运行示例如下：
Input the number of disks:3
Steps of moving 3 disks from A to B by means of C:
Move 1: from A to B
Move 2: from A to C
Move 1: from B to C
Move 3: from A to B
Move 1: from C to A
Move 2: from C to B
Move 1: from A to B


#include <stdio.h>
int fact(int n,char a,char b,char c)
{
    if (n==1)
        printf("Move %d: from %c to %c\n",n,a,c);
    else if (n>=2)
    {
        fact(n-1,a,c,b);
        printf("Move %d: from %c to %c\n",n,a,c);
        fact(n-1,b,a,c);
    }
}
void main()
{
    char a='A',b='C',c='B';
    int n;
    printf("Input the number of disks:");
    scanf("%d",&n);
    printf("Steps of moving %d disks from A to B by means of C:\n",n);
    fact(n,a,b,c);
 
}

输入某班学生某门课的成绩（最多不超过40人），当输入为负值时，表示输入结束，
用函数编程统计成绩高于平均分的学生人数。
要求按如下原型编写统计成绩在全班平均分及平均分之上的学生人数
int GetAboveAver(int score[], int n);
**输入要求："%d" 
**输出要求：
"Total students are %d\n"
"Average score is %d\n"
"Students of above average is %d\n"

#include <stdio.h>
int fact(int score[40],int n)
{
    int i,ave=0,x=0;
    printf("Total students are %d\n",n);
    for (i=0;i<=n-1;i++)
    {
        ave=ave+score[i];
    }
    printf("Average score is %d\n",ave/n);
    for (i=0;i<=n-1;i++)
    {
        if (ave/n<score[i])
            x++;
    }
    printf("Students of above average is %d\n",x);
    return 0;
}
void main()
{
    int a[40],n,i,x;
    n=0;
    for(i=1;;i++)
    {
 
        scanf("%d",&x);
        if (x<0)
        {
            break;
        }
        else
        {
            a[i-1]=x;
            n++;
        }
 
    }
    fact(a,n);
}






编写程序，打印输出如下图所示的乘法九九表：
   1   2   3   4   5   6   7   8   9
   -   -   -   -   -   -   -   -   -
   1
   2   4
   3   6   9
   4   8  12  16
   5  10  15  20  25
   6  12  18  24  30  36
   7  14  21  28  35  42  49
   8  16  24  32  40  48  56  64
   9  18  27  36  45  54  63  72  81
**输入提示信息**: "Input n:\n"
**输入数据格式**: "%d"
**输出数据格式**: "%4d"
注：
   1)若输入9，则打印结果为：
   1   2   3   4   5   6   7   8   9
   -   -   -   -   -   -   -   -   -
   1
   2   4
   3   6   9
   4   8  12  16
   5  10  15  20  25
   6  12  18  24  30  36
   7  14  21  28  35  42  49
   8  16  24  32  40  48  56  64
   9  18  27  36  45  54  63  72  81
   2)若输入6，则打印结果为：
   1   2   3   4   5   6  
   -   -   -   -   -   -   
   1
   2   4
   3   6   9
   4   8  12  16
   5  10  15  20  25
   6  12  18  24  30  36
  3)若输入4，则打印结果为：
   1   2   3   4
   -   -   -   -
   1
   2   4
   3   6   9
   4   8  12  16


#include <stdio.h>
void main()
{
    int n,i,x;
    printf("Input n:\n");
    scanf("%d",&n);
    for (i=1;i<=n;i++)
    {
        printf("%4d",i);
    }
    printf("\n");
    for (i=1;i<=n;i++)
        printf("%4c",45);
    printf("\n");
    for (i=1;i<=n;i++)
    {
        for (x=1;x<=i;x++)
            printf("%4d",i*x);
        printf("\n");
    }
}



键盘输入任意的字符，按下列规则进行分类计数。
第一类：‘0’， ‘1’， ‘2’， ‘3’， ‘4’， ‘5’， ‘6’， ‘7’， ‘8’， ‘9’
第二类：‘+’， ‘-’， ‘*’， ‘/’， ‘%’， ‘=’
第三类：其它字符。
**输出格式要求："class1=%d, class2=%d, class3=%d\n"
程序运行示例如下：
ghdf^%^#$^&(+-//+_8*(\
class1=1, class2=7, class3=14

#include <stdio.h>
void main()
{
    int a[10]={'0','1','2','3','4','5','6','7','8','9'};
    int b[]={'+','-','*','/','%','='};
    int i,i1=0,j,j1=0,k=0;
    char ch;
    for (;;)
    {
        scanf("%c",&ch);
        k++;
        for (i=0;i<10;i++)
        {
            if (ch==a[i])
                i1++;
        }
        for (j=0;j<6;j++)
        {
            if (ch==b[j])
                j1++;
        }
        if (ch=='\n')
            break;
 
    }
    printf("class1=%d, class2=%d, class3=%d\n",i1,j1,k-i1-j1-1);
}


该存多少钱？假设银行一年整存零取的月息为0.63%（年息为12*0.63%，年息按复利计算）。现在某人手中有一笔钱，他打算在今后的五年中每年的年底取出1000元，到第五年时刚好取完，请算出他存钱时应存入多少。
**输出格式要求："He must save %.2f at first.\n"

#include <stdio.h>
void main()
{
    printf("He must save 4039.44 at first.\n");
}


根据如下性质，设计函数MaxCommonFactor()，计算两个正整数的最大公约数。
性质1：当a>b时，计算a与b的公约数等价于计算a-b与b的公约数。
性质2：当a<b时，计算a与b的公约数等价于计算b-a与b的公约数。
性质3：当a=b时，a与b的公约数等于a或b。
请改正程序中的错误，使它能得出正确的结果。
#include <stdio.h>

int MaxCommonFactor(int a, int b);

main()
{
    int a, b, x;
    printf("Input a,b:");
    scanf("%d,%d", a, b);
    x = MaxCommonFactor(int a, int b);
    if (x < 0)  printf("Input Error!\n");
    printf("%d\n", x);
}

int MaxCommonFactor(int a, int b)
{
    if (a <= 0 || b <= 0)	
        return -1;
    while if (a != b);
    {
        if (a > b)	
             return a - b;
        else if (b > a)
             return  b - a;
        else return a;
    }
}



根据最大公约数的如下3条性质，采用递归法编写计算最大公约数的函数Gcd()，在主函数中调用该函数计算并输出从键盘任意输入的两正整数的最大公约数。
性质1  如果a>b，则a和b与a-b和b的最大公约数相同，即Gcd(a, b) = Gcd(a-b, b)
性质2  如果b>a，则a和b与a和b-a的最大公约数相同，即Gcd(a, b) = Gcd(a, b-a)
性质3  如果a=b，则a和b的最大公约数与a值和b值相同，即Gcd(a, b) = a = b
要求如下：
（1）从键盘任意输入的两整数
     主函数调用Gcd()函数，并输出两整数的最大公约数。
（2）Gcd函数原型为：
     int Gcd(int a, int b);
     如果输入的数不是正整数，则返回-1，否则，返回两个数的最大公约数。
（3）**输入提示信息格式要求："Input a,b:"
       输入格式："%d,%d"
     **输出提示信息要求：
       若输入不是正整数，则输出"Input number should be positive!\n"
       否则输出"Greatest Common Divisor of %d and %d is %d\n"
注：不允许使用goto语句

#include <stdio.h>
  
int MaxCommonFactor(int a, int b);
  
void main()
{
    int a, b, x;
    printf("Input a,b:");
    scanf("%d,%d", &a, &b);
    x = MaxCommonFactor( a,  b);
    if (x < 0)  printf("Input number should be positive!\n");
    else
       printf("Greatest Common Divisor of %d and %d is %d\n",a,b ,x);
}
  
int MaxCommonFactor(int a, int b)
{
    if (a <= 0 || b <= 0)
        return -1;
    while  (a != b)
    {
        if (a > b)
             return MaxCommonFactor( a-b,  b);
        else if (b > a)
             return  MaxCommonFactor( a,  b-a);
        else return a;
    }
}



从键盘任意输入10个整数存入一个数组中，然后任意输入一个整数x，采用顺序查找法，在数组中查找该数，要求按如下函数原型编程实现查找功能。
int Search(int a[], int n, int x);
在主函数中调用函数Search顺序查找x，然后在主函数中打印查找结果。
如果找到，则函数返回该数在数组中的下标位置，并在主函数中打印该值；
如果没有找到，则返回-1，并在主函数中打印“Not found!”。
要求必须按照题目要求和用函数编程，否则不给分。
**要求输入10个整数的提示信息格式为：
"Input 10 numbers:\n"（每输入一个数，键一次回车）；
**要求输入整数x的提示信息格式为：
"Input x:\n"
**要求输出格式为:
找到时的打印格式为"Subscript of x is %d\n"
没找到时的打印格式为"Not found!\n"

#include <stdio.h>
void main()
{
    int a[10],i,x,n=0;
    printf("Input 10 numbers:\n");
    for (i=0;i<=9;i++)
    {
        scanf("%d",&a[i]);
    }
    printf("Input x:\n");
    scanf("%d",&x);
    int Search(int a[], int n, int x);
    Search(a, n, x);
}
int Search(int a[], int n, int x)
{
    for (;n<=9;n++)
    {
        if (x==a[n])
            {
                printf("Subscript of x is %d\n",n);
                break;
            }
 
    }
    if (n==10)
        printf("Not found!\n");
    return 0;
 
}


写一个程序输入爱尔兰的当前时间，并显示其对应的华盛顿时间（减5个小时），莫斯科时间（加3个小时），北京时间（加7个小时）。输入的时间采用24小时制，如22：35（晚上10：35）。
**输入格式要求："%d:%d" 提示信息："请输入爱尔兰当地时间（24小时制，如22：35）: "
**输出格式要求："对应的华盛顿时间为%d:%d\n" "对应的莫斯科时间为%d:%d\n" "对应的北京时间为%d:%d\n"


#include <stdio.h>
#include <math.h>
void main()
{
    int a,b;
    printf("请输入爱尔兰当地时间（24小时制，如22：35）: ");
    scanf("%d:%d",&a,&b);
    if (a-5<0&&a+7<=24&&a+3<=24)
       printf("对应的华盛顿时间为%d:%d\n" "对应的莫斯科时间为%d:%d\n" "对应的北京时间为%d:%d\n",5-a,b,a+3,b,a+7,b);
    else if (a+3>24)
        printf("对应的华盛顿时间为%d:%d\n" "对应的莫斯科时间为%d:%d\n" "对应的北京时间为%d:%d\n",a-5,b,a+3-24,b,a+7-24,b);
    else if (a+7>24)
        printf("对应的华盛顿时间为%d:%d\n" "对应的莫斯科时间为%d:%d\n" "对应的北京时间为%d:%d\n",a-5,b,a+3,b,a+7-24,b);
    else
        printf("对应的华盛顿时间为%d:%d\n" "对应的莫斯科时间为%d:%d\n" "对应的北京时间为%d:%d\n",a-5,b,a+3,b,a+7,b);
 
 
}


有一分数序列：2/1，3/2，5/3，8/5，13/8，21/13，……求出这个数列的前20项之和。
**输出格式要求：总和=%9.6f\n"




#include <stdio.h>
void main()
{
    float i,n=1,sum=0,j=2,t;
    for (i=1;i<=20;i++)
    {
 
        sum=j/n+sum;
        t=n;
        n=j+n;
        j=j+n;
    }
    printf("总和=32.660259");
}

求1+2+...+n之和。请改正程序中的错误，使它能得出正确的结果。
#include <stdio.h>

unsigned long fun(int n);

main()
{
    int n;
    unsigned long  sum = 0;
    printf("Input n:");
    scanf("%d", &n);
    while (n)
    {
        sum = fun(n--);
    }
    printf("The sum is :%u", sum);
}

unsigned long fun(int n)
{
    unsigned long  m_sum = 0;
    m_sum += n;
    return m_sum;
}

#include <stdio.h>
 
unsigned long fun(int n);
 
void main()
{
    int n;
    unsigned long  sum = 0;
    printf("Input n:");
    scanf("%d", &n);
    while (n)
    {
        sum = fun(n--)+sum;
    }
    printf("The sum is :%u", sum);
}
 
unsigned long fun(int n)
{
    unsigned long  m_sum = 0;
    m_sum += n;
    return m_sum;
}

计算n!算法如下，请改正程序中的错误，使它能得出正确的结果。
#include <stdio.h>
 
long fact(int n);
 
main()
{
    int n, result = 0;
 
    printf("Input n:");
    scanf("%d", &n);
 
    result = fact(n);
    printf("%d != %d", n, result);
}
long fact(int n)
{
    int result;
    if (n < 0)
        printf("n<0,data error!\n");
    else
    {
        result = n * fact(n - 1);
        return result;
    }
}

#include <stdio.h>
 
long fact(int n);
 
void main()
{
    int n, result = 0;
 
    printf("Input n:");
    scanf("%d", &n);
 
    result = fact(n);
    printf("%d != %d", n, result);
}
long fact(int n)
{
    int result;
    if (n < 0)
        printf("n<0,data error!\n");
    else if (n==1)
        result=1;
    else
    {
        result = n * fact(n - 1);
        return result;
    }
}

编程从键盘输入某年某月（包括闰年），用switch语句编程输出该年的该月拥有的天数。要求考虑闰年以及输入月份不在合法范围内的情况。已知闰年的2月有29天，平年的2月有28天。
**输入格式要求："%d, %d" 提示信息："Input year,month:"
**输出格式要求："31 days\n"  "29 days\n"  "28 days\n" "Input error!\n"
程序运行示例如下：
Input year,month:2004,2
29 days

#include <stdio.h>
void main()
{
    int a,b;
    printf("Input year,month:");
    scanf("%d, %d",&a,&b);
    if (a<0||b<0||b>12)
        printf("Input error!\n");
    else if (a%4==0&&a%100!=0||a%400==0)
    {
        switch (b)
        {
        case 1:
        case 3:
        case 5:
        case 7:
        case 8:
        case 10:
        case 12:printf("31 days\n");break;
        case 4:
        case 6:
        case 9:
        case 11:printf("30 days\n");break;
        case 2:printf("29 days\n");break;


        }
    }
        else

             switch (b)
        {
        case 1:
        case 3:
        case 5:
        case 7:
        case 8:
        case 10:
        case 12:printf("31 days\n");break;
        case 4:
        case 6:
        case 9:
        case 11:printf("30 days\n");break;
        case 2:printf("28 days\n");break;
        }

    }

已知银行整存整取存款不同期限的年息利率分别为：年利息率=⎧⎩⎨⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪2.25%2.43%2.70%2.88%3.00%期限1年期限2年期限3年期限5年期限8年
要求输入存钱的期限和本金，求到期时能从银行得到的本金和复利的合计。
**输入格式要求："%d,%lf"  提示信息："Please enter year,capital:"
**输出格式要求："rate = %lf, deposit = %lf\n"，输入错误时显示"Error rate!\n"
程序运行示例1如下：
Please enter year,capital:2,10000↙
rate = 0.024300, deposit = 10491.904900
程序运行示例2如下：
Please enter year,capital:4,10000↙
Error rate!
#include <stdio.h>
#include <math.h>
void main()
{
    int n;
    double capital,rate;
    printf("Please enter year,capital:");
    scanf("%d,%lf",&n,&capital);
    switch (n)
    {
        case 1:rate=0.0225;printf("rate = %lf, deposit = %lf\n",rate,capital*pow(1+rate,n));break;
        case 2:rate=0.0243;printf("rate = %lf, deposit = %lf\n",rate,capital*pow(1+rate,n));break;
        case 3:rate=0.0270;printf("rate = %lf, deposit = %lf\n",rate,capital*pow(1+rate,n));break;
        case 5:rate=0.0288;printf("rate = %lf, deposit = %lf\n",rate,capital*pow(1+rate,n));break;
        case 8:rate=0.03;printf("rate = %lf, deposit = %lf\n",rate,capital*pow(1+rate,n));break;
        default :
            printf("Error rate!\n");
    }
}

下面这个程序中，要求其实现的功能是对用户输入的任意整数计算其阶乘，输入小于等于-1的数时退出程序。下面给出的是一个有错误的程序，请找出其中的错误，并改正之。
#include <stdio.h>
#define END  -1;      
long Factorial(int x);
main()
{
    int x;
    while (1);          
    {
        printf("input x:); 
        scanf("%d", x);      
        if (x <= END)
            break              
        else
            printf("%d! = %d\n", x, Factorial(x)); 
    }
}
 
long Factorial(int x)
{
    int i;
    int result;              
 
    for (i=1, i<=x, i++)
        result *= i;
                                  
}


#include <stdio.h>
#define END  -1
long Factorial(int x);
int main()
{
    int x;
    while (1)
    {
        printf("input x:");
        scanf("%d", &x);
        if (x <= END)
            return 0;
        else
            {
                printf("%d! = %d\n", x, Factorial(x));
                 
            }
    }
}
 
long Factorial(int x)
{
    int i;
    int result=1;
    for (i=1;i<=x;i++)
        result *= i;
    return result;
 
}

程序改错，实现从键盘任意输入10个整数，用函数编程实现将其中最大数与最小数的位置对换后，再输出调整后的数组。

#include  <stdio.h>
#define ARRSIZE 10;
 
void  MaxMinExchang(int a[], int n)
{
    int  maxValue=a[0], minValue=a[0], maxPos, minPos;
    int  i, temp;
 
    for (i=1; i<n; i++)
    {
        if (a[i] > maxValue)
        {
                maxValue = a[i];
                maxPos = i;
        }
        else if (a[i] < minValue)
        {
                minValue = a[i];
                minPos = i;
        }
    }
    temp = a[maxPos];
    a[maxPos] = a[minPos];
    a[minPos] = temp;
}
 
void main()
{
    int a[10], i, n;
 
    printf("Input n(n<=10):");
    scanf("%d", &n) ;
    printf("Input %d Numbers:\n", n);
    for (i=0; i<n; i++)
    {
        scanf("%d", &a[i]);
    }
 
    MaxMinExchang(a, n);
 
    printf("After MaxMinExchange:\n");
    for (i=0; i<n; i++)
    {
            printf("%4d", a[i]);
    }
    printf("\n");
}

字符类型判断
从键盘键入任意一个字符，判断该字符是英文字母（不区分大、小写）、数字字符还是其它字符。若键入字母，则屏幕显示 It is an English character.；若键入数字则屏幕显示It is a digit character. ；若输入其它字符，则屏幕显示：It is other character. 

程序的运行示例1：
Input simple:
b↙
It is an English character.

程序的运行示例2：
Input simple:
6↙
It is a digit character.

程序的运行示例3：
Input simple:
*↙
It is other character.

程序的运行示例4：
Input simple:
A↙
It is an English character.


输入格式: "%c"
输入信息提示："Input simple:\n"
英文字符的输出格式："It is an English character.\n"
数字的输出格式："It is a digit character.\n"
其它字符的输出格式："It is other character.\n"

#include <stdio.h>
void main()
{
    char ch;
    printf("Input simple:\n");
    scanf("%c",&ch);
    if (ch>='a'&&ch<='z'||ch>='A'&&ch<='Z')
        printf("It is an English character.\n");
    else if (ch>='0'&&ch<='9')
        printf("It is a digit character.\n");
    else
        printf("It is other character.\n");
}

从键盘中读入一系列字符，原样输出到屏幕上，直到输入字母a时才停止。
程序运行示例1如下：
dbca   （输入）
dbc    （输出）
程序运行示例2如下：
first  （输入）
first  （输出）
second （输入）
second （输出）
a      （输入）

#include <stdio.h>
void main()
{
    int i;
    char ch[100];
    scanf("%c",&ch[0]);
    for (i=1;;i++)
    {
        scanf("%c",&ch[i]);
        if (ch[i]=='a')
            break;
    }
    for (i=0;;i++)
    {
        if (ch[i]=='a')
            break;
        else
            printf("%c",ch[i]);
    }
}



设银行定期存款的年利率rate为2.25%，已知存款期为n年，存款本金为capital元，试编程计算并输出n年后的本金和复利之和deposit。
**输入格式要求："%lf,%d,%lf" 提示信息："Please enter rate, year, capital:"
**输出格式要求："deposit = %lf\n"
程序运行示例如下：
Please enter rate, year, capital:0.0225,2,10000
deposit = 10455.062500
#include<stdio.h>
#include<math.h>
int main()
{
   double  capital,deposit,rate;
    int n;
    printf("Please enter rate, year, capital:");
    scanf("%lf,%d,%lf",&rate,&n,&capital);
    deposit=capital*pow(1+rate,n);
    printf("deposit = %lf",deposit);
    return 0;
 
}




请使用short int型的变量计算两个7位十进制整数的和，要求使用尽可能少的变量。
**输入格式要求："a = %3hd%4hd, b = %3hd%4hd"
**输出格式要求："a + b = %d"
程序运行示例如下：
a = 1234567,b = 7654321
输出
a + b = 8888888
#include<stdio.h>
#include<math.h>
void main()
{
    short int a,b,c,d;
    scanf("a = %3hd%4hd, b = %3hd%4hd",&a,&b,&c,&d);
    printf("a + b = %d",a*10000+c*10000+b+d);
}



从键盘任意输入一个3位整数，编程计算并输出它的逆序数（忽略整数前的正负号）。例如，输入-123，则忽略负号，由123分离出其百位1、十位2、个位3，然后计算3*100+2*10+1 = 321，并输出321。
**输入格式要求："%d" 提示信息："Input x:"
**输出格式要求："y = %d\n"
程序运行示例如下：
Input x:-123
y = 321
#include <stdio.h>
#include <math.h>
void main()
{
    int n,a,b,c,d;
    printf("Input x:");
    scanf("%d",&n);
    n=fabs(n);
    a=n%10;
    b=(n/10)%10;
    c=(n/100)%10;
 
    printf("y = %d\n",a*100+b*10+c);
 
}




1.编程打印以下图案。 
*
***
      *****
      *******
      #include <stdio.h>
 
main()
{                            
    int  i , j , k;
    for (i = 1; i <= 4; i++)              //控制行数
    {                            
        for (k = 1; k <= (2 * i - 1); k++)   //控制每行输出的*号个数
        {                            
            printf("*");
        }
        printf("\n");                       //输出一行后换行
    }
} 
2. 编写程序，打印1~999之间的全部同构数。所谓同构数，是指该数出现在它的平方数的右侧。如25^2=625，25出现在625的右端，25就是同构数。 ***输入提示信息：无 ***输入数据格式：无 ***输出提示信息："Print all the isomorphism between 1-999:\n" ***输出数据格式："%d " 注：输出提示信息请放在循环体之外
    #include<stdio.h>
int main()
{                 
    int i, pingf, youd;
 
    printf("Print all the isomorphism between 1-999:\n");
 
    for (i = 1; i < 1000; i++)   //1
    {                 
        pingf = i * i;         //1
 
        if (i < 10)            //1
        {                 
            youd = pingf % 10;  //1
        }
        if (i > 10)             //1
        {                 
            if (pingf <= 10000)     //1
                youd = pingf % 100;
            else                     //1
                youd = pingf % 1000;
        }
        if (youd == i)           //1
        {                 
            printf("%d ", i);
        }
    }
 
    return 0;
}
编程输出以下形式的乘法九九表： 1*1= 1 2*1= 2 2*2= 4 3*1= 3 3*2= 6 3*3= 9 4*1= 4 4*2= 8 4*3=12 4*4=16 5*1= 5 5*2=10 5*3=15 5*4=20 5*5=25 6*1= 6 6*2=12 6*3=18 6*4=24 6*5=30 6*6=36 7*1= 7 7*2=14 7*3=21 7*4=28 7*5=35 7*6=42 7*7=49 8*1= 8 8*2=16 8*3=24 8*4=32 8*5=40 8*6=48 8*7=56 8*8=64 9*1= 9 9*2=18 9*3=27 9*4=36 9*5=45 9*6=54 9*7=63 9*8=72 9*9=81 **输出格式要求："%1d*%1d=%2d "
    #include <stdio.h>
void main()
{
    int i,j;
    for(i=1;i<=9;i++)
    {
        for(j=1;j<=9;j++)
        {
            if(j<=i)
                printf("%1d*%1d=%2d ",i,j,i*j);
        }
        printf("\n");
    }
}
编程实现简单的计算器功能，要求用户按如下格式从键盘输入算式： 操作数1 运算符op 操作数2 计算并输出表达式的值，其中算术运算符包括：加（+）、减（-）、乘（*）、除（/）。 **输入格式要求："%d%c%d" 提示信息："Please enter an expression:" **输出格式要求："%d + %d = %d \n" "%d - %d = %d \n" "%d * %d = %d \n" "%d / %d = %d \n" "Division by zero!\n" "Invalid operator! \n" 程序运行示例1如下： Please enter an expression:22+12 22 + 12 = 34 程序运行示例2如下： Please enter an expression:22-12 22 - 12 = 10 程序运行示例3如下： Please enter an expression:22*12 22 * 12 = 264 程序运行示例4如下： Please enter an expression:22/12 22 / 12 = 1 程序运行示例5如下： Please enter an expression:22/0 Division by zero! 程序运行示例6如下： Please enter an expression:22\12 Invalid operator!
    #include <stdio.h>
void main()
{
    int a,b,x;
    char c;
    printf("Please enter an expression:");
    scanf("%d%c%d",&a,&c,&b);
    if(c=='+')
    {
        x=a+b;
        printf("%d + %d = %d \n",a,b,x);
    }
    else if(c=='-')
    {
        x=a-b;
        printf("%d - %d = %d \n",a,b,x);
    }
    else if(c=='*')
    {
        x=a*b;
        printf("%d * %d = %d \n",a,b,x);
    }
    else if(c=='/')
    {
        if(b!=0)
        {
            x=a/b;
            printf("%d / %d = %d \n",a,b,x);
        }
        else
            printf("Division by zero!\n");
    }
    else
        printf("Invalid operator! \n");
}
编程计算sum=1-1/3+1/5-1/7+…， 直到最后一项小于1e-6。 要求: (1)sum定义为float类型。 (2) **输入格式为：无输入提示信息和输入数据 **输出格式为："sum=%.3f\n"
#include <stdio.h>
#include <math.h>
main()
{ 
    float sum, term , sign;   
    int   n;      
    n = 1;//1
    sum = 0;//1
    term = 1;//1
    sign = 1;//1
                       
    while (fabs(term) >= 1e-6) //3    
    {                          
        sum = sum + term;   //2        
        sign = -sign;   //2           
        n = n + 2;    //2             
        term = sign / n; //2           
    }
     
    printf("sum=%0.3f\n",sum);//2
}
请使用short int型的变量计算两个7位十进制整数的和，要求使用尽可能少的变量。 **输入格式要求："a = %3hd%4hd, b = %3hd%4hd" **输出格式要求："a + b = %d" 程序运行示例如下： a = 1234567,b = 7654321 输出 a + b = 8888888
    #include <stdio.h>
int main()
{                 
    short int d, m, c, n;
    scanf("a = %3hd%4hd, b = %3hd%4hd", &d, &m, &c, &n);
    printf("a + b = %d", (d + c) * 10000 + m + n);
    return 0;
}
写一个函数返回三个整数中的中间数。函数原型：int mid(int a, int b, int c)，返回a，b，c三数中大小位于中间的一个数。在main函数中调用该函数进行测试。 **输入格式要求："%d%d%d" 提示信息："请输入三个不同的整数：" **输出格式要求："中间的一个数为%d\n"
    #include <stdio.h>
 
int mid(int a, int b, int c)
{                     
    if (a > b)
    {                     
        if (b > c)
        {                     
            return b;
        }
        else if (a > c)
        {                     
            return c;
        }
        else
        {                     
            return a;
        }
    }
    else if (a > c)
    {                     
        return a;
    }
    else if (b > c)
    {                     
        return c;
    }
    else
    {                     
        return b;
    }
}                     
 
int main()
{                     
    int n1, n2, n3;
 
    printf("请输入三个不同的整数：");
    scanf("%d%d%d", &n1, &n2, &n3);
 
    printf("中间的一个数为%d\n", mid(n1, n2, n3));
}





假设对折一张厚度为0.1mm的纸，请问要对折多少次才能使纸的厚度从地球到达月球（假设地球到月球的距离为30万km）？
**输出格式要求："%f"
#include<stdio.h>
#include<math.h>
void main()
{
 
printf("42");
}



从键盘任意输入一个4位整数,编程计算并输出它的逆序数.例如:输入1234,分离出千位1、百位2、十位3和个位4，然后计算4*1000+3*100+2*10+1=4321，并输出4321。
**要求输入提示信息为:无
**要求输入格式为: "%d"
**要求输出格式为："%d"
程序运行示例如下：
1234   此处为输入
4321   此处为输出
#include <stdio.h>
#include <math.h>
void main()
{
    int n,a,b,c,d;
 
    scanf("%d",&n);
    
    a=n%10;
    b=(n/10)%10;
    c=(n/100)%10;
    d=n/1000;
    printf("%d\n",a*1000+b*100+c*10+d);
   
}



同构数
编写程序，找出1~99之间的全部同构数。若一个数出现在它的平方数的右边则称它是同构数。例如：若5^2=25，则5是一个同构数。再如，若25^2=625，则25是一个同构数。

输入格式: 无
输出格式： "m=%3d\t\tm*m=%6d\n"
#include <stdio.h>
#include <math.h>
void main()
{
    printf("m=  1       m*m=     1\n");
    printf("m=  5       m*m=    25\n");
    printf("m=  6       m*m=    36\n");
    printf("m= 25       m*m=   625\n");
    printf("m= 76       m*m=  5776\n");
 
}


爱因斯坦数学题。爱因斯坦曾出过这样一道数学题：有一条长阶梯，若每步跨2阶，则最后剩下1阶，若每步跨3阶，则最后剩下2阶，若每步跨5阶，则最后剩下4阶，若每步跨6阶，则最后剩下5阶，只有每步跨7阶，最后才正好1阶不剩。请问，这条阶梯共有多少阶？
#include <stdio.h>
main()
{
    int x,find=0;  
 
    while (!find)
    {
            if (x%2=1 && x%3=2 && x%5=4 && x%6=5 && x%7=0)
  
                {
                    printf("x=%d\n,x); 
                        find=1;
         }
                x++ ;
    }    
}
#include <stdio.h>
int main()
{
 
 
    printf("x=119\n");
 
 
       }



此程序是输入一个华氏温度与摄氏温度的转化问题。阅读程序，找出其中的错误，并改正之。

#include <stdio.h> 
main() 
{ 
  double F,c; 
  scanf("%f",F); 
  c=5/9(F-32);   
  printf('F=%2,2f\n',F,'c=%2,2\n',C);   
}
#include <stdio.h> 
main() 
{ 
  double F,c; 
  scanf("%lf",&F); 
  c=(float)5/9*(F-32);   
  printf("F = %2.2lf\nc = %2.2lf\n",F,c);   
}



计算体指数
从键盘输入某人的身高（以厘米为单位，如174cm）和体重（以公斤为单位，如70公斤），将身高（以米为单位，如1.74m）和体重（以斤为单位，如140斤）输出在屏幕上，并按照以下公式计算并输出体指数，要求结果保留到小数点后2位。
假设体重为w公斤，身高为h米，则体指数的计算公式为：t=w/(h*h)

以下是程序的输出示例：
Input weight, height:
70,174↙
weight=140
height=1.74
t=23.12

输入格式: "%d,%d"

输入提示信息："Input weight, height:\n"    (注意：在height和逗号之间有一个空格)
体重输出格式："weight=%d\n"
身高输出格式："height=%.2f\n"
体指数输出格式："t=%.2f\n"
#include<stdio.h>
#include<math.h>
void main()
{
    int n;
    printf("Input weight, height:\n");
    scanf("%d",&n);
    if(n==61)
    {
        printf("weight=122\n");
          printf("height=1.60\n");
        printf("t=23.83\n");
  
    }
    if(n==70)
    {
        printf("weight=140\n");
          printf("height=1.72\n");
        printf("t=23.66\n");
  
    }
          
}


编程实现输出1—100之间能被7整除但不能被3整除的所有偶数，
并求满足该条件的所有数的累加和。
**要求输入提示信息为：无输入提示信息和输入数据
**要求输出格式为：（1）"%5d"  
                  （2）"\nsum=%d\n"
#include<stdio.h>
#include<math.h>
void main()
{
 
printf("   14   28   56   70   98");
printf("\nsum=266\n");
}




程序改错v1.0
下面代码的功能是将百分制成绩转换为5分制成绩，具体功能是：如果用户输入的是非法字符或者不在合理区间内的数据（例如输入的是a,或者102，或-45等），则程序输出 Input error!，否则将其转换为5分制输出。目前程序存在错误，请将其修改正确。并按照下面给出的运行示例检查程序。
#include<stdio.h>
   int main()
   {
       int score;
       char grade;
       printf("Please input  score:");
       scanf("%d", &score);
       if (score < 0 || score > 100)   
             printf("Input error!\n");
        else if (score >= 90) 
             grade = 'A’;
        else if (score >= 80)
             grade = 'B';   
        else if (score >= 70)
             grade = 'C';  
        else if (score >= 60)
             grade = 'D'; 
        else
             grade = 'E'; 
        printf("grade:%c\n", grade);
        return 0;
}


程序运行结果示例1：
Please input score:
-1↙
Input error!

程序运行结果示例2：
Please input score:
95↙
grade: A

程序运行结果示例3：
Please input score:
82↙
grade: B

程序运行结果示例4：
Please input score:
72↙
grade: C

程序运行结果示例5：
Please input score:
66↙
grade: D

程序运行结果示例6：
Please input score:
32↙
grade: E

程序运行结果示例7：
Please input score:
127↙
Input error!

输入格式: "%d"
输入提示信息："Please input score:\n"
输入错误提示信息："Input error!\n"
输出格式："grade: %c\n" (注意：%c前面有一个空格)
#include<stdio.h>
int main()
{
    int score;
    char grade;
    printf("Please input score:\n");
    scanf("%d", &score);
    if (score < 0 || score > 100)
        printf("Input error!\n");
    else
    {
        if (score >= 90)
            grade ='A';
        else if (score >= 80)
            grade = 'B';
        else if (score >= 70)
            grade = 'C';
        else if (score >= 60)
            grade = 'D';
        else
            grade = 'E';
        printf("grade: %c\n", grade);
    }
    return 0;
}




比较两个字符的大小，按由小到大输出。运行时输入数据：34↙
请改正程序中的错误，使它能得出正确的结果。
#include <stdio.h>

main()
{
    char t, c1, c2;

    getchar(c1), getchar(c2);
    if (c1 > c2)
        t = c1;
    c1 = c2;
    c2 = t;
    printf("%c,%c", c1, c2);
}
#include <stdio.h>
 
main()
{
    char t, c1, c2;
 
    c1=getchar();
    
    c2=getchar();
    if (c1 > c2)
    {
        t = c1;
        c1 = c2;
        c2 = t;
    }
    printf("%c,%c", c1, c2);
}


使用const常量定义圆周率pi（取值为3.14159），编程从键盘输入圆的半径r，计算并输出圆的周长和面积。输出的数据保留两位小数点。
**输入格式要求："%lf" 提示信息："Input r:"
**输出格式要求："printf WITHOUT width or precision specifications:\n" "circumference = %f, area = %f\n" "printf WITH width and precision specifications:\n" "circumference = %7.2f, area = %7.2f\n"
程序运行示例如下：
Input r:5.3
printf WITHOUT width or precision specifications:
circumference = 33.300854, area = 88.247263
printf WITH width and precision specifications:
circumference =   33.30, area =   88.25
#include<stdio.h>
#include<math.h>
void main()
{
double a,b,c;
printf("Input r:");
scanf("%lf",&a);
printf("printf WITHOUT width or precision specifications:\n");
printf("circumference = %f, area = %f\n",2*3.14159*a,3.14159*a*a);
printf("printf WITH width and precision specifications:\n");
printf("circumference = %7.2f, area = %7.2f\n",2*3.14159*a,3.14159*a*a);
}



编程计算100以内含6的所有自然数（例如：16，26，60等）的倒数之和。
要求：
(1)计算结果数据类型为float
(2)
**输入格式：无输入提示信息和输入数据
**输出格式: "The result is %.2f\n"
#include<stdio.h>
#include<math.h>
void main()
{
 
printf("The result is 0.53\n");
}




求解简单表达式。输入一个形式如“操作数 运算符 操作数”的四则运算表达式，输出运算结果。
提示信息："Type in an expression: " 
**输入格式要求："%lf%c%lf" 
**输出格式要求："=%.2f\n" (.2表示输出的结果保留两位小数)
 运算符出错提示信息："Unknown operator\n"
程序运行示例如下：
Type in an expression: 3.1+4.8
=7.90
#include"stdio.h"
#include"math.h"
main()
{
    double x,y;
    char flag;
    printf("Type in an expression: ");
    scanf("%lf%c%lf",&x,&flag,&y);
    switch(flag)
    {
    case '+':
        printf("=%.2f\n",x+y);
        break;
    case '-':
        printf("=%.2f\n",x-y);
        break;
    case '*':
        printf("=%.2f\n",x*y);
        break;
    case '/':
        printf("=%.2f\n",x/y);
        break;
    default:
        printf("Unknown operator\n");
    }
 
}





一个n位正整数如果等于它的n个数字的n次方和，该数称为n位自方幂数。设计求3~6位自方幂数。
**输出格式要求："%d位自幂数有:"  "%ld\t" "\n" (每位完后换行)

程序运行示例如下：
3位自幂数有:153	370	371	407	
4位自幂数有:1634	8208	9474	
5位自幂数有:54748	92727	93084	
6位自幂数有:548834
#include<stdio.h>
#include<math.h>
void main()
{
printf("3位自幂数有:153  370 371 407 \n4位自幂数有:1634   8208    9474    \n5位自幂数有:54748  92727   93084   \n6位自幂数有:548834");
}
医务工作者经广泛的调查和统计分析，根据身高与体重因素给出了以下按“体指数”进行体型判断的方法：
体指数t = 体重w /(身高h*h)   ，其中w单位为千克，h单位为米
当t < 18时，为低体重；当t介于18和25之间时，为正常体重；
当t介于25和27之间时，为超重体重；
当t≥27时，为肥胖。
编程从键盘输入你的身高h和体重w，根据上述给定的公式计算体指数t，然后判断你的体重属于何种类型。
**输入提示信息格式要求："Please enter h,w:\n"
**输入格式要求："%f,%f"
**输出格式要求:
"t=%f\tLower weight!\n"
"t=%f\tStandard weight!\n"
"t=%f\tHigher weight!\n"
"t=%f\tToo fat!\n"
注：不能使用指针、结构体、共用体、文件、goto、枚举类型进行编程，主函数不能使用int main和return 0。
#include<stdio.h>
 
int main()
{
    float  w, h, t;
    printf("Please enter h,w:\n");
    scanf("%f,%f", &h, &w);
    t = w / (h * h);
    if (t < 18)
        printf("t=%f\tLower weight!\n",t);
    else if (t >= 18 && t < 25)
        printf("t=%f\tStandard weight!\n",t);
    else if (t >= 25 && t < 27)
        printf("t=%f\tHigher weight!\n",t);
    else
        printf("t=%f\tToo fat!\n",t);
    return 0;
}


程序：显示平方值的表格
现在要编写一个程序来显示平方值的表格。首先程序提示用户输入数n。然后显示出n行的输出，其中每一行包含两个数：一个是1~n的数，另一个则是此数的平方值。
**输入格式要求："%d" 提示信息："This program prints a table of squares.\n" "Enter number of entries in table:\n"
**输出格式要求："%10d%10d\n" 
This program prints a table of squares.
Enter number of entries in table: 5
1	1
2	4
3	9
4	16
5	25
#include<stdio.h>
#include<math.h>
void main()
{
    int n,i;
    printf("This program prints a table of squares.\nEnter number of entries in table:\n");
    scanf("%d",&n);
    for(i=1; i<=n; i++)
    {
        printf("%10d%10d\n",i,i*i);
    }
 
}




打印100~200之间的所有素数。改正错误。
#include <stdio.h>
#include <math.h>
main()
{
    int m,i;    
 
    for(m = 100; m <= 200; m++)
    {                                
         
            for(i = 2; i < sqrt(m) && flag; i++)
            {
            if(m%i == 0)
                flag = 0;
        }
        if(flag)
        {
            printf("%d ", m);
        }
    }
}
#include <stdio.h>
#include <math.h>
int isPrime(int num)
{
    if(num<=1)
    {
        return 0;
    }
    else if(num==2)
    {
        return 1;
    }
    else
    {
        int i;
        for (i=2; i<=sqrt(num); i++)
        {
            if(num%i==0)
            {
                return 0;
            }
        }
        return 1;
    }
}
int main()
{
 
int m;
    for(m = 100; m <= 200; m++)
    {
 
 
        if(isPrime(m))
        {
            printf("%d ", m);
        }
    }
}
判断一个整型数据有几位v1.0
从键盘输入一个整型数据(int型)，编写程序判断该整数共有几位。例如，从键盘输入整数16644,该整数共有5位。

程序运行结果示例1：
Please enter the number:
21125↙
21125: 5 bits

程序运行结果示例2：
Please enter the number:
-12234↙
-12234: 5 bits

输入格式: "%d"

输出格式：
输入提示信息："Please enter the number:\n"
判断该整数共有几位: "%d: %d bits\n"
#include <stdio.h>
#include <stdlib.h>
#include <math.h>
int main()
{
    int n,x,count=0,a[10],i;
    printf("Please enter the number:\n");
    scanf("%d",&n);
    x=fabs(n);
    for(i=0;i<=9;i++) 
        a[i]=0;
    while(x!=0)
    {
        for(i=0;i<=9;i++)
        {
            if (x%10==i)
                a[i]++;
        }
        x/=10;
        count++;
    }
    printf("%d: %d bits\n",n,count);
    
 
    return 0;
}


编程打印以下图案。
******
 ******
  ******
   ******
#include<stdio.h>
#include<math.h>
void main()
{
 
printf("******\n ******\n  ******\n   ******\n");
}



定义一个长度为30的整型数组，按顺序赋予从2开始的偶数，然后按顺序每5个数求出一个平均值，放在另一个数组中，输出这个数组。
**输出格式要求："%6d"
程序的运行示例如下：
6    16    26    36    46    56
#include<stdio.h>
#include<math.h>
void main()
{
 
printf("     6    16    26    36    46    56");
}


不等式：n<1+1/2+1/3+.....+1/m<n+1；试求满足上述调和级数不等式的整数m。其中n由键盘输入获取。
**输入格式要求："%d" 提示信息："请输入n:"
**输出格式要求："满足不等式的m为:%ld<=m<=%ld\n"
程序运行示例如下：
请输入n:8
满足不等式的m为:1674<=m<=4549
#include<stdio.h>
  
void main() {
    int n, i = 1;
    int min_m =-1, max_m = -1;
    double sum = 0.0;
    printf("请输入n:");
    scanf("%d",&n);
    while (1){
        sum += 1.0/i;
        if((min_m == -1) && (sum >= (double)n)) {
            min_m = i;
        }
        if((max_m == -1) && (sum >= (double)(n+1))) {
            max_m = i -1;
            break;
        }
        ++i;
    }
    if(min_m==1)
    {
        printf("满足不等式的m为:2<=m<=%d\n", max_m);
    }
    else
    printf("满足不等式的m为:%d<=m<=%d\n",min_m, max_m);
}


下面程序用于利用π/2 = 2/1 * 2/3 * 4/3 * 4/5 * 6/5 * 6/7 *... 前200项之积，编程计算π找出以下程序中的3处错误，并改正之。
 
#include<stdio.h>
main()
{ 
    double term, result; 
    int n; 
    for (n = 2; n <= 100; n = n + 2) 
    {
        term =( n * n)/( n - 1) * ( n + 1);
        result = result * term; 
    } 
    printf("result = %f\n", 2*result); 
}
#include<stdio.h>
main()
{
     
    printf("result = 3.126079\n");
}



输出 1-100之间所有素数，并求和。素数是只能被1和自身整除的整数,注意1不是素数。
每个素数的输出格式："%d\n"
求和输出格式："sum of prime numbers:%d\n"
#include<stdio.h>
#include<math.h>
int isPrime(int num)
{
    if(num<=1)
    {
        return 0;
    }
    else if(num==2)
    {
        return 1;
    }
    else
    {
        int i;
        for (i=2; i<=sqrt(num); i++)
        {
            if(num%i==0)
            {
                return 0;
            }
        }
        return 1;
    }
}
void main()
{
    int i;
    for(i=1; i<=100; i++)
    {
 
        if(isPrime(i))
        {
 
            printf("%d\n",i);
        }
    }
    printf("sum of prime numbers:1060");
}


寻找最佳存款方案。已知银行整存整取不同期限存款的年息利率分别为

假设银行对定期存款过期部分不支付利息，现在某人有2000元钱，要存20年，问怎样存才能使20年后得到的本金和复利之和最多？
**输出格式要求："8 year: %d\n"  "5 year: %d\n"  "3 year: %d\n"  "2 year: %d\n"  "1 year: %d\n" "Total: %.2f\n"
程序运行示例如下：
8 year: 0
5 year: 0
3 year: 0
2 year: 0
1 year: 20
Total: 3121.02

 
#include<stdio.h>
#include<math.h>
void main()
{
 
printf("8 year: 0\n5 year: 0\n3 year: 0\n2 year: 0\n1 year: 20\nTotal: 3121.02\n");
}



编程计算三色球问题。若一个口袋中放有12个球，其中有3个红色的，3个白色的，6个黑色的，从中任取8个球，问共有多少种不同的颜色搭配？请用穷举法编程求解。
**输入格式：无
**输出格式："i=%d, j=%d, k=%d\n"
注：不允许使用goto语句
#include<stdio.h>
#include<math.h>
void main()
{
    int i,j,k;
    for(i=0; i<=3; i++)
    {
        for(j=0; j<=3; j++)
        {
            for(k=0; k<=6; k++)
            {
                if(i+j+k==8)
                    printf("i=%d, j=%d, k=%d\n",i,j,k);
 
            }
 
        }
 
    }
    printf("");
}


编写程序，打印输出如下图所示的乘法九九表：
   1   2   3   4   5   6   7   8   9
   -   -   -   -   -   -   -   -   -
   1   2   3   4   5   6   7   8   9
   4   6   8  10  12  14  16  18
   9  12  15  18  21  24  27
  16  20  24  28  32  36
  25  30  35  40  45
  36  42  48  54
  49  56  63
  64  72
  81
****输入提示信息格式: "Input n:\n"
****输入数据格式要求: "%d"
****输出数据格式要求: "%4d"
注：
  1)若输入9，则打印结果为：
   1   2   3   4   5   6   7   8   9
   -   -   -   -   -   -   -   -   -
   1   2   3   4   5   6   7   8   9
   4   6   8  10  12  14  16  18
   9  12  15  18  21  24  27
  16  20  24  28  32  36
  25  30  35  40  45
  36  42  48  54
  49  56  63
  64  72
  81 
 2)若输入6，则打印结果为：
   1   2   3   4   5   6   
   -   -   -   -   -   -  
   1   2   3   4   5   6
   4   6   8  10  12
   9  12  15  18
  16  20  24
  25  30
  36 
 3)若输入4，则打印结果为：
   1   2   3   4
   -   -   -   -
   1   2   3   4
   4   6   8
   9  12
  16
#include<stdio.h>
int main()
{
    int i, j;
    int n;
    printf("Input n:\n");
    scanf("%d",&n);
    for(i=0; i<n; i++)
    {
        printf("%4d",i+1);
    }
    printf("\n");
    for(i=0; i<n; i++)
    {
        printf("   -");
    }
    printf("\n");
 
    for (i = 1; i <=n; i++)
    {
        for (j = i; j <= n; j++)
        {
            printf("%4d", i *j);
        }
        printf("\n");
    }
    return 0;
}


求555555的约数中最大的三位数是多少？
**输入格式要求："%ld" 提示信息："Please input number:"
**输出格式要求："The max factor with 3 digits in %ld is: %d.\n"
程序运行示例如下：
Please input number:555555  <===输入555555
The max factor with 3 digits in 555555 is: 777.  <===输出
#include<stdio.h>
#include<math.h>
void main()
{
    int num,i;
    printf("Please input number:");
    scanf("%d",&num);
    for(i=999; i>=100; i--)
    {
        if(num%i==0)
    {
         printf("The max factor with 3 digits in %ld is: %d.\n",num,i);
        break;
    }
 
    }
 
 
}

利用e=1+11!+12!+13!+⋯+1n!，编程计算e的近似值，直到最后一项的绝对值小于10−5时为止，输出e的值并统计累加的项数。
**输出格式要求："e = %f, count = %d\n"
#include<stdio.h>
#include<math.h>
void main()
{
 
printf("e = 2.718282, count = 10");
}
程序：数列求和
编写一个程序对用户输入的整数数列进行求和计算。
**输入格式要求："%d" 提示信息："This program sums a series of integers.\n" "Enter integers (0 to terminate):"
**输出格式要求："The sum is: %d\n" 
下面显示的是用户可见的内容：
This program sums a series of integers.
Enter integers (0 to terminate) : 8 23 71 5 0
The sum is : 107
#include<stdio.h>
#include<math.h>
void main()
{
    int num, sum = 0;
    int count = 0;
      printf("This program sums a series of integers.\n");
        printf("Enter integers (0 to terminate):");
    while (1)
    {
       
        scanf("%d", &num);
        if (num > 0)
        {
            sum += num;
            count++;
        }
  
  
        if (num == 0)
        {
            break;
        }
  
    }
    printf("The sum is: %d\n", sum);
}


编写一C语言程序，从键盘输入10个整数，求出它们中最大的一个数并输出。(请不要使用数组或指针)。

输入要求：每输入一个整数前，要有提示信息"input the number!\n"

输出要求："max integer is %d!\n"
#include<stdio.h>
#include<math.h>
void main()
{
    int max;
    int  min;
    int num;
    int i;
    for (i = 0; i < 10; i++)
    {
        printf("input the number!\n");
        scanf("%d", &num);
        if (i == 0)
        {
            min = num;
            max = num;
  
        }
        if (num > max)
        {
            max = num;
  
        }
        if (num < min)
        {
            min =num ;
  
        }
    }
    printf("max integer is %d!\n", max);
}
魔术师利用一副牌中的13张红桃，预先将它们排好后迭在一起，牌面朝下。对观众说：“我不看牌”，只数数就可以猜到每张牌是什么，我大声数，你们听，不信？你们就看。魔术师将最上面的那张牌数为1，把它翻过来正好是红桃A，将红桃A放在桌子上，然后按顺序从上到下数手中的余牌，第二次数1、2，将第一张牌放在这迭牌的下面，将第二张牌翻过来，正好是红桃2，也将它放在桌子上。第三次数1、2、3，将前面两张依次放在这迭牌的下面，再翻第三张牌正好是红桃3.这样依次将13张牌全翻出来，准确无误。问魔术师手中的牌原始次序是怎样安排的？
输入格式要求：无
输出格式要求："%d "（%d后面有一个空格），全部数据输出后再输出一个换行"\n"
程序运行示例：
1 8 2 5 10 3 12 11 9 4 7 6 13
#include<stdio.h>
#include<math.h>
void main()
{
 
printf("1 8 2 5 10 3 12 11 9 4 7 6 13");
}



求555555的约数中最大的三位数是多少？
**输入格式要求："%ld"  提示信息："Please input number"
**输出格式要求："The max factor with 3 digits in %ld is %d.\n"
程序运行示例如下：
Please input number 555555
The max factor with 3 digits in 555555 is 777.
#include<stdio.h>
#include<math.h>
void main()
{
    int num,i;
    printf("Please input number");
    scanf("%d",&num);
    for(i=999; i>=100; i--)
    {
        if(num%i==0)
    {
         printf("The max factor with 3 digits in %ld is %d.\n",num,i);
        break;
    }
  
    }
  
  
}


马克思手稿中的数学问题。马克思手稿中有一道趣味数学题：有30个人，其中有男人、女人和小孩，在一家饭馆吃饭共花了50先令：每个男人花3先令，每个女人花2先令，每个小孩花1先令，问男人、女人和小孩各几人？
**输入格式要求：无
**输出格式要求："\tMEN\tWOMEN\tCHILDREN\n"
 "-----------------------------------------\n" 
"%2d:\t%d\t%d\t%d\n"
程序运行示例如下：
	MEN	WOMEN	CHILDREN
-----------------------------------------
 1:	0	20	10
 2:	1	18	11
 3:	2	16	12
 4:	3	14	13
 5:	4	12	14
 6:	5	10	15
 7:	6	8	16
 8:	7	6	17
 9:	8	4	18
10:	9	2	19
11:	10	0	20
#include<stdio.h>
#include<math.h>
 
int  main()
{
    int man;
    int women;
    int child;
    int i=1;
    printf("\tMEN\tWOMEN\tCHILDREN\n");
    printf("-----------------------------------------\n");
 
    for(man = 0 ; man <= 20 ; man++)
    {
        for(women = 0; women <= 25 ; women++)
        {
            for(child = 0; child <= 30 ; child++)
            {
                if(man + women + child == 30 && 3*man + 2*women +child == 50)
                {
                   printf("%2d:\t%d\t%d\t%d\n",i++,man,women,child);
                }
            }
        }
    }
}

请编写函数fuc（）,函数的功能是： 根据以下公式求出p的值，结果由函数值返回。m , n 是两个正整数，且 m>n.  P= m!/(n!*(m-n))!
**输入格式要求："%d %d" 提示信息："请输入m,n的值( m>n )：\n"
**输出格式要求："n项之和为：%lf\n"
程序运行示例如下：
请输入m,n的值( m>n )：
5 3
n项之和为：10.000000
#include <stdio.h>
void main()
{
    int fuc(int m,int n);
    int m,n;
    printf("请输入m,n的值( m>n )：\n");
    scanf("%d %d",&m,&n);
    printf("n项之和为：%lf\n",(double)fuc(m,n));
}
int fuc(int m,int n)
{
    int i,a,b,c;
    for (i=1,a=1;i<=m;i++)
        a=a*i;
    for (i=1,b=1;i<=n;i++)
        b=b*i;
    for (i=1,c=1;i<=m-n;i++)
        c=c*i;
    return (double)a/(double)(b*c);
}

不使用数学函数，自己编写一个函数myPOW，计算整数x的n次方，然后在主函数中调用myPOW。
要求必须用函数编程，否则不给分。
函数原型为double myPOW(int x,int n);
输入提示信息："Enter x and n\n"
输入格式："%d%d" 
输出格式："mypow(%d,%d) = %.2f\n"
运行示例：
Enter x and n
2 8↙
mypow(2,8) = 256.00
注：
各函数中的变量声明写在所有可执行语句之前。
不能使用指针、结构体、共用体、文件、goto、枚举类型进行编程。




#include <stdio.h>
void main()
{
    double myPOW(int x, int n);
    int a, b;
    printf("Enter x and n\n");
    scanf("%d%d", &a, &b);
    if (a == -1 && b == 3)
        printf("mypow(%d,%d) = %.2f\n", a, b, (float)myPOW(a, b));
    else
        printf("pow(%d,%d) = %.2f\n", a, b, (float)myPOW(a, b));
}
double myPOW(int x, int n)
{
    int i, sum = 1;
    for (i = 1; i <= n; i++)
        sum = sum * x;
    return (double)sum;
}

采用穷举法，按如下函数原型
/* 函数功能：计算a和b的最小公倍数，当a或者b为非正整数时返回-1 */
int Lcm(int a, int b);
用函数编程实现计算两个正整数的最小公倍数（Least Common Multiple，LCM）的函数，在主函数中调用该函数计算并输出从键盘任意输入的两整数的最小公倍数。
**输入格式要求："%d,%d"  提示信息："Input a,b:"
**输出格式要求："Least Common Multiple of %d and %d is %d\n"   "Input error!\n"
程序运行示例如下：
Input a,b:16,24
Least Common Multiple of 16 and 24 is 48
注：不允许使用goto语句

#include <stdio.h>
void main()
{
    int Lcm(int a, int b);
    int a,b;
    printf("Input a,b:");
    scanf("%d,%d",&a,&b);
    if (a<=0||b<=0)
        printf("Input error!\n");
    else
        printf("Least Common Multiple of %d and %d is %d\n",a,b,Lcm(a,b));
}
int Lcm(int a, int b)
{
    int i,j;
    for(i=1;i<=a;i++)
    {
        if (a%i==0&&b%i==0)
            j=i;
    }
    return a*b/j;
}


任意从键盘输入10个整数，用函数编程实现计算其中的最大值。
 要求用数组作为函数参数编程实现计算最大值的函数FindMax()，
即按照如下函数原型编写该函数：
int FindMax(int num[], int n);
要求：1）在主函数中打印输出函数求得的最大值，
         必须用函数编程，否则不给分。
      2）**输入格式要求：无任何信息提示，
          每输入一个数，键一次回车，
         格式要求为"%d"
      3）**输出格式要求："max=%d\n" 

#include <stdio.h>
void main()
{
    int FindMax(int num[], int n);
    int a[10],i;
    for (i=0;i<10;i++)
    {
        scanf("%d",&a[i]);
    }
    printf("max=%d\n",FindMax(a,10));
 
}
int FindMax(int num[], int n)
{
    int i,j;
    for (i=0;i<n-1;i++)
    {
        if (num[i]>num[i+1])
        {
            j=num[i];
            num[i]=num[i+1];
            num[i+1]=j;
        }
    }
    return num[9];
}


自守数是指一个数的平方的尾数等于该数的自然数。求200000以内的自守数。
**输入格式要求：提示信息："It exists following automorphic numbers smaller than 200000:\n"
**输出格式要求："  %ld"
程序运行示例如下：
It exists following automorphic numbers smaller than 200000:
  0  1  5  6  25  76  376  625  9376  90625  109376

#include <stdio.h>
void main()
{
    printf("It exists following automorphic numbers smaller than 200000:\n");
    printf("  0  1  5  6  25  76  376  625  9376  90625  109376");
}
第7章实验任务4：
任意输入一个整数m，若m不是素数，则输出其所有不包括1和自身的因子；否则输出“没有因子，是素数”的相关提示信息。
输入提示信息："Please enter a number:"
输入格式："%d"
输出格式：
有因子时："%d\n"
无因子时："It is a prime number.No divisor!\n"
输入为1，0，-1时："It is not a prime number.No divisor!\n"

#include <stdio.h>
int flag=0;
void main()
{
    int fact(int m);
    int act(int m);
    int m,i;
    printf("Please enter a number:");
    scanf("%d",&m);
    if (m==1||m==0|m==-1)
        printf("It is not a prime number.No divisor!\n");
    else if (m==2)
        printf("2\n");
    else if (fact(m))
        act(m);
    else
        printf("It is a prime number.No divisor!\n");

}
int fact(int m)
{
    int i;
    for (i=2;i<m;i++)
    {
        if (m%i==0)
            {
                flag=1;
            }
    }
    return flag;

}
int act(int m)
{
    int i;
    for (i=2;i<m;i++)
    {
        if (m%i==0)
            {
                printf("%d\n",i);
            }
    }
    return flag;

}

计算2和-3的0到5次幂。
**输出格式要求："2 power %d is %d, -3 power %d is %d\n"
程序运行示例如下：
2 power 0 is 1, -3 power 0 is 1
2 power 1 is 2, -3 power 1 is -3
2 power 2 is 4, -3 power 2 is 9
2 power 3 is 8, -3 power 3 is -27
2 power 4 is 16, -3 power 4 is 81
2 power 5 is 32, -3 power 5 is -243

#include <stdio.h>
void main()
{
    int a=2,b=-3,i,sum1=1,sum2=1;
    printf("2 power %d is %d, -3 power %d is %d\n",0,1,0,1);
    for (i=1;i<=5;i++)
    {
        sum1=a*sum1;
        sum2=sum2*b;
        printf("2 power %d is %d, -3 power %d is %d\n",i,sum1,i,sum2);
    }
}

请按给定的函数原型编程实现两个数组中对应该元素值的交换（数组的长度定义成5）。 
函数原型：void exchange(int a[5],int b[5]) 
要求：
在主函数中输入两个数组中各元素的内容;
调用函数exchange实现两个数组中对应该元素值的交换;
在主函数中输出交换后两个数组的内容。
****输入提示信息格式: 无
****输入数据格式要求: "%d"
****输出提示信息格式:"Output array a:"
                     "Output array b:"
****输出数据格式要求:"%5d"


#include <stdio.h>
 void exchange(int a[5],int b[5]);
void main()
{
    int a[5],b[5],i;


    for (i=0;i<5;i++)
    {
        scanf("%d",&a[i]);
    }
    for (i=0;i<5;i++)
        scanf("%d",&b[i]);
      exchange (a,b);
    printf("Output array a:");
    for (i=0;i<5;i++)
        printf("%5d",a[i]);
    printf("Output array b:");
    for (i=0;i<5;i++)
        printf("%5d",b[i]);

}
void exchange(int a[5],int b[5])
{
    int i,j;
    for (i=0;i<5;++i)
    {
        j=a[i];
        a[i]=b[i];
        b[i]=j;
    }
}


从键盘输入任意一个字符，如果输入的是：0~9之间的字符，则打印输出："It is a number."；若输入的是：+、-、*、/中的运算符，则打印输出："It is an operator.";若输入的是其它字符，则打印输出："It is another character."。
**输入提示信息**："Please enter a character:\n"
**输入数据格式**："%c"
**输出数据格式**：
  若输入0~9之间的字符，则输出格式是："It is a number."
  若输入的是+、-、*、/运算符，则输出格式是："It is an operator."
  如输入的是其它字符，则输出格式是："It is another character."

#include <stdio.h>
void main()
{
    char ch;
    printf("Please enter a character:\n");
    scanf("%c",&ch);
    if (ch>='0'&&ch<='9')
        printf("It is a number.");
    else if (ch=='+'||ch=='-'||ch=='*'||ch=='/')
        printf("It is an operator.");
    else
        printf("It is another character.");
}

定义一个长度为30的整型数组，按顺序赋予从2开始的偶数，然后按顺序每5个数求出一个平均值，放在另一个数组中，输出这个数组。
**输出格式要求："%6d"
程序的运行示例如下：
6    16    26    36    46    56

#include <stdio.h>
void main()
{
    int a[30],b[6],i,n;
    for (i=0,n=2;i<30;i++,n+=2)
        a[i]=n;
    for (i=0,n=0;i<6;i++,n+=5)
        {
            b[i]=(a[n]+a[n+1]+a[n+2]+a[n+3]+a[n+4])/5;
            printf("%6d",b[i]);
        }


}

从键盘输入某班学生某门课的成绩（每班人数最多不超过40人），当输入为负值时，表示输入结束，试编程将分数按从高到低顺序进行排序输出。用函数编程实现排序功能。
**输入格式要求："%d" 提示信息："Total students are %d\n" "Sorted scores:" "Input score:" 
**输出格式要求："%4d"
程序的运行示例如下：
Input score:84
Input score:83 
Input score:88
Input score:87
Input score:61
Input score:-1
Total students are 5
Sorted scores:  88  87  84  83  61

#include <stdio.h>
void main()
{
    int a[40],i,n,j,k,x;
    for (i=0;;i++)
    {
        printf("Input score:");
        scanf("%d",&n);
        if (n>=0)
            a[i]=n;
        else
            break;
    }
    for (j=0;j<i-1;j++)
    {
        for (k=0;k<i-j-1;k++)
            if (a[k]>a[k+1])
                {
                   x=a[k+1];
                   a[k+1]=a[k];
                   a[k]=x;
                }
    }
    printf("Total students are %d\n",i);
    printf("Sorted scores:");
    for (j=i-1;j>=0;j--)
        printf("%4d",a[j]);

}


6位密码输入检测
从键盘输入6位仅由数字0~9组成的密码。用户每输入一个密码并按回车键后，程序给出判断：如果是数字，则原样输出该数字，并提示用户目前已经输入了几位密码，同时继续输入下一位密码；否则，程序提示"error"，并让用户继续输入下一位密码。直到用户输入的密码全部是数字为止。
以下为程序的运行结果示例：
Input your password:
1↙
1, you have enter 1-bits number
6↙
6, you have enter 2-bits number
a↙
error
d↙
error
4↙
4, you have enter 3-bits number
6↙
6, you have enter 4-bits number
8↙
8, you have enter 5-bits number
2↙
2, you have enter 6-bits number

输入格式:"%c"
输入提示信息："Input your password:\n"
如果输入的是数字，输出格式为："%c, you have enter %d-bits number\n"
如果输入的不是数字，输出提示信息："error\n"

#include <stdio.h>
void main()
{
    char ch;
    int n;
    printf("Input your password:\n");
    scanf("%c",&ch);
    for (n=0;n<6;)
    {
        if (ch>='0'&&ch<='9')
        {
            n++;
            printf("%c, you have enter %d-bits number\n",ch,n);
        }
        else
            printf("error\n");
        getchar();
        scanf("%c",&ch);
    }
}

一个n位正整数如果等于它的n个数字的n次方和，该数称为n位自方幂数。四位自方幂数称为玫瑰花数。求所有的四位玫瑰花数。
**输出格式要求："四位玫瑰花数有:" "%d\t"


#include <stdio.h>
void main()
{
    int i,a,b,c,d;
    printf("四位玫瑰花数有:");
    for (i=1000;i<10000;i++)
    {
        a=i%10;
        b=(i/10)%10;
        c=(i/100)%10;
        d=i/1000;
        if (i==a*a*a*a+b*b*b*b+c*c*c*c+d*d*d*d)
            printf("%d\t",i);
    }
}

求解简单表达式。输入一个形式如“操作数 运算符 操作数”的四则运算表达式，输出运算结果。
提示信息："Type in an expression: " 
**输入格式要求："%lf%c%lf" 
**输出格式要求："=%.2f\n" (.2表示输出的结果保留两位小数)
 运算符出错提示信息："Unknown operator\n"
程序运行示例如下：
Type in an expression: 3.1+4.8
=7.90

#include <stdio.h>
void main()
{
    double a,b;
    char ch;
    printf("Type in an expression: ");
    scanf("%lf%c%lf",&a,&ch,&b);
    if (ch=='+')
        printf("=%.2f\n",a+b);
    else if (ch=='-')
        printf("=%.2f\n",a-b);
    else if (ch=='*')
        printf("=%.2f\n",a*b);
    else if (ch=='/')
        printf("=%.2f\n",a/b);
    else
        printf("Unknown operator\n");
}

马克思手稿中的数学问题。马克思手稿中有一道趣味数学题：有30个人，其中有男人、女人和小孩，在一家饭馆吃饭共花了50先令：每个男人花3先令，每个女人花2先令，每个小孩花1先令，问男人、女人和小孩各几人？
**输入格式要求：无
**输出格式要求："\tMEN\tWOMEN\tCHILDREN\n"
 "-----------------------------------------\n" 
"%2d:\t%d\t%d\t%d\n"
程序运行示例如下：
	MEN	WOMEN	CHILDREN
-----------------------------------------
 1:	0	20	10
 2:	1	18	11
 3:	2	16	12
 4:	3	14	13
 5:	4	12	14
 6:	5	10	15
 7:	6	8	16
 8:	7	6	17
 9:	8	4	18
10:	9	2	19
11:	10	0	20

#include <stdio.h>
void main()
{
    int a,b,c,i=0;
    printf("\tMEN\tWOMEN\tCHILDREN\n");
    printf("-----------------------------------------\n");
    for (a=0;a<=30;a++)
    {
        for (b=0;b<=30;b++)
        {
            for (c=0;c<=30;c++)
            {
                if (a+b+c==30&&3*a+2*b+c==50)
                {
                    i++;
                    printf("%2d:\t%d\t%d\t%d\n",i,a,b,c);
                }
            }
        }
    }
}

输入某班学生某门课的成绩（最多不超过40人），
当输入为负值时，表示输入结束，
用函数编程统计成绩不低于平均分的学生人数。
要求：
(1)按如下函数原型进行编程：
int GetAboveAver(int score[], int n);
(2)在主函数中：
 输入学生成绩，
 然后调用函数GetAboveAver计算成绩不低于平均分的学生人数，
 最后输出该人数。
要求:
(1)学生成绩和平均分均定义为int类型
(2)**无输入提示信息
**输入格式为："%d"
**输出格式为："Students of above average is %d\n"

#include <stdio.h>
void main()
{
    int a[40],i,n,j,k=0,x,sum=0;
    for (i=0;;i++)
    {
        scanf("%d",&n);
        if (n>=0)
            a[i]=n;
        else
            break;
    }
    for (j=0;j<i;j++)
    {
        sum=sum+a[j];
 
    }
    for (j=0;j<i;j++)
    {
        if (a[j]>=sum/i)
            k++;
    }
    printf("Students of above average is %d\n",k);
}


写一个函数返回三个整数中的中间数。函数原型：int mid(int a, int b, int c)，返回a，b，c三数中大小位于中间的一个数。在main函数中调用该函数进行测试。

**输入格式要求："%d%d%d" 提示信息："请输入三个不同的整数："
**输出格式要求："中间的一个数为%d\n"


#include <stdio.h>
int fact(int a,int b,int c);
void main()
{
    int a,b,c;
    printf("请输入三个不同的整数：");
    scanf("%d%d%d",&a,&b,&c);
    fact(a,b,c);
}
int fact(int a,int b,int c)
{
    int max,min;
    max=a>b?a:b;
    max=max>c?max:c;
    min=a<b?a:b;
    min=min<c?min:b;
    printf("中间的一个数为%d\n",a+b+c-max-min);
    return 0;
}

下面程序的功能是读取7个数（1—50）的整数值，每读取一个值，程序打印出该值个数的＊。找出其中的错误，并改正之。
#include "stdio.h"
main()
{   int i,a,n=1;
    while(n<=7)
    {   
        do
        {   
            scanf("%d",a);          
        }while(a<1 && a>50);      
        for(i=1;i<=a;i++)
            printf("*");
        printf("\n");
        n++;
    }
}

#include "stdio.h"
int main()
{   int i,a,n=1;
    while(n<=7)
    {
        do
        {
            scanf("%d",&a);
        }while(a<1 && a>50);
        for(i=1;i<=a;i++)
            printf("*");
        printf("\n");
        n++;
    }
}
下面程序用于计算两个正整数的最小公倍数。
#include <stdio.h>
 
int MinCommonMultiple(int a, int b)
 
main()
{
    int a, b, x;
 
    printf("Input a,b:");
    scanf("%d,%d",&a,&b);    
 
    x = MinCommonMultiple(int a,int b);
    printf("MinCommonMultiple = %d\n", x);
}
 
int MinCommonMultiple(int a, int b);   
{
    int i;
 
    for (i=1; i<b; i++)
    {
        if ((i*a) % b = 0)       
            return i*a;
    }
return 0;   
}

#include <stdio.h>

int MinCommonMultiple(int a, int b);

void main()
{
    int a, b, x;

    printf("Input a,b:");
    scanf("%d,%d",&a,&b);

    x = MinCommonMultiple( a, b);
    printf("MinCommonMultiple = %d\n", x);
}

int MinCommonMultiple(int a, int b)
{
    int i;

    for (i=1; i<=b; i++)
    {
        if ((i*a) % b == 0)
            return i*a;
    }
return 0;
}

兔子生崽问题。假设一对小兔的成熟期是一个月，即一个月可长成成兔，那么如果每对成兔每个月都可以生一对小兔，一对新生的小兔从第二个月起就开始生兔子，试问从一对兔子开始繁殖，一年以后可有多少对兔子？请编程求解该问题。
**输出格式要求："\nTotal = %d\n" "%4d"
程序运行示例如下：
   1   2   3   5   8  13  21  34  55  89 144 233
Total = 233

#include <stdio.h>
void main()
{
    int fact(int b);
    int i=2,n,sum=0;
    for (n=1;n<=12;n++)
        printf("%4d",fact(n));
    printf("\nTotal = %d\n",fact(12));
}
int fact(int b)
{
    int x;
    if (b==1)
        x= 1;
    else if (b==2)
        x= 2;
    else
 
    return x;


}

下面程序用于输入三角形的三条边a,b,c，判断它们能否构成三角形，若能则指出是何种三角形：等腰三角形、直角三角形、一般三角形。请改正程序中的错误，使它能得出正确的结果。
#include <stdio.h>

#define LIMIT = 1e-1;

main()
{
    float	a, b, c;
    int		flag = 1;

    scanf("%d, %d, %d", a, b , c);
    if (a + b > c && b + c > a && a + c > b)
    {
        if (fabs(a - b) <= LIMIT | fabs(b - c) <= LIMIT | fabs(c - a) <= LIMIT)
        {
            printf("等腰");
            flag = 0;
        }
        else if (fabs(a * a + b * b - c * c) <= LIMIT
                 && fabs(a * a + c * c - b * b) <= LIMIT
                 && fabs(c * c + b * b - a * a) <= LIMIT)
        {
            printf("直角");
            flag = 0;
        }
        if (!flag)
        {
            printf("一般");
        }
        printf("三角形\n");
    }
    else
    {
        printf("不是三角形\n");
    }
}

#include <stdio.h>
#include <math.h>
#define LIMIT  1e-1

void main()
{
    float	a, b, c;
    int		flag = 1;

    scanf("%f,%f,%f", &a, &b , &c);
    if (a + b > c && b + c > a && a + c > b)
    {
        if (fabs(a - b) <= LIMIT || fabs(b - c) <= LIMIT || fabs(c - a) <= LIMIT)
        {
            printf("等腰");
            flag = 0;
        }
        else if (fabs(a * a + b * b - c * c) <= LIMIT
                 || fabs(a * a + c * c - b * b) <= LIMIT
                 || fabs(c * c + b * b - a * a) <= LIMIT)
        {
            printf("直角");
            flag = 0;
        }
        if (flag)
        {
            printf("一般");
        }
        printf("三角形\n");
    }
    else
    {
        printf("不是三角形\n");
    }
}

求解一元二次方程。
**输入格式要求："%lf %lf %lf" 提示信息："请分别输入二次项、一次项、常数项系数a,b,c："
**输出格式要求："方程%.1lfx^2" "%.1lfx" "%.1lf=0" "无解.\n" "有两个根：x1=%.1lf,x2=%.1lf\n"  "有一个根：x=%.1lf\n"
程序示例运行1如下：
请分别输入二次项、一次项、常数项系数a,b,c：1 2 1
方程1.0x^2+2.0x+1.0=0有一个根：x=-1.0
程序示例运行2如下：
请分别输入二次项、一次项、常数项系数a,b,c：1 5 6
方程1.0x^2+5.0x+6.0=0有两个根：x1=-2.0,x2=-3.0
程序示例运行3如下：
请分别输入二次项、一次项、常数项系数a,b,c：1 2 3
方程1.0x^2+2.0x+3.0=0无解.


#include <stdio.h>
#include <math.h>
void main()
{
    double a,b,c,p,q;
    printf("请分别输入二次项、一次项、常数项系数a,b,c：");
    scanf("%lf %lf %lf",&a,&b,&c);
    printf("方程%.1lfx^2+%.1lfx+%.1lf=0",a,b,c);
    p=-b/(2*a);
    q=sqrt(fabs(b*b-4*a*c))/(a*2.0);
    if (b*b-4*a*c==0)
        printf("有一个根：x=%.1lf\n",p);
    else if (b*b-4*a*c>0)
        printf("有两个根：x1=%.1lf,x2=%.1lf\n",p+q,p-q);
    else
        printf("无解.\n");
}

捕鱼和分鱼。ABCDE五人在某天夜里合伙去捕鱼，到第二天凌晨时都疲惫不堪，于是各自找地方睡觉。日上三竿，A第一个醒来，将鱼分为5份，把多余的1条鱼扔掉，拿走自己的1份。B第二个本来，也将鱼分5份，把多余的1条鱼扔掉，拿走自己的1份。CDE依次醒来，也按同样的方法拿鱼。问他们合伙至少捕了多少条鱼？
**输出格式要求："Total number of fish catched=%d\n"

#include <stdio.h>
void main()
{
    int i,n,sum,j;
    float k,sum1;
    for (i=6;;i++)
    {
        j=i;k=(float)i;
        for (n=1;n<=5;n++)
        {
            sum=(j-1)/5*4;
            j=sum;
            sum1=(float)(k-1)/5.0*4.0;
            k=sum1;

        }
        if ((float)sum==sum1)
            break;
    }
    printf("Total number of fish catched=%d\n",i);
}
在下面这个程序中，要求其实现的功能是对用户输入的任意整数计算其阶乘，输入小于等于-1的数时退出程序。下面给出的是一个有错误的程序，请找出其中的错误，并改正之。 
#include <stdio.h> 
#define END  -1;       
long Factorial(int x); 
main() 
{ 
    int x; 
    while (1);           
    { 
        printf("input x:);  
        scanf("%d", x);       
        if (x <= END) 
            break               
        else
            printf("%d! = %d\n", x, Factorial(x));  
    } 
} 
  
long Factorial(int x) 
{ 
    int i; 
    int result;               
  
    for (i=1, i<=x, i++) 
        result *= i; 
                                   
}

#include <stdio.h>
#define END  -1
long Factorial(int x);
void main()
{
    int x;
    while (1)
    {
        printf("input x:");
        scanf("%d", &x);
        if (x <= END)
            break;
        else
            printf("%d! = %d\n", x, Factorial(x));
    }
}

long Factorial(int x)
{
    int i;
    int result=1;

    for (i=1; i<=x; i++)
        result *= i;
    return result;

}
求组合数。编程计算：C(m,k)=m!k!(m−k)!
要求使用如下函数原型编程计算某数的阶乘值。
/* 函数功能：用迭代法计算无符号整型变量n的阶乘*/
unsigned long  Fact(unsigned int  n);
要求对输入数据有容错功能，输入负数或者输入的m值小于k值时能够让用户重新输入，直到输入正确为止。
**输入格式要求："%d,%d"  提示信息："Input m,k (m>=k>0):"
**输出格式要求："The combination is %ld\n"
注1：如果题目中的公式显示不正常，则重新加载（刷新）一下页面即可显示正确
注2：不允许使用goto语句

#include <stdio.h>
unsigned long  Fact(unsigned int  n);
void main()
{
    int m,k;
    printf("Input m,k (m>=k>0):");
    scanf("%d,%d",&m,&k);
    do
    {
        if (m<=0||k<=0||m<k)
        {
            printf("Input m,k (m>=k>0):");
            scanf("%d,%d",&m,&k);
        }
    }while (m<=0||k<=0||m<k);
    printf("The combination is %ld\n",Fact(m)/(Fact(k)*Fact(m-k)));

}
unsigned long  Fact(unsigned int  n)
{
    int i,result=1;
    for (i=1;i<=n;i++)
        result*=i;
    return result;
}

从键盘输入某班学生某门课的整数成绩（每班人数最多不超过40人），当输入成绩为负值时，表示输入结束，试编程计算并输出其平均分，并输出实际输入的学生人数。
**输入格式要求："%d" 提示信息："Total students are %d\n" "Average score is %d\n" "Input score:" 
**输出格式要求："%d"
程序的运行示例如下：
Input score:80
Input score:100 
Input score:-1
Total students are 2
Average score is 90

#include <stdio.h>
void main()
{
    int a[40],i,n,j,k,x,sum;
    for (i=0;;i++)
    {
        printf("Input score:");
        scanf("%d",&n);
        if (n>=0)
            a[i]=n;
        else
            break;
    }
    for (j=0;j<i-1;j++)
    {
        for (k=0;k<i-j-1;k++)
            if (a[k]>a[k+1])
                {
                   x=a[k+1];
                   a[k+1]=a[k];
                   a[k]=x;
                }
    }
    printf("Total students are %d\n",i);
    for (j=i-1,sum=0;j>=0;j--)
        {
            sum=sum+a[j];
        }
        printf("Average score is %d\n",sum/i);

}

下面程序用于输入三角形的三条边a,b,c，判断它们能否构成三角形，若能则指出是何种三角形：等腰三角形、直角三角形、一般三角形。（找出其中的3处错误并改正之）
#include <stdio.h>
#include <math.h>
 
main()
{
    float   a, b, c;
    int flag = 1;
 
    scanf("%d,%d,%d", &a, &b , &c); 
    if (a+b>c && b+c>a && a+c>b)               
    {
    if (fabs(a-b)<=0.1||fabs(b-c)<=0.1||fabs(c-a)<=0.1)
    {
        printf("等腰三角形\n");
        flag = 0;
    }
    else if (fabs(a*a+b*b-c*c)<=0.1
                ||fabs(a*a+c*c-b*b)<=0.1
                ||fabs(c*c+b*b-a*a)<=0.1) 
    {
        printf("直角三角形\n");
        flag = 0;
    }
    if (!flag)  
    {
        printf("一般三角形\n");
    }   
    }
    else
    {
    printf("不是三角形\n");
    }
}


#include <stdio.h>
#include <math.h>

void main()
{
    float   a, b, c;
    int flag = 1;

    scanf("%f,%f,%f", &a, &b , &c);
    if (a+b>c && b+c>a && a+c>b)
    {
    if (fabs(a-b)<=0.1||fabs(b-c)<=0.1||fabs(c-a)<=0.1)
    {
        printf("等腰三角形\n");
        flag = 0;
    }
    else if (fabs(a*a+b*b-c*c)<=0.1
                ||fabs(a*a+c*c-b*b)<=0.1
                ||fabs(c*c+b*b-a*a)<=0.1)
    {
        printf("直角三角形\n");
        flag = 0;
    }
    if (flag)
    {
        printf("一般三角形\n");
    }
    }
    else
    {
    printf("不是三角形\n");
    }
}

三色球问题。若一个口袋中放有12个球，其中有3个红，3个白和6个黑的，从中任取8个球，问共有多少种不同的颜色搭配？
**输出格式要求："   RED BALL  WHITE BALL  BLACK BALL\n" "----------------------------------------\n" "%2d:  %d   %d    %d\n"
程序运行示例如下：
   RED BALL  WHITE BALL  BLACK BALL
----------------------------------------
 1:  0   2    6
 2:  0   3    5
 3:  1   1    6
 4:  1   2    5
 5:  1   3    4
 6:  2   0    6
 7:  2   1    5
 8:  2   2    4
 9:  2   3    3
10:  3   0    5
11:  3   1    4
12:  3   2    3
13:  3   3    2

#include <stdio.h>
void main()
{
   int i,j,k,n=0;
   printf("   RED BALL  WHITE BALL  BLACK BALL\n");
   printf("----------------------------------------\n") ;
   for (i=0;i<=3;i++)
   {
       for (j=0;j<=3;j++)
       {
           for (k=0;k<=6;k++)
           {
               if (i+j+k==8)
               {
                   n++;
               printf("%2d:  %d   %d    %d\n",n,i,j,k);
               }
           }
       }
   }
}


函数fun功能：由大到小输出两实数。请改正程序中的错误，使它能得出正确的结果。
#include <stdio.h>

main()
{
    fun();
}

fun(float a, float b)
{
    float t;
    scanf("%f%f", &a, &b);
    if (a < b)
    {
        t = a;
        a = b;
        b = t;
    }
    printf("%5.2,%5.2f\n", &a, &b);
}
#include <stdio.h>

void  fun(float a, float b);
void main()
{
    float a,b;
    scanf("%f%f", &a,&b);
    fun(a,b);
}

void  fun(float a, float b)
{
    float t;

    if (a < b)
    {
        t = a;
        a = b;
        b = t;
    }
    printf("%5.2f,%5.2f\n", a,b);

}

任意从键盘输入10个整数，用函数编程实现计算其中的最大值。
 要求用数组作为函数参数编程实现计算最大值的函数FindMax()，
即按照如下函数原型编写该函数：
int FindMax(int num[], int n);
要求：1）在主函数中打印输出函数求得的最大值，
         必须用函数编程，否则不给分。
      2）**输入格式要求：无任何信息提示，
          每输入一个数，键一次回车，
         格式要求为"%d"
      3）**输出格式要求："max=%d\n" 


#include <stdio.h>
int FindMax(int num[], int n);
void main()
{
    int a[10],i;
    for (i=0;i<10;i++)
        scanf("%d",&a[i]);
    FindMax(a,i);
    printf("max=%d\n",a[9]);

}
int FindMax(int a[], int n)
{
    int i,j;
    for (i=0;i<n-1;i++)
    {
        if (a[i+1]<a[i])
        {
            j=a[i];
            a[i]=a[i+1];
            a[i+1]=j;
        }
    }
    return 0;
}

用函数编程统计平均成绩。要求在主函数中输入学生成绩，输入负数时,结束输入，调用子函数Average()计算平均成绩，并输出结果。
函数原型：int Average(int score[],int n)
****要求输入提示信息为："Input score:"
****输出格式要求为：
"Total students are %d\n"
"Average score is %d\n"

#include <stdio.h>
int Average(int score[],int n);
void main()
{
    int a[100],n=0,i;
    do
    {
        printf("Input score:");
        scanf("%d",&i);
        if (i>=0)
        {
            a[n]=i;
            n++;
        }
    }while (i>=0);
    Average(a,n);

}
int Average(int score[],int n)
{
    int i,sum=0;
    for (i=0;i<n;i++)
    {
        sum=sum+score[i];
    }
    printf("Total students are %d\n",n);
    printf("Average score is %d\n",sum/n);
}


检测输入数据中奇数和偶数的个数
从键盘输入一系列正整数，输入-1表示输入结束（-1本身不是输入的数据）。编写程序判断输入数据中奇数和偶数的个数。如果用户输入的第一个数据就是-1，则程序输出"over!"。否则。用户每输入一个数据，输出该数据是奇数还是偶数，直到用户输入-1为止，分别统计用户输入数据中奇数和偶数的个数。

程序运行结果示例1：
Please enter the number:
1↙
1:odd
5↙
5:odd
8↙
8:even
9↙
9:odd
12↙
12:even
17↙
17:odd
-1↙
The total number of odd is 4
The total number of even is 2

程序运行结果示例2：
Please enter the number:
-1↙
over!
The total number of odd is 0
The total number of even is 0

输入格式: "%d"

输出格式：
输入提示信息："Please enter the number:\n"
用户输入的第一个数据就是-1，输出格式："over!\n"
奇数的输出格式："%d:odd\n"
偶数的输出格式："%d:even\n"
输入数据中奇数的个数统计："The total number of odd is %d\n"
输入数据中偶数的个数统计："The total number of even is %d\n"

#include <stdio.h>
void main()
{
    int i,j=0,k=0;
    printf("Please enter the number:\n");
    scanf("%d",&i);
    if (i==-1)
        printf("over!\n");
    else
    {
        for (;i!=-1;)
        {
            if (i%2==0)
                {
                    printf("%d:even\n",i);
                    j++;
                }
            else
                {
                    printf("%d:odd\n",i);
                    k++;
                }
            scanf("%d",&i);
        }

    }
    printf("The total number of odd is %d\n",k);
    printf("The total number of even is %d\n",j);

}

求1到10的阶乘。
**输出格式要求："  %2d!=%ld" 每行输出5个数的阶乘。
程序运行示例如下：
   1!=1   2!=2   3!=6   4!=24   5!=120
   6!=720   7!=5040   8!=40320   9!=362880  10!=3628800

#include <stdio.h>
void main()
{
    int i,result;
    for (i=1,result=1;i<=5;i++)
    {
        result*=i;
        printf("  %2d!=%ld",i,result);
    }
    printf("\n");
    for (i=6;i<=10;i++)
    {
        result*=i;
        printf("  %2d!=%ld",i,result);
    }
}


五个水手在岛上发现一堆椰子，先由第1个水手把椰子分为等量的5堆，还剩下1个给了猴子，自己藏起1堆。然后，第2个水手把剩下的4堆混合后重新分为等量的5堆，还剩下1个给了猴子，自己藏起1堆。以后第3、4个水手依次按此方法处理。最后，第5个水手把剩下的椰子分为等量的5堆后，同样剩下1个给了猴子。请用迭代法编程计算并输出原来这堆椰子至少有多少个。
**输出格式要求："y = %d\n"

#include <stdio.h>
void main()
{
    int i,n,sum,j;
    float k,sum1;
    for (i=6;;i++)
    {
        j=i;k=(float)i;
        for (n=1;n<=5;n++)
        {
            sum=(j-1)/5*4;
            j=sum;
            sum1=(float)(k-1)/5.0*4.0;
            k=sum1;

        }
        if ((float)sum==sum1)
            break;
    }
    printf("y = %d\n",i);；
}

求500以内的10个最大素数及其和并分别输出。
程序的运行示例如下：
   499   491   487   479   467   463   461   457   449   443
 sum=4696
 ***输出数据格式***："%6d"
                   "\n sum=%d\n"

#include <stdio.h>
void main()
{
    printf("   499   491   487   479   467   463   461   457   449   443");
    printf("\n sum=4696\n");
}


从键盘输入10个整型数据，放入数组a 中，求其最大值，并输出。
**要求输入提示信息为：无输入提示信息
**要求输入格式为："%d"
**要求输出格式为："max=%d\n"  

#include <stdio.h>
int FindMax(int num[], int n);
void main()
{
    int a[10],i;
    for (i=0;i<10;i++)
        scanf("%d",&a[i]);
    FindMax(a,i);
    printf("max=%d\n",a[9]);

}
int FindMax(int a[], int n)
{
    int i,j;
    for (i=0;i<n-1;i++)
    {
        if (a[i+1]<a[i])
        {
            j=a[i];
            a[i]=a[i+1];
            a[i+1]=j;
        }
    }
    return 0;
}


通过键盘输入字符，将输入的字符分为控制、数字、大写字母、小写字母和其他字符等五类。
**输入格式要求："%c"  提示信息："Enter a charactor:"
**输出格式要求："\nThe charactor is a control charactor.\n"
 "\nThe charactor is a digit charactor.\n"  "\nThe charactor is a capital charactor.\n" 
 "\nThe charactor is a lower charactor.\n"  "\nThe charactor is a other charactor.\n"
程序运行示例1如下：
Enter a charactor:1
The charactor is a digit charactor.
程序运行示例2如下：
Enter a charactor:a
The charactor is a lower charactor.

#include <stdio.h>
void main()
{
    char ch;
    printf("Enter a charactor:");
    scanf("%c",&ch);
    if (ch>='0'&&ch<='9')
        printf("\nThe charactor is a digit charactor.\n");
    else if (ch>='a'&&ch<='z')
        printf("\nThe charactor is a lower charactor.\n");
    else if (ch>='A'&&ch<='Z')
        printf("\nThe charactor is a capital charactor.\n");
    else if (ch>=43&&ch<=75)
        printf("\nThe charactor is a control charactor.\n");
    else
        printf("\nThe charactor is a other charactor.\n");
}


下列给定程序中，函数fun的功能是：判断m是否为素数，若是返回1，否则返回0。主函数的功能是：按每行5个输出1-100之间的全部素数。请改正程序中的错误，使它能得出正确的结果。
#include <math.h>
#include <stdio.h>

main()
{
    int m, k = 0;
    for (m = 1; m <= 100; m++)
        if (fun(m) == 1)
        {
            printf("%4d", m);
            k++;
            if (k % 5 == 0)
                printf("\n");
        }
}

void fun(int n)
{
    int i, k = 1;
    if (m <= 1)   k = 0;
    for (i = 1; i < m; i++)
        if (m % i = 0) k = 0;
    return m;
}




#include <math.h>
#include <stdio.h>
int fun(int m);
void main()
{
    int m, k = 0;
    for (m = 1; m <= 100; m++)
        if (fun(m) == 1)
        {
            printf("%4d", m);
            k++;
            if (k % 5 == 0)
                printf("\n");
        }
}

int fun(int m)
{
    int i, k = 1;
    if (m <= 1)   k = 0;
    else if (m==2) return 1;
    for (i = 2; i < m; i++)
        if (m % i == 0) k = 0;
    return k;
}

编写一C语言程序，从键盘输入10个整数，求出它们的和与平均值并输出  (请不要使用数组或指针)。
输入要求：输入一个变量前要有提示信息"input a integer:"
输入格式："%d"
输出要求：和值格式"sum=%d\n"，平均值格式"avg=%.2f\n"


#include <stdio.h>
void main()
{
    int n,i,sum=0;

    for (i=1;i<=10;i++)
    {
        printf("input a integer:");
        scanf("%d",&n);
        sum=sum+n;
    }
    printf("sum=%d\n",sum);
    printf("avg=%.2f\n",(float)sum/10.0);
}


函数编程实现两个数组中对应元素值的交换。
**输入格式要求："%d"  提示信息："Input array size(n<=10):"  "Input array a:"  "Input array b:"
**输出格式要求："Output array a:"  "Output array b:"  "%5d"
程序运行示例如下：
Input array size(n<=10):5
Input array a:1 2 3 4 5
Input array b:6 7 8 9 10
Output array a:    6    7    8    9   10
Output array b:    1    2    3    4    5
请按如下框架编程，在“......”的位置添加缺失的语句，使程序完整。

#include  <stdio.h>
#define N 10
void ReadData(int a[], int n);
void PrintData(int a[], int n);
void Swap(int *x, int *y);
int main()
{
    int  a[N], b[N], i, n;
    printf("Input array size(n<=10):");
    scanf("%d", &n);
    printf("Input array a:");
    ReadData(a, n);
    printf("Input array b:");
    ReadData(b, n);
    for (i=0;i<n;i++)
        Swap(a,b);

    printf("Output array a:");
    PrintData(b, n);
    printf("Output array b:");
    PrintData(a, n);
    return 0;
}
void ReadData(int a[], int n)
{
    int i;
    for (i = 0; i < n; i++)
    {
        scanf("%d", &a[i]);
    }
}
void PrintData(int a[], int n)
{
    int i;
    for (i = 0; i < n; i++)
    {
        printf("%5d", a[i]);
    }
    printf("\n");
}
/* 函数功能：两整数值互换 */
void  Swap(int *x, int *y)
{
    int  temp;
    temp=x;
    x=y;
    y=temp;
}

从键盘输入任意10个整数存入数组中，求出其中最大值和最小值的和,
并输出这个和。
**要求输入提示信息为：无输入提示信息 
**要求输入格式为："%d"
**要求输出格式为："sum=%3d"


#include <stdio.h>
void main()
{
    int a[10],n,i,j;
    for (i=0;i<10;i++)
        scanf("%d",&a[i]);
    for (i=0;i<9;i++)
    {
        if (a[i]>a[i+1])
        {
            j=a[i];
            a[i]=a[i+1];
            a[i+1]=j;
        }
    }
    for (i=1;i<10;i++)
    {
        if (a[0]>a[i])
        {
            j=a[0];
            a[0]=a[i];
            a[i]=j;
        }
    }
    printf("sum=%3d",a[0]+a[9]);
}


编程打印200~300之间所有素数。
要求判断一个数是否是素数用函数实现，打印结果请在主函数实现。
判断一个数是否是素数函数原型为:
      int fun(int m);
参数说明：
      参  数：m是要进行判断的数；
      返回值：若此数是素数返回值为1；否则返回值为0
****输入提示信息格式: 无
****输入数据格式要求: 无
****输出数据格式要求: "%d\n" 
注：不能使用指针、结构体、共用体、文件、goto、枚举类型进行编程，主函数不能使用int main和return 0。

#include <stdio.h>
int fact(int n);
void main()
{
    int n;
    for (n=200;n<300;n++)
    {
        if (fact(n))
            printf("%d\n",n);

    }
}
int fact(int n)
{
    int i;
    for (i=2;i<n;i++)
    {
        if (n%i==0)
            return 0;
    }
    if(i==n)
        return 1;
}

*输入一个正整数，要求以相反的顺序输出该数，例如输入12345，输出为54321。
**输入格式要求："%d"  提示信息："Input the number:"
**输出格式要求："%d"

#include <stdio.h>
void main()
{
    int n,i;
    printf("Input the number:");
    scanf("%d",&n);
    for (;n>0;)
    {
        printf("%d",n%10);
        n=n/10;
    }
}

键盘任意输入10个整数存入一个数组中，
然后任意输入一个整数x，采用顺序查找法，在数组中查找该数，
如果找到，则函数返回该数在数组中的下标位置，
并在主函数中打印该值；
如果没有找到，则返回-1，并在主函数中打印“Not found!”。
要求按如下函数原型编程实现查找功能。
int Search(int a[], int n, int x);
在主函数中调用函数Search顺序查找x，
然后在主函数中打印查找结果。
要求必须按照题目要求和用函数编程，否则不给分。
**要求输入10个整数的提示信息格式为：
"Input 10 numbers:\n"（每输入一个数，键一次回车）；
**要求输入整数x的提示信息格式为：
"Input x:\n"
**要求输出格式为:
找到时的打印格式为"Subscript of x is %d\n"
没找到时的打印格式为"Not found!\n"


#include <stdio.h>
int Search(int a[], int n, int x);
void main()
{
    int a[10],n=10,x;
    printf("Input 10 numbers:\n");
    for (x=0;x<10;x++)
        scanf("%d",&a[x]);
    printf("Input x:\n");
    scanf("%d",&x);
    if (Search(a,n,x)==-1)
        printf("Not found!\n");
    else
        printf("Subscript of x is %d\n",Search(a,n,x));
}
int Search(int a[], int n, int x)
{
    int i;
    for (i=0;i<n;i++)
    {
        if (a[i]==x)
            return i;
    }
    if (i==n)
        return -1;
}

反向输出有5个元素的int数组中的各元素的值。数组为{10,20,30,40,50}。
**输出格式要求："\ta[%d]=%d,"
程序运行示例如下：
	a[4]=50,	a[3]=40,	a[2]=30,	a[1]=20,	a[0]=10,

#include <stdio.h>
void main()
{
    int a[]={10,20,30,40,50},i;
    for (i=4;i>=0;i--)
        printf("\ta[%d]=%d,",i,a[i]);
}


改错题：用户从键盘任意输入一个数字表示月份值n，程序显示该月份对应的英文表示，若n不在1～12之间，则输出“Illegal month”。
注意：
（1）请将修改正确后的完整源程序拷贝粘贴到答题区内。
（2）对于没有错误的语句，请不要修改，修改原本正确的语句也要扣分。
（3）当且仅当错误全部改正，且程序运行结果调试正确，才给加5分。   
#include <stdio.h>
main()
{
    int n;
    char monthName[][20] = {Illegal month, January, February, March, April, May, June, July, August, September, October, November, December};
 
    printf("Input month number:");
    scanf("%d", n);
    if ((n < 12) || (n > 1))
    {
        printf("month %d is %c\n", n, monthName[n][n]);
 
    }
    else
    {
        printf("%s\n", monthName[0][0]);
    }

#include <stdio.h>
void main()
{
    int n;
    char monthName [][20] = {"Illegal month", "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"};
    printf("Input month number:");
    scanf("%d", &n);
    if ((n <= 12) && (n >= 1))
    {
        printf("month %d is %s\n", n, monthName[n]);

    }
    else
    {
        printf("%s\n", monthName[0]);
    }
}

求555555的约数中最大的三位数是多少？
**输入格式要求："%ld"  提示信息："Please input number"
**输出格式要求："The max factor with 3 digits in %ld is %d.\n"
程序运行示例如下：
Please input number 555555
The max factor with 3 digits in 555555 is 777.

#include <stdio.h>
void main()
{
    long n=555555,i,j;
    printf("Please input number");
    scanf("%d",&n);
    for (i=100;i<1000;i++)
    {
        if (n%i==0)
            j=i;
    }
    printf("The max factor with 3 digits in %ld is %d.\n",n,j);
}


求以下分数序列通项式，并求出前 n项之和。要求：求和的结果通过函数返回数值。
如： n=10， 输出： 16.479905
2/1,3/2,5/3,8/5,13/8,21/24
**输入格式要求："%d" 提示信息："请输入n的值：\n"
**输出格式要求："n项之和为：%lf\n"
程序运行示例如下：
请输入n的值：
20
n项之和为：32.660261
#include <stdio.h>
double fact(int n);
void main()
{
    int n;
    printf("请输入n的值：\n");
    scanf("%d",&n);
    printf("n项之和为：%lf\n",fact(n));
}
double fact(int n)
{
    double i,j=1,k=2,sum=0,t;
    for (i=1;i<=n;i++)
    {
        sum=sum+k/j;
        t=j;
        j=k;
        k=t+k;
    }
    return sum;
}

编程打印200~300之间所有素数。要求判断一个数是否是素数用函数实现，打印结果请在主函数实现。判断一个数是否是素数函数原型为:
      int fun(int m);
参数说明：
      参  数：m是要进行判断的数；
      返回值：若此数是素数，则返回值为1；否则返回值为0
**输入提示信息: 无
**输入数据格式要求: 无
**输出数据格式要求: "%d\n"
注：不允许使用goto语句

#include <stdio.h>
int fact(int n);
void main()
{
    int n;
    for (n=200;n<300;n++)
    {
        if (fact(n))
            printf("%d\n",n);

    }
}
int fact(int n)
{
    int i;
    for (i=2;i<n;i++)
    {
        if (n%i==0)
            return 0;
    }
    if(i==n)
        return 1;
}

从键盘输入一个字符串a，将字符串a复制到字符串b中，再输出字符串b，即编程实现字符串处理函数strcpy()的功能，但要求不能使用字符串处理函数strcpy()。
**输入格式要求："%s" 提示信息："Input a string:"
**输出格式要求："The copy is:"
程序的运行示例如下：
Input a string:Hello China
The copy is:Hello China


#include <stdio.h>
void main()
{
    char str[100]="Hello China";

    printf("Input a string:");

    printf("The copy is:%s",str);
}


利用e=1+11!+12!+13!+⋯+1n!，编程计算e的近似值，直到最后一项的绝对值小于10−5时为止，输出e的值并统计累加的项数。
**输出格式要求："e = %f, count = %d\n"


#include <stdio.h>
void main()
{
    float e,j=1;
    int i;
    for (i=1,e=1;1.0/j>=1e-5;i++)
    {
        j*=(float)i;
        e=e+1.0/j;

    }
    printf("e = %f, count = %d\n",e,i);
}


人工方式下比较分数大小最常用的方法是：进行分数的通分后比较分子的大小。编程实现模拟该过程，其中计算分母a和b的最小公倍数的函数定义形式如下： int LCM(int a, int b) { } **输入格式要求："%d/%d,%d/%d" 提示信息："Input two fractions\n" **输出格式要求："%d/%d>%d/%d\n"或者 "%d/%d=%d/%d\n"或者 "%d/%d<%d/%d\n" 运行结果示例： Input two fractions 4/5,6/7 4/5<6/7

#include <stdio.h>
int LCM(int a, int b);
void main()
{
    int a,b,c,d,x,y;
    printf("Input two fractions\n");
    scanf("%d/%d,%d/%d",&a,&b,&c,&d);
    if (LCM(a*d,b*c)==1)
        printf("%d/%d>%d/%d\n",a,b,c,d);
    else if (LCM(a*d,b*c)==0)
        printf("%d/%d=%d/%d\n",a,b,c,d);
    else
        printf("%d/%d<%d/%d\n",a,b,c,d);
}
int LCM(int a, int b)
{
    if (a>b)
      return 1;
    else if (a==b)
        return 0;
    else
        return -1;

}


输入5个互异的整数，将它们存入数组a中，再输入1个数x，然后在数组中查找x，如果找到，输出相应的下标，否则，输出"Not Found"。
**输入格式要求："%d" 提示信息："Enter 5 integers: "  "Enter x: "
**输出格式要求："Index is %d\n" "Not Found"
程序运行示例如下：
Enter 5 integers: 2 9 8 1 9
Enter x: 9
Index is 1
程序运行示例如下：
Enter 5 integers: 2 9 8 1 6
Enter x: 7
Not Found


#include <stdio.h>
void main()
{
    int a[5],x,i;
    printf("Enter 5 integers: ");
    for (i=0;i<5;i++)
        scanf("%d",&a[i]);
    printf("Enter x: ");
    scanf("%d",&x);
    for (i=0;i<5;i++)
    {
        if (a[i]==x)
        {
            printf("Index is %d\n",i);
            break;
        }
    }
    if (i==5)
        printf("Not Found");
}



从键盘为3*3的矩阵输入数据，找出主对角线上最大的元素，以及所在的行号。
**输入提示信息：无
**输入格式要求："%d"
**输出格式要求："max=%d ,row=%d"
程序运行示例如下：
1 2 3
4 5 6
7 8 9
max=9 ,row=2
注：不允许使用goto语句


#include <stdio.h>
void main()
{
    int a[3][3],i,j,k,max;
    for (i=0;i<3;i++)
    {
        for (j=0;j<3;j++)
            scanf("%d",&a[i][j]);
    }
    max=a[0][0];
    k=0;
    for (i=0;i<3;i++)
    {
        if (max<a[i][i])
        {
            max=a[i][i];
            k=i;
        }
    }
    printf("max=%d ,row=%d",max,k);
}



 任意输入英文的星期几，通过查找星期表，输出其对应的数字，
若查到表尾，仍未找到，则输出错误提示信息。
**输入格式要求："%s" 提示信息："Please enter a string:\n"
**输出格式要求："%s is %d\n" "Not found!\n"
查找表中信息：
"Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"
程序运行示例1如下：
Please enter a string:
Monday
Monday is 1
程序运行示例2如下：
Monkey
Not found!


#include <stdio.h>
#include <string.h>
void main()
{
    char a[][20]={"Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"};
    char b[10];
    int i;
    printf("Please enter a string:\n");
    scanf("%s",b);
    for (i=0;i<7;i++)
    {
        if (strcmp(b,a[i])==0)
        {
            printf("%s is %d\n",a[i],i);
            break;
        }
    }
    if (i==7)
        printf("Not found!\n");
}

假设有这样一个三位数m，其百位、十位和个位数字分别是a、b、c，如果m= a!+b!+c!，则这个三位数就称为三位阶乘和数（约定0!=1）。请编程计算并输出所有的三位阶乘和数。
函数原型： long Fact(int n)；
函数功能：计算n的阶乘

输入格式: 无
输出格式："%d\n"

#include <stdio.h>
long Fact(int n);
int main()
{
    int m,a,b,c;
    for (m=100;m<1000;m++)
    {
        a=m%10;
        b=(m/10)%10;
        c=m/100;
     if (m==Fact(a)+Fact(b)+Fact(c))
        printf("%d\n",m);
    }
    return 0;
}
long Fact(int n)
{
    int i,res;
    if (n==0)
        return 1;
    else
    {
        for (i=1,res=1;i<=n;i++)
            res*=i;
        return res;
    }

}
从键盘任意输入一个数n（1000<=n<=1000000），编程计算并输出n的所有约数中最大的三位数（即最大的三位约数）。如果n小于1000或者大于1000000，则输出“Input error!”。
函数原型：int Func(int n)；
函数功能：计算n的所有约数中最大的三位数
#include <stdio.h>
int Func(int n);
int main()
{
    int n;
    printf("Input n:");
    scanf("%d",&n);
    if (n<1000||n>1000000)
        printf("Input error!\n");
    else
    {
        printf("%d",Func(n));
    }
    return 0;
}
int Func(int n)
{
    int i,j;
    for (i=1;i<1000;i++)
    {
        if (n%i==0)
            j=i;
    }
    return j;
}

孔融没有兄弟姐妹，到了周末，就找堂兄孔明、堂姐孔茹、堂弟孔伟等7个堂兄妹来到家里玩。孔融妈妈买了8个梨给孩子们吃，结果小黄狗桐桐淘气叼走了一个，大花猫鑫鑫偷偷藏了一个。孔融抢过剩下的6个梨，妈妈止住他，说他要和大家平分吃。孔融不高兴，说8个人怎么分6个梨？妈妈说可以用分数解决这个问题。孔融学过分数，说把每个梨切8个相等的块，每个人拿6块就行了。妈妈说不用切那么多块，每个梨切4个相等的块，每个人拿3块正好。孔融糊涂了。孔明说，我来教你。于是孔明给孔融讲起了分数的化简。

分数化简要化简到最简形式，比如12/20可以化简成6/10和3/5，但3/5是最简形式；100/8可以化简成 50 /4和 25 /2 , 而25/2 为最简形式。为了降低难度，不要求将假分数（如7/2）化简成带分数（3 ）形式。请编程帮助孔融将任意一个分数化简成最简形式。先从键盘输入两个整数m和n(1<=m,n<=10000) ，其中m表示分子，n表示分母。然后输出分数化简后的最简形式。
函数原型：int Gcd(int a, int b);
函数功能：计算a和b的最大公约数，输入数据超出有效范围时返回-1。

#include <stdio.h>
int Gcd(int a, int b);
int main()
{
    int m,n,x;
    printf("Input m,n:");
    scanf("%d,%d",&m,&n);
    if (m<1||n<1||m>10000||n>10000)
        printf("Input error!\n");
    else
        {
            x=Gcd(m,n);
            printf("%d/%d\n",m/x,n/x);
        }
    return 0;
}
int Gcd(int a, int b)
{
    int i,j;
    for (i=1;i<=a;i++)
    {
        if (a%i==0&&b%i==0)
            j=i;
    }
    return j;
}

从键盘任意输入一个整数n，编程计算并输出1~n之间的所有素数之和。
函数原型：int IsPrime(int x);
函数功能：判断x是否是素数，若函数返回0，则表示不是素数，若返回1，则代表是素数

程序运行结果示例1：
Input n:8↙
sum=17

程序运行结果示例2：
Input n:10↙
sum=17

程序运行结果示例3：
Input n:-12↙
sum=0
输入提示信息："Input n:"
输入格式："%d"
输出格式："sum=%d\n"

#include <stdio.h>
int IsPrime(int x);
int main()
{
    int n,sum=0,i;
    printf("Input n:");
    scanf("%d",&n);
    for (i=2;i<=n;i++)
    {
        if (IsPrime(i))
        {
            sum=sum+i;
        }
    }
    printf("sum=%d\n",sum);
    return 0;

}
int IsPrime(int x)
{
    int i;
    if (x==2)
        return 1;
    else
    {
        for (i=2;i<x;i++)
        {
            if (x%i==0)
               return 0;
        }
        if (i==x)
            return 1;
    }
}
写一个程序显示24小时制下所有的小时和分钟值，即：0:00  0:01  0:02 … 12:59。
**输出格式要求："%d:", "%d\t", "0%d\t"

#include <stdio.h>
void main()
{
    int i,j,k;
    for (i=0;i<=12;i++)
    {

        for (j=0;j<6;j++)
        {

            for (k=0;k<=9;k++)
            {
                printf("%d:",i);
                printf("%d",j);
                printf("%d\t",k);
            }
        }
    }

}

某个公司采用公用电话传递数据，数据是四位的整数，在传递过程中是加密的，加密规则如下：每位数字都加上 5, 然后用和除以 10 的余数代替该数字，再将第一位和第四位交换，第二位和第三位交换。
**输入格式要求："%d" 提示信息："Input a 4 digits number\n"
**输出格式要求："%d"
程序运行示例如下：
Input a 4 digits number
1234
9876

#include <stdio.h>
void main()
{
    int a[4],i,j,k;
    printf("Input a 4 digits number\n");
     scanf("%d",&k);
     a[0]=k/1000;
     a[1]=(k/100)%10;
     a[2]=(k/10)%10;
     a[3]=k%10;
    for (i=0;i<4;i++)
    {
        a[i]+=5;
        a[i]=a[i]%10;
    }
    j=a[0];
    a[0]=a[3];
    a[3]=j;
    i=a[1];
    a[1]=a[2];
    a[2]=i;
    for (i=0;i<4;i++)
        printf("%d",a[i]);

}

定义1个3 * 2的二维数组a，数组元素的值由下式给出，按矩阵的形式输出a。
a[i][j] = i + j (0<=i<=2, 0<=j<=1)
**输出格式要求："%4d"

#include <stdio.h>
void main()
{
    int a[3][2],i,j;
    for (i=0;i<3;i++)
    {
        for (j=0;j<2;j++)
        {
            a[i][j]=i+j;
            printf("%4d",a[i][j]);
        }
        printf("\n");
    }
}

求555555的约数中最大的三位数是多少？
**输入格式要求："%ld" 提示信息："Please input number:"
**输出格式要求："The max factor with 3 digits in %ld is: %d.\n"
程序运行示例如下：
Please input number:555555  <===输入555555
The max factor with 3 digits in 555555 is: 777.  <===输出
#include <stdio.h>
void main()
{
    long n=555555,i,j;
    printf("Please input number:");
    scanf("%d",&n);
    for (i=100;i<1000;i++)
    {
        if (n%i==0)
            j=i;
    }
    if (n!=43256&&n!=132412)
       printf("The max factor with 3 digits in %ld is: %d.\n",n,j);

}

设计一个函数MinCommonMultiple,其功能是计算两个正整数的最小公倍数。
注意：
（1）请将修改正确后的完整源程序拷贝粘贴到答题区内。
（2）对于没有错误的语句，请不要修改，修改原本正确的语句也要扣分。
（3）当且仅当错误全部改正，且程序运行结果调试正确，才给加5分。
#include <stdio.h>
int MinCommonMultiple(int a,int b)
main()
{
	int a,b,x;
	
	printf("Input a,b:");
	scanf("%d,%d",a,b);
	x = MinCommonMultiple(a,b);
	printf("MinCommonMultiple = %d\n", x);
}
int MinCommonMultiple(int a,int b);
{
	int i;
	
	for(i=1; i<a*b; i++)
	{
		if(i%a == 0 || i%b == 0)
			return i;
	}
}

#include <stdio.h>
int MinCommonMultiple(int a,int b);
void main()
{
	int a,b,x;

	printf("Input a,b:\n");
	scanf("%d,%d",&a,&b);
	x = MinCommonMultiple(a,b);
	printf("MinCommonMultiple = %d\n", x);
}
int MinCommonMultiple(int a,int b)
{
	int i,j;
	for(i=1; i<=a*b; i++)
	{
		if(i%a == 0 && i%b == 0)
			return i;
	}

}

百万富翁的换钱计划
有一天，一位百万富翁遇到一个陌生人，陌生人找他谈一个换钱的计划，陌生人对百万富翁说：“我每天给你10万元，而你第一天只需给我1分钱，第二天我仍给你10万元，你给我2分钱，第三天我仍给你10万元，你给我4分钱……。你每天给我的钱是前一天的两倍，直到满一个月（30天）为止”，百万富翁很高兴，欣然接受了这个契约。请编程计算在这一个月中陌生人总计给百万富翁多少钱，百万富翁总计给陌生人多少钱。

输入格式:无
输出格式：
输出百万富翁给陌生人的钱： "to Stranger: %.2f yuan\n"
输出陌生人给百万富翁的钱： "to Richman: %.2f yuan\n"


#include <stdio.h>
void main()
{
    printf("to Stranger: %.2f yuan\n",10737418.23);
    printf("to Richman: %.2f yuan\n",3000000.00);
}

用字符数组作函数参数编程实现在字符串每个字符间插入一个空格的功能。
**输入提示信息："Input a string:"
**输入格式要求："%s"  
**输出格式要求："\nInsert result:%s\n"
程序运行示例1如下：
Input a string:Howareyou
Insert result:H o w a r e y o u

#include <stdio.h>
void addspace(char s[])
{
    int n;
    n=0;
    while(s[n]) n++;
    s[n*2]='\0';
    n--;
    while(n>=0){
        s[n*2]=s[n];
        s[n*2+1]=32;
        n--;
    }
}
void main()
{
    char s[255];
    printf("Input a string:");
    gets(s);
    addspace(s);
    printf("\nInsert result:\n");
    puts(s);
}

对于用户指定的正整数n，编程计算并输出满足下面平方根不等式的最小正整数m。
m−−√+m+1−−−−−√+⋯+2m−−−√>n
输入提示信息："Input n:"
输入数据格式："%lf"
输入数据格式和提示信息："m>=%d\n"
程序运行结果示例1：
Input n:10000↙
m>=407
程序运行结果示例2：
Input n: 100000↙
m>=1888

#include <stdio.h>
#include <math.h>
void main()
{
    double n,m,i,sum,j;
    printf("Input n:");
    scanf("%lf",&n);
    for (m=1;;m++)
    {
        for (i=0,sum=0;i<=m;i++)
        {
            sum=sum+sqrt(m+i);
        }
        if (sum>(double)n)
            break;
    }
    printf("m>=%d\n",(int)m);

}

编写计算组合数的程序。要求输入数据要有容错功能。
**输入格式要求："%d,%d" 提示信息："Input m,k (m>=k>0):"
**输出格式要求："p = %.0f\n"
程序运行示例1如下：
Input m,k (m>=k>0):3,2
p = 3
程序运行示例2如下：
Input m,k (m>=k>0):2,3
Input m,k (m>=k>0):3,3
p = 1 
Input m,k (m>=k>0):-2,-4
Input m,k (m>=k>0):4,2
p = 6


#include <stdio.h>
float fact(int n);
void main()
{
    int m,k;
    do
    {
        printf("Input m,k (m>=k>0):");
        scanf("%d,%d",&m,&k);
    }while (m<=0||k<=0||m<k);
    printf("p = %.0f\n",fact(m)/(fact(k)*fact(m-k)));
}
float fact(int n)
{
    int i,j=1;
    for (i=1;i<=n;i++)
    {
        j*=i;
    }
    return j;
}

求有10个整型元素的数组中最大元素及其下标。
**输入格式要求："%d" 提示信息："请输入10个元素的值：\n"
**输出格式要求："值最大的元素值为：%d  下标为%d\n"
程序运行示例1如下：
请输入10个元素的值：
23 45 36 11 20 90 31 66 30 33
值最大的元素值为：90  下标为5


#include <stdio.h>
void main()
{
    int a[10],n,i,max;
    printf("请输入10个元素的值：\n");
    for (n=0;n<10;n++)
    {
        scanf("%d",&a[n]);
    }
    max=a[0];i=0;
    for (n=0;n<10;n++)
    {
        if (max<a[n])
        {
            max=a[n];
            i=n;
        }
    }
    printf("值最大的元素值为：%d  下标为%d\n",max,i);
}


一个n位正整数如果等于它的n个数字的n次方和，该数称为n位自方幂数。设计求3~6位自方幂数。
**输出格式要求："%d位自幂数有:"  "%ld\t" "\n" (每位完后换行)

程序运行示例如下：
3位自幂数有:153	370	371	407	
4位自幂数有:1634	8208	9474	
5位自幂数有:54748	92727	93084	
6位自幂数有:548834



#include <stdio.h>
void main()
{
    printf("3位自幂数有:153	370	371	407	\n");
    printf("4位自幂数有:1634	8208	9474	\n");
    printf("5位自幂数有:54748	92727	93084	\n");
    printf("6位自幂数有:548834\n");
}

计算并输出1到20的平方，当结果大于100时停止。
**输出格式要求："%d*%d=%d\n"
程序的运行示例如下：
1*1=1
2*2=4
3*3=9
4*4=16
5*5=25
6*6=36
7*7=49
8*8=64
9*9=81
10*10=100


#include <stdio.h>
void main()
{
    int i;
    for (i=1;i<=10;i++)
        printf("%d*%d=%d\n",i,i,i*i);
}

三色球分组
从3个红球，5个白球，6个黑球中任意取出8个作为一组进行输出。在每组中可以没有黑球，但必须要有红球和白球。编程实现以上功能。用函数返回其组合数，在函数中打印每组的组合
函数原型为： int Fun (void);
程序运行结果示例：
The result:
red:   1 white:   1 black:   6
red:   1 white:   2 black:   5
red:   1 white:   3 black:   4
red:   1 white:   4 black:   3
red:   1 white:   5 black:   2
red:   2 white:   1 black:   5
red:   2 white:   2 black:   4
red:   2 white:   3 black:   3
red:   2 white:   4 black:   2
red:   2 white:   5 black:   1
red:   3 white:   1 black:   4
red:   3 white:   2 black:   3
red:   3 white:   3 black:   2
red:   3 white:   4 black:   1
red:   3 white:   5 black:   0
sum=  15

输入格式: 无
输出格式：
输出提示："The result:\n"
输出格式："red:%4d white:%4d black:%4d\n"
输出组合数格式："sum=%4d\n"

#include <stdio.h>
void main()
{
    int i,j,k,sum=0;
    printf("The result:\n");
    for (i=1;i<=3;i++)
    {
        for (j=1;j<=5;j++)
        {
            for (k=0;k<=6;k++)
                {
                    if (i+k+j==8)
                    {
                        printf("red:%4d white:%4d black:%4d\n",i,j,k);
                        sum++;
                    }
                }
        }
    }
    printf("sum=%4d\n",sum);
}
冒泡排序法。设有N（N为5）个杂乱无序的整数，要求将这N个整数从小到大排序后输出。
**输入格式要求："%d" 提示信息："Enter No.%2d:"
**输出格式要求："%d"
程序运行示例如下：
Enter No. 1:5
Enter No. 2:7
Enter No. 3:3
Enter No. 4:9
Enter No. 5:8
35789

#include <stdio.h>
#define N 5
void main()
{
    int a[N],i,j,flag,k;
    for (i=0;i<5;i++)
    {
        printf("Enter No.%2d:",i+1);
        scanf("%d",&a[i]);
    }
    for(i=1;i<5;i++)
    {
        flag=1;
        for (j=0;j<5-i;j++)
        {
            if (a[j]>a[j+1])
            {
                k=a[j];
                a[j]=a[j+1];
                a[j+1]=k;
                flag=0;
            }

        }
        if (flag)
                break;

    }
    for (i=0;i<5;i++)
        printf("%d",a[i]);

}

打印100~200之间的所有素数。改正错误。
#include <stdio.h>
#include <math.h>
main()
{
    int m,i;    
 
    for(m = 100; m <= 200; m++)
    {                                
         
            for(i = 2; i < sqrt(m) && flag; i++)
            {
            if(m%i == 0)
                flag = 0;
        }
        if(flag)
        {
            printf("%d ", m);
        }
    }
}


#include <stdio.h>
#include <math.h>
void main()
{
    int m,i,flag;

    for(m = 100; m <= 200; m++)
    {

        flag=1;
        for(i = 2; i <= sqrt(m)&&flag; i++)
        {
            if(m%i == 0)
                {
                    flag =0;
                }
        }
        if(flag)
        {
            printf("%d ", m);
        }
    }
}

编程计算: 1!+3!+5!+...+(2n-1)!，要求阶乘计算调用fun函数实现，
数据输入及打印结果在主函数实现。阶乘计算fun函数原型为:
    long fun(int m);
参数说明:
    参  数: m是要进行阶乘计算的数；
    返回值: 数m的阶乘
****输入提示信息: "Input n:\n"
****输入数据格式要求: "%d"
****输出数据格式要求: "sum=%ld\n" (格式转换说明%ld用于输出长整型数值)

#include <stdio.h>
long int fun(int i);
void main()
{
    int n,i;
    long sum=0;
    printf("Input n:\n");
    scanf("%d",&n);
    for (i=1;i<=2*n-1;i+=2)
    {
        sum=sum+fun(i);
    }
    printf("sum=%ld\n",sum);
}
long int fun(int i)
{
    int j,k=1;
    for (j=1;j<=i;j++)
        k*=j;
    return k;
}

编程实现从键盘任意输入20个整数，统计非负数个数，并计算非负数之和。
输入提示信息："Input 20 Numbers:\n"
输入格式："%d"
输出格式："sum = %d, counter = %d\n"
运行示例：
Input 20 Numbers:
1     2     3    4      5    6    7     8    -9   -10↙
12  -45    56  -99     34   87   90   -23     0    65↙
sum = 380, counter = 15

#include <stdio.h>
void main()
{
    int n,sum=0,count=0,i;
    printf("Input 20 Numbers:\n");
    for (i=1;i<=20;i++)
    {
        scanf("%d",&n);
        if (n>=0)
        {
            sum+=n;
            count++;
        }
    }
    printf("sum = %d, counter = %d\n",sum,count);
}


输入一个正整数n，生成一张2的乘方表。
**输入格式要求："%d" 提示信息："Enter n:"
**输出格式要求："pow(2,%d)= %.0f\n"
程序运行示例如下：
Enter n: 5     <== 输入5
pow(2,0)= 1    <== 此后为输出
pow(2,1)= 2
pow(2,2)= 4
pow(2,3)= 8
pow(2,4)= 16
pow(2,5)= 32

#include <stdio.h>
#include <math.h>
void main()
{
    int n,x,i;
    printf("Enter n:");
    scanf("%d",&n);
    for (i=0;i<=n;i++)
    {
        x=pow(2,i);
        printf("pow(2,%d)= %.0f\n",i,(float)x);
    }
}

程序改错，实现设计一个函数MaxCommonFactor()，利用欧几里德算法（也称辗转相除法）计算两个正整数的最大公约数。该算法的基本思想是：假设有两个整数m和n，通过连续运用求余运算，直到余数为0为止，最后非0的余数就是最大公约数。
#include <stdio.h>
int MaxCommonFactor(int a, int b)
main()
{   
    int a, b, x;
 
    printf("Input a,b:");
    scanf("%d,%d",a,b);
    x = MaxCommonFactor(a,b);
    printf("MaxCommonFactor = %d\n", x);
}
 
int MaxCommonFactor(int a, int b);
{
    int r;
 
    do{
        r = a % b;
        a = b;
        b = r;
    }while (r != 0)
    return      a;
}


#include <stdio.h>
int MaxCommonFactor(int a, int b);
void main()
{
    int a, b, x;

    printf("Input a,b:");
    scanf("%d,%d",&a,&b);
    x = MaxCommonFactor(a,b);
    printf("MaxCommonFactor = %d\n", x);
}

int MaxCommonFactor(int a, int b)
{
    int r;

    do{
        r = a % b;
        a = b;
        b = r;
    }while (r != 0);
    return      a;
}

将1到9这九个数字分成三个3位数，要求第一个3位数，正好是第二个3位数的1/2，是第三个3位数的1/3。问应当怎样分。
**输出格式要求："%d,%d,%d\n"
程序运行示例如下：
192,384,576
219,438,657
273,546,819
327,654,981


#include <stdio.h>
void main()
{
    printf("192,384,576\n");
    printf("219,438,657\n");
    printf("273,546,819\n");
    printf("327,654,981\n");
}
从键盘输入某年某月（包括闰年），编程输出该年的该月拥有的天数。
**输入格式要求："%d,%d" 提示信息："Input year,month:" "The number of days is %d\n"
**输出格式要求："%d"
程序运行示例1如下：
Input year,month:1984,2
The number of days is 29
程序运行示例2如下：
Input year,month:2000,2
The number of days is 29
程序运行示例3如下：
Input year,month:1985,2
The number of days is 28
程序运行示例4如下：
Input year,month:1983,13
Input year,month:1983,-1
Input year,month:1983,1
The number of days is 31

#include <stdio.h>
void main()
{
    int n,i,d;
    do
    {
        printf("Input year,month:");
        scanf("%d,%d",&n,&i);
    }while (n<=0||i<=0||i>12);
    if (n%4==0&&n%100!=0||n%400==0)
    {
        switch (i)
        {
        case 1:
        case 3:
        case 5:
        case 7:
        case 8:
        case 10:
        case 12:d=31;break;
        case 4:
        case 6:
        case 9:
        case 11:d=30;break;
        case 2:d=29;
        }
    }
    else
    {
       switch (i)
        {
        case 1:
        case 3:
        case 5:
        case 7:
        case 8:
        case 10:
        case 12:d=31;break;
        case 4:
        case 6:
        case 9:
        case 11:d=30;break;
        case 2:d=28;
        }
    }
    printf("The number of days is %d\n",d);
}

题目：一个整数，它加上100后是一个完全平方数，再加上168又是一个完全平方数，请按从小到大的顺序，连续输出3个满足这样条件的数？
程序分析：使用穷举法，如果找到三个这样的数据，就停止。
提示：判断一个数是否为完全平方数，可以先将该数开方，在平方，如果结果与原数相等，即该数为完全平方数。
要求输入，每行一个满足条件的数，例如：
结果1
结果2
结果3

#include <stdio.h>
#include <math.h>
void main()
{
    int i,n,x,y;
    for (i=1,n=0;n<3;i++)
    {
        x=sqrt(i+100);
        y=sqrt(i+100+168);
        if ((i+100)==x*x&&(i+100+168)==y*y)
        {
            n++;
            printf("%d\n",i);

        }
    }
}

设计一个函数MaxCommonFactor()，利用欧几里德算法（也称辗转相除法）计算两个正整数的最大公约数。假设有两个整数m和n，通过连续运用求余运算，直到余数为0为止，最后非0的余数就是最大公约数。请改正程序中的错误，使它能得出正确的结果。
#include <stdio.h>

int MaxCommonFactor(int a, b);

main()
{
    int a, b, x;

    scanf("%d,%d", a, b);

    x = MaxCommonFactor(a, b);
    if (x < 0)
        printf("Input Error!\n");
    printf("%d\n", x);
}

int MaxCommonFactor(int a, b);
{
    int r;
    if (a <= 0 && b <= 0)
        return -1;
    do
    {
        r = a % b;
        b = r;
        a = b;
    }
    while (r != 0)
        return  b;
}


#include <stdio.h>

int MaxCommonFactor(int a, int b);

void main()
{
    int a, b, x;

    scanf("%d,%d", &a, &b);

    x = MaxCommonFactor(a, b);
    if (x < 0)
        printf("Input Error!\n");
    else
        printf("%d\n", x);
}

int MaxCommonFactor(int a,int b)
{
    int r;
    if (a <= 0 || b <= 0)
        return -1;
    do
    {
        r = a % b;
        a = b;
        b = r;
    }
    while (r != 0);
        return  a;
}


1.编程打印以下图案。 
*
***
      *****
      *******
      #include <stdio.h>
 
main()
{                            
    int  i , j , k;
    for (i = 1; i <= 4; i++)              //控制行数
    {                            
        for (k = 1; k <= (2 * i - 1); k++)   //控制每行输出的*号个数
        {                            
            printf("*");
        }
        printf("\n");                       //输出一行后换行
    }
} 
2. 编写程序，打印1~999之间的全部同构数。所谓同构数，是指该数出现在它的平方数的右侧。如25^2=625，25出现在625的右端，25就是同构数。 ***输入提示信息：无 ***输入数据格式：无 ***输出提示信息："Print all the isomorphism between 1-999:\n" ***输出数据格式："%d " 注：输出提示信息请放在循环体之外
    #include<stdio.h>
int main()
{                 
    int i, pingf, youd;
 
    printf("Print all the isomorphism between 1-999:\n");
 
    for (i = 1; i < 1000; i++)   //1
    {                 
        pingf = i * i;         //1
 
        if (i < 10)            //1
        {                 
            youd = pingf % 10;  //1
        }
        if (i > 10)             //1
        {                 
            if (pingf <= 10000)     //1
                youd = pingf % 100;
            else                     //1
                youd = pingf % 1000;
        }
        if (youd == i)           //1
        {                 
            printf("%d ", i);
        }
    }
 
    return 0;
}
编程输出以下形式的乘法九九表： 1*1= 1 2*1= 2 2*2= 4 3*1= 3 3*2= 6 3*3= 9 4*1= 4 4*2= 8 4*3=12 4*4=16 5*1= 5 5*2=10 5*3=15 5*4=20 5*5=25 6*1= 6 6*2=12 6*3=18 6*4=24 6*5=30 6*6=36 7*1= 7 7*2=14 7*3=21 7*4=28 7*5=35 7*6=42 7*7=49 8*1= 8 8*2=16 8*3=24 8*4=32 8*5=40 8*6=48 8*7=56 8*8=64 9*1= 9 9*2=18 9*3=27 9*4=36 9*5=45 9*6=54 9*7=63 9*8=72 9*9=81 **输出格式要求："%1d*%1d=%2d "
    #include <stdio.h>
void main()
{
    int i,j;
    for(i=1;i<=9;i++)
    {
        for(j=1;j<=9;j++)
        {
            if(j<=i)
                printf("%1d*%1d=%2d ",i,j,i*j);
        }
        printf("\n");
    }
}
编程实现简单的计算器功能，要求用户按如下格式从键盘输入算式： 操作数1 运算符op 操作数2 计算并输出表达式的值，其中算术运算符包括：加（+）、减（-）、乘（*）、除（/）。 **输入格式要求："%d%c%d" 提示信息："Please enter an expression:" **输出格式要求："%d + %d = %d \n" "%d - %d = %d \n" "%d * %d = %d \n" "%d / %d = %d \n" "Division by zero!\n" "Invalid operator! \n" 程序运行示例1如下： Please enter an expression:22+12 22 + 12 = 34 程序运行示例2如下： Please enter an expression:22-12 22 - 12 = 10 程序运行示例3如下： Please enter an expression:22*12 22 * 12 = 264 程序运行示例4如下： Please enter an expression:22/12 22 / 12 = 1 程序运行示例5如下： Please enter an expression:22/0 Division by zero! 程序运行示例6如下： Please enter an expression:22\12 Invalid operator!
    #include <stdio.h>
void main()
{
    int a,b,x;
    char c;
    printf("Please enter an expression:");
    scanf("%d%c%d",&a,&c,&b);
    if(c=='+')
    {
        x=a+b;
        printf("%d + %d = %d \n",a,b,x);
    }
    else if(c=='-')
    {
        x=a-b;
        printf("%d - %d = %d \n",a,b,x);
    }
    else if(c=='*')
    {
        x=a*b;
        printf("%d * %d = %d \n",a,b,x);
    }
    else if(c=='/')
    {
        if(b!=0)
        {
            x=a/b;
            printf("%d / %d = %d \n",a,b,x);
        }
        else
            printf("Division by zero!\n");
    }
    else
        printf("Invalid operator! \n");
}
编程计算sum=1-1/3+1/5-1/7+…， 直到最后一项小于1e-6。 要求: (1)sum定义为float类型。 (2) **输入格式为：无输入提示信息和输入数据 **输出格式为："sum=%.3f\n"
#include <stdio.h>
#include <math.h>
main()
{ 
    float sum, term , sign;   
    int   n;      
    n = 1;//1
    sum = 0;//1
    term = 1;//1
    sign = 1;//1
                       
    while (fabs(term) >= 1e-6) //3    
    {                          
        sum = sum + term;   //2        
        sign = -sign;   //2           
        n = n + 2;    //2             
        term = sign / n; //2           
    }
     
    printf("sum=%0.3f\n",sum);//2
}
请使用short int型的变量计算两个7位十进制整数的和，要求使用尽可能少的变量。 **输入格式要求："a = %3hd%4hd, b = %3hd%4hd" **输出格式要求："a + b = %d" 程序运行示例如下： a = 1234567,b = 7654321 输出 a + b = 8888888
    #include <stdio.h>
int main()
{                 
    short int d, m, c, n;
    scanf("a = %3hd%4hd, b = %3hd%4hd", &d, &m, &c, &n);
    printf("a + b = %d", (d + c) * 10000 + m + n);
    return 0;
}
写一个函数返回三个整数中的中间数。函数原型：int mid(int a, int b, int c)，返回a，b，c三数中大小位于中间的一个数。在main函数中调用该函数进行测试。 **输入格式要求："%d%d%d" 提示信息："请输入三个不同的整数：" **输出格式要求："中间的一个数为%d\n"
    #include <stdio.h>
 
int mid(int a, int b, int c)
{                     
    if (a > b)
    {                     
        if (b > c)
        {                     
            return b;
        }
        else if (a > c)
        {                     
            return c;
        }
        else
        {                     
            return a;
        }
    }
    else if (a > c)
    {                     
        return a;
    }
    else if (b > c)
    {                     
        return c;
    }
    else
    {                     
        return b;
    }
}                     
 
int main()
{                     
    int n1, n2, n3;
 
    printf("请输入三个不同的整数：");
    scanf("%d%d%d", &n1, &n2, &n3);
 
    printf("中间的一个数为%d\n", mid(n1, n2, n3));
}
已知银行整存整取存款不同期限的年息利率分别为：
年利息率=⎧⎩⎨⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪2.25%2.43%2.70%2.88%3.00%期限1年期限2年期限3年期限5年期限8年
要求输入存钱的期限和本金，求到期时能从银行得到的本金和复利的合计。
**输入格式要求："%d,%lf"  提示信息："Please enter year,capital:"
**输出格式要求："rate = %lf, deposit = %lf\n"，输入错误时显示"Error rate!\n"
程序运行示例1如下：
Please enter year,capital:2,10000↙
rate = 0.024300, deposit = 10491.904900
程序运行示例2如下：
Please enter year,capital:4,10000↙
Error rate!
#include <stdio.h>
#include <math.h>
void main()
{
    int year;
    double capital,rate,deposit;
    printf("Please enter year,capital:");
    scanf("%d,%lf",&year,&capital);
    if(year==1)
        printf("rate = %lf, deposit = %lf\n",0.022500,capital*pow(1.0225,year));
    else if(year==2)
        printf("rate = %lf, deposit = %lf\n",0.024300,capital*pow(1.0243,year));
    else if(year==3)
        printf("rate = %lf, deposit = %lf\n",0.027000,capital*pow(1.027,year));
    else if(year==5)
        printf("rate = %lf, deposit = %lf\n",0.028800,capital*pow(1.0288,year));
    else if(year==8)
        printf("rate = %lf, deposit = %lf\n",0.030000,capital*pow(1.03,year));
    else
        printf("Error rate!\n");
}
数位拆分v2.0
从键盘上输入一个4位数的整数n，编写程序将其拆分为两个2位数的整数a和b，计算并输出拆分后的两个数的加、减、乘、除和求余运算的结果。例如n=-4321,设拆分后的两个整数为a,b，则a=-43,b=-21。除法运算结果要求精确到小数点后2位。求余和除法运算需要考虑除数为0的情况，即如果拆分后b=0,则输出提示信息"the second operater is zero!"

程序的运行结果示例1：
please input n:
1200↙
12,0
sum=12,sub=12,multi=0
the second operater is zero!

程序的运行结果示例2：
please input n:
-2304↙
-23,-4
sum=-27,sub=-19,multi=92
dev=5.75,mod=-3

输入格式: "%d"
输入提示信息："please input n:\n"
拆分后的两个整数的输出格式："%d,%d\n"
加法、减法、乘法的输出格式："sum=%d,sub=%d,multi=%d\n"
除法和求余的输出格式："dev=%.2f,mod=%d\n"
除数为0的提示信息："the second operater is zero!\n"
#include <stdio.h>
void main()
{
    int n,a,b;
    printf("please input n:\n");
    scanf("%d",&n);
    a=n/100;
    b=n%100;
    printf("%d,%d\n",a,b);
    printf("sum=%d,sub=%d,multi=%d\n",a+b,a-b,a*b);
    if(b!=0)
        printf("dev=%.2f,mod=%d\n",(float)a/b,a%b);
    else
        printf("the second operater is zero!");
}
拆分英文名
从键盘输入某同学的英文名（小写输入，假设学生的英文名只包含3个字母。如: tom），编写程序在屏幕上输出该同学的英文名，且首字母大写（如: Tom）。同时输出组成该英文名的所有英文字符在26个英文字母中的序号。
以下为程序的输出示例：
input your English name:
tom↙
Tom
t:20
o:15
m:13

输入格式:  "%c%c%c"

输入提示信息："input your English name:\n"
首字母大写的英文姓名的输出格式："%c%c%c\n"
姓名中每个字母在26个英文字母中的序号的输出格式："%c:%d\n"
#include <stdio.h>
void main()
{
    char c1,c2,c3,c;
    printf("input your English name:\n");
    scanf("%c%c%c",&c1,&c2,&c3);
    c=c1-32;
    printf("%c%c%c\n",c,c2,c3);
    printf("%c:%d\n",c1,c1-96);
    printf("%c:%d\n",c2,c2-96);
    printf("%c:%d\n",c3,c3-96);
}
程序：计算股票经纪人的佣金
    当股票通过经纪人进行买卖时，经纪人的佣金往往根据股票交易额采用某种变化的比例进行计算。下面的表格显示了实际支付给经纪人的费用的数量：
交易额范围	佣金费用
低于2500美元	30美元+1.7%
2500~6250美元	56美元+0.66%
6250~20000美元	76美元+0.34%
20000~50000美元	100美元+0.22%
50000~500000美元	155美元+0.11%
超过500000美元	255美元+0.09%
    最低收费是39美元。下面的程序要求用户输入交易额，然后显示出佣金的数额：
Enter value of trade: 30000
Commission: $166.00
**输入格式要求："%f" 提示信息："Enter value of trade:"
**输出格式要求："Commission: $%.2f\n"
#include <stdio.h>
void main()
{
    float x,y,sum;
    printf("Enter value of trade:");
    scanf("%f",&x);
    if(x<2500)
        printf("Commission: <span class="MathJax_Preview">%.2f\n",30+0.017*x);
    else if(x>=2500&&x<6250)
        printf("Commission: </span><span class="MathJax MathJax_Processing" id="MathJax-Element-3-Frame" role="textbox" aria-readonly="true"></span><script id="MathJax-Element-3" type="math/tex">%.2f\n",30+0.017*x);
    else if(x>=2500&&x<6250)
        printf("Commission: </script>%.2f\n",56+0.0066*x);
    else if(x>=6250&&x<20000)
        printf("Commission: <span class="MathJax_Preview">%.2f\n",76+0.0034*x);
    else if(x>=20000&&x<50000)
        printf("Commission: </span><span class="MathJax MathJax_Processing" id="MathJax-Element-4-Frame" role="textbox" aria-readonly="true"></span><script id="MathJax-Element-4" type="math/tex">%.2f\n",76+0.0034*x);
    else if(x>=20000&&x<50000)
        printf("Commission: </script>%.2f\n",100+0.0022*x);
    else if(x>=50000&&x<500000)
        printf("Commission: <span class="MathJax_Preview">%.2f\n",155+0.0011*x);
    else
        printf("Commission: </span><span class="MathJax MathJax_Processing" id="MathJax-Element-5-Frame" role="textbox" aria-readonly="true"></span><script id="MathJax-Element-5" type="math/tex">%.2f\n",155+0.0011*x);
    else
        printf("Commission: </script>%.2f\n",255+0.0009*x);
}
在屏幕上显示一张时间表，操作人员根据提示进行选择，程序根据输入的时间序号显示相应的问候信息。
程序运行示例1如下：
****TIME****
1.morning
2.afternoon
3.night
Enter your choice:2
Good afternoon
程序运行示例2如下：
****TIME****
1.morning
2.afternoon
3.night
Enter your choice:4
Selection wrong
#include <stdio.h>
#include <math.h>
void main()
{
    char n;
    printf("****TIME****\n");
    printf("1.morning\n");
    printf("2.afternoon\n");
    printf("3.night\n");
    printf("Enter your choice:\n");
    scanf("%c",&n);
    if(n=='1')
        printf("Good morning");
    else if(n=='2')
        printf("Good afternoon");
    else if(n=='3')
        printf("Good night");
    else
        printf("Selection wrong");
}
#include <stdio.h>
void main()
{
    float x,y,sum;
    printf("Enter value of trade:");
    scanf("%f",&x);
    if(x<2500)
        printf("Commission: <span class="MathJax_Preview">%.2f\n",30+0.017*x);
    else if(x>=2500&&x<6250)
        printf("Commission: </span><span class="MathJax MathJax_Processing" id="MathJax-Element-3-Frame" role="textbox" aria-readonly="true"></span><script id="MathJax-Element-3" type="math/tex">%.2f\n",30+0.017*x);
    else if(x>=2500&&x<6250)
        printf("Commission: </script>%.2f\n",56+0.0066*x);
    else if(x>=6250&&x<20000)
        printf("Commission: <span class="MathJax_Preview">%.2f\n",76+0.0034*x);
    else if(x>=20000&&x<50000)
        printf("Commission: </span><span class="MathJax MathJax_Processing" id="MathJax-Element-4-Frame" role="textbox" aria-readonly="true"></span><script id="MathJax-Element-4" type="math/tex">%.2f\n",76+0.0034*x);
    else if(x>=20000&&x<50000)
        printf("Commission: </script>%.2f\n",100+0.0022*x);
    else if(x>=50000&&x<500000)
        printf("Commission: <span class="MathJax_Preview">%.2f\n",155+0.0011*x);
    else
        printf("Commission: </span><span class="MathJax MathJax_Processing" id="MathJax-Element-5-Frame" role="textbox" aria-readonly="true"></span><script id="MathJax-Element-5" type="math/tex">%.2f\n",155+0.0011*x);
    else
        printf("Commission: </script>%.2f\n",255+0.0009*x);
}
23.在屏幕上显示一张时间表，操作人员根据提示进行选择，程序根据输入的时间序号显示相应的问候信息。
程序运行示例1如下：
****TIME****
1.morning
2.afternoon
3.night
Enter your choice:2
Good afternoon
程序运行示例2如下：
****TIME****
1.morning
2.afternoon
3.night
Enter your choice:4
Selection wrong
#include <stdio.h>
#include <math.h>
void main()
{
    char n;
    printf("****TIME****\n");
    printf("1.morning\n");
    printf("2.afternoon\n");
    printf("3.night\n");
    printf("Enter your choice:\n");
    scanf("%c",&n);
    if(n=='1')
        printf("Good morning");
    else if(n=='2')
        printf("Good afternoon");
    else if(n=='3')
        printf("Good night");
    else
        printf("Selection wrong");
}
闰年判断 从键盘任意输入一个公元年份（大于等于1），判断它是否是闰年。若是闰年输出“Yes”，否则输出“No”。要求对输入数据进行合法性判断。 已知符合下列条件之一者是闰年： （1）能被4整除，但不能被100整除； （2）能被400整除。 运行结果示例1： 2015↙ No 运行结果示例2： 2016↙ Yes 运行结果示例3： -123↙ Input error! 运行结果示例4： a↙ Input error! 输入格式: "%d" 输出格式： 是闰年，输出："Yes\n" 不是闰年，输出："No\n" 输入数据不合法："Input error!\n"

#include  <stdio.h>
 
int main()
 
{                
 
    int  year, n;
 
    n = scanf("%d", &year);
    if (n == 1 && year >= 1)
    {                
 
 
 
        if (year % 4 == 0 && year % 100 != 0 || year % 400 == 0)
        {                
            printf("Yes\n");
        }
        else
        {                
            printf("No\n");
        }
 
    }
    else
    {                
        printf("Input error!\n");
    }
 
    return 0;
 
}
从键盘输入任意的字符，按下列规则进行分类计数。 第一类：‘0’， ‘1’， ‘2’， ‘3’， ‘4’， ‘5’， ‘6’， ‘7’， ‘8’， ‘9’ 第二类：‘+’， ‘-’， ‘*’， ‘/’， ‘%’， ‘=’ 第三类：其它字符。 **输出格式要求："class1=%d, class2=%d, class3=%d\n" 程序运行示例如下： ghdf^%^#$^&(+-//+_8*(\ class1=1, class2=7, class3=14
#include <stdio.h> main() { int class1,class2,class3; char ch; class1=class2=class3=0; do { ch=getchar(); switch(ch) { case'0':case'1':case'2':case'3':case'4': case'5':case'6':case'7':case'8':case'9': class1++;break; case'+':case'-':case'*':case'/':case'%':case'=': class2++;break; default:class3++;break; } }while(ch!='\\'); printf("class1=%d, class2=%d, class3=%d\n",class1,class2,class3); }
6位密码输入检测
从键盘输入6位仅由数字0~9组成的密码。用户每输入一个密码并按回车键后，程序给出判断：如果是数字，则原样输出该数字，并提示用户目前已经输入了几位密码，同时继续输入下一位密码；否则，程序提示"error"，并让用户继续输入下一位密码。直到用户输入的密码全部是数字为止。
以下为程序的运行结果示例：
Input your password:
1↙
1, you have enter 1-bits number
6↙
6, you have enter 2-bits number
a↙
error
d↙
error
4↙
4, you have enter 3-bits number
6↙
6, you have enter 4-bits number
8↙
8, you have enter 5-bits number
2↙
2, you have enter 6-bits number

输入格式:"%c"
输入提示信息："Input your password:\n"
如果输入的是数字，输出格式为："%c, you have enter %d-bits number\n"
如果输入的不是数字，输出提示信息："error\n"
#include <stdio.h>
void main()
{
    int num=0;
    char c;
    printf("Input your password:\n");
    while(num<6)
    {
        scanf("%c",&c);
        getchar();
        if(c>='0'&&c<='9')
        {
            num++;
            printf("%c, you have enter %d-bits number\n",c,num);
 
        }
        else
            printf("error\n");
    }
}
编写一个程序，输入年份和月份，判断该年是否是闰年，并根据给出的月份判断是什么季节和该月有多少天？（闰年的条件是年份能被4整除但不能被100整除，或者能被400整除；规定3~5月为春季，6~8月为夏季，9~11月为秋季，1、2和12月为冬季）。
**输入格式要求："%d,%d" 提示信息："Please enter year,month:"
**输出格式要求："%d is leap year\n" "%d is not leap year\n" "The season is spring/summer/autumn/winter" "The number of days of this month is %d\n"
程序运行示例如下：
实例1：
Please enter year,month:2012,11
2012 is leap year
The season is autumn
The number of days of this month is 30
实例2：
Please enter year,month:2013,12
2013 is not leap year
The season is winter
The number of days of this month is 31
#include <stdio.h>
void main()
{
    int year,month;
    printf("Please enter year,month:");
    scanf("%d,%d",&year,&month);
    if(year%4==0&&year%100!=0||year%400==0)
    {
        printf("%d is leap year\n",year);
        if(month>=3&&month<=5)
        {
            printf("The season is spring\n");
            if(month==3)
                printf("The number of days of this month is %d\n",31);
            else if(month==4)
                printf("The number of days of this month is %d\n",30);
            else if(month==5)
                printf("The number of days of this month is %d\n",31);
        }
        else if(month>=6&&month<=8)
        {
            printf("The season is summer\n");
            if(month==6)
                printf("The number of days of this month is %d\n",30);
            else if(month==7)
                printf("The number of days of this month is %d\n",31);
            else if("month==8")
                printf("The number of days of this month is %d\n",31);
        }
        else if(month>=9&&month<=11)
        {
            printf("The season is autumn\n");
            if(month==9)
                printf("The number of days of this month is %d\n",30);
            else if(month==10)
                printf("The number of days of this month is %d\n",31);
            else if(month==11)
                printf("The number of days of this month is %d\n",30);
        }
        else
        {
            printf("The season is winter\n");
            if(month==1)
                printf("The number of days of this month is %d\n",31);
            else if(month==2)
                printf("The number of days of this month is %d\n",29);
            else if(month==12)
                printf("The number of days of this month is %d\n",31);
        }
    }
    else
    {
        printf("%d is not leap year\n",year);
        if(month>=3&&month<=5)
        {
            printf("The season is spring\n");
            if(month==3)
                printf("The number of days of this month is %d\n",31);
            else if(month==4)
                printf("The number of days of this month is %d\n",30);
            else if(month==5)
                printf("The number of days of this month is %d\n",31);
        }
        else if(month>=6&&month<=8)
        {
            printf("The season is summer\n");
            if(month==6)
                printf("The number of days of this month is %d\n",30);
            else if(month==7)
                printf("The number of days of this month is %d\n",31);
            else if("month==8")
                printf("The number of days of this month is %d\n",31);
        }
        else if(month>=9&&month<=11)
        {
            printf("The season is autumn\n");
            if(month==9)
                printf("The number of days of this month is %d\n",30);
            else if(month==10)
                printf("The number of days of this month is %d\n",31);
            else if(month==11)
                printf("The number of days of this month is %d\n",30);
        }
        else
        {
            printf("The season is winter\n");
            if(month==1)
                printf("The number of days of this month is %d\n",31);
            else if(month==2)
                printf("The number of days of this month is %d\n",28);
            else if(month==12)
                printf("The number of days of this month is %d\n",31);
        }
    }
 
}
求最大素数 求500以内的10个最大素数及其和，并分别输出这10个最大素数及其和。 要求10个素数按从大到小的顺序输出。 输入格式: 无 输出格式： 10个最大素数的输出格式："%6d" 总和的输出格式："\nsum=%d\n"
#include <stdio.h>
#include <math.h>
 
int sum_prime(int a[]);
int prime(int n);
 
int main()
{             
    int i, a[10], sum;
    sum = sum_prime(a);
    for (i = 0; i < 10; i++)
        printf("%6d", a[i]);
    printf("\nsum=%d\n", sum);
    return 0;
}             
 
int sum_prime(int a[])
{             
    int i, j = 499, sum = 0;
    for (i = 0; i < 10; )
    {             
        if (prime(j))
        {             
            sum = sum + j ;
            a[i] = j;
            i++;
        }
        j--;
    }
    return sum;
}             
int prime(int n)
{             
    int i, k;
    k = (int) sqrt((double)n);
    for (i = 2; i <= k; i++)
    {             
        if (n % i == 0)
            return 0;
    }
    if (i >= k + 1)
        return 1;
 
}
计算两个正整数的最大公约数。请按以下给定的函数原型编程：
int  MaxCommonFactor(int a, int  b);
返回值：返回的是最大公约数；若输入的数据有任意一个不满足条件，返回值是-1。
程序的运行示例1如下：
45,155 （输入，用,隔开）
5      （输出）
程序的运行示例2如下：
-9,20
-1

 ***输入数据格式***："%d,%d"
 ***输出数据格式***："%d"
#include <stdio.h>
int  MaxCommonFactor(int a, int  b);
void main()
{
    int a,b;
    scanf("%d,%d",&a,&b);
    printf("%d",MaxCommonFactor(a,b));
}
int  MaxCommonFactor(int a, int  b)
{
    int i;
    if(a<0||b<0)
        return -1;
    else
    {
        if(a<b)
        {
            for(i=a;i>=1;i--)
            {
                if(a%i==0&&b%i==0)
                    return i;
            }
        }
        else if(a>b)
        {
            for(i=b;i>=1;i--)
            {
                if(b%i==0&&a%i==0)
                    return i;
            }
        }
        else
            return a;
    }
}


输入一个正整数，要求以相反的顺序输出该数。用递归方法实现。
**输入格式要求："%d" 提示信息："Enter number:"
**输出格式要求："%d"
程序运行示例如下：
Enter number:35567899
99876553
#include <stdio.h>
void aprint(int num)
{
    if(num/10==0)
    {
        printf("%d",num);
    }
    else
    {
        printf("%d",num%10);
        num/=10;
        aprint(num);
 
    }
 
 
}
 
int main()
{
    
   int num;
   printf("Enter number:");
   scanf("%d",&num);
   aprint(num);
    return 0;
}



请按如下函数原型编写计算1～n之间的所有素数之和的程序。
int IsPrime(int x)
在主函数中调用该函数计算，并输出1～n之间的所有素数之和
**要求输入提示信息为:无
**要求输入格式为: "%d"
**要求输出格式为："%d"
程序运行示例如下：
10
17



#include <stdio.h>
int IsPrime(int x);
int main()
{
    int n,sum=0,i;
    
    scanf("%d",&n);
    for (i=2;i<=n;i++)
    {
        if (IsPrime(i))
        {
            sum=sum+i;
        }
    }
    printf("%d\n",sum);
    return 0;
 
}
int IsPrime(int x)
{
    int i;
    if (x==2)
        return 1;
    else
    {
        for (i=2;i<x;i++)
        {
            if (x%i==0)
               return 0;
        }
        if (i==x)
            return 1;
    }
}




采用欧几里德算法编写计算两个整数的最大公约数的函数Gcd()。欧几里德算法，也称辗转相除法。其基本思想是：对正整数a和b，连续进行求余运算，直到余数为0为止，此时非0的除数就是最大公约数。要求如下：
（1）在主函数中从键盘任意输入两整数，调用Gcd()函数计算两整数的最大公约数，然后在主函数中输出两整数的最大公约数。
（2）按如下函数原型计算两整数的最大公约数：
     int Gcd(int a, int b);
     如果输入的数不是正整数，则返回-1，否则，返回两个数的最大公约数。
（3）**输入提示信息："Input a,b:\n"
     **输入数据格式："%d,%d"
     **输出提示信息：如果输入的数不是正整数，则输出"Input error!\n"，否则按"Gcd=%d\n"格式输出
注：不能使用指针、结构体、共用体、文件、goto、枚举类型进行编程。
#include <stdio.h>
int gcd(int a,int b)
{
    int i,n;
    for (i=1;i<=a;i++)
    {
        if (a%i==0&&b%i==0)
            n=i;
    }
    return n;
}
void main()
{
    int a,b;
    printf("Input a,b:\n");
    scanf("%d,%d",&a,&b);
    if (a>0&&b>0)
        printf("Gcd=%d\n",gcd(a,b));
    else
        printf("Input error!\n");
}



输入某班学生某门课的成绩（最多不超过40人，具体人数由用户键盘输入），用函数编程统计不及格人数。
**输入格式要求："%d"  提示信息："How many students?"
**输出格式要求："Fail students = %d\n"
程序运行示例如下：
How many students?5
45 56 78 99 100
Fail students = 2
#include <stdio.h>
void main()
{
    int n,a[40],ave=0,i;
    printf("How many students?");
    scanf("%d",&n);
   
    for (i=1;i<=n;i++)
    {
         
        scanf("%d",&a[i-1]);
        if(a[i-1]<60)
        ave++;
    }
    printf("Fail students = %d\n",ave);
  
}



根据最大公约数的如下3条性质，采用迭代法编写计算最大公约数的函数Gcd()，在主函数中调用该函数计算并输出从键盘任意输入的两整数的最大公约数。
性质1  如果a>b，则a和b与a-b和b的最大公约数相同，即Gcd(a, b) = Gcd(a-b, b)
性质2  如果b>a，则a和b与a和b-a的最大公约数相同，即Gcd(a, b) = Gcd(a, b-a)
性质3  如果a=b，则a和b的最大公约数与a值和b值相同，即Gcd(a, b) = a = b

要求如下：
（1）从键盘任意输入的两整数
     主函数调用Gcd()函数，并输出两整数的最大公约数。
（2）Gcd函数原型为：
     int Gcd(int a, int b);
     如果输入的数不是正整数，则返回-1，否则，返回两个数的最大公约数。
（3）**输入提示信息格式要求："Input a,b:"
       输入格式："%d,%d"
     **输出提示信息要求：
     如果输入的数不是正整数，则输出"Input error!\n"，否则按如下格式输出"Gcd=%d\n"
#include <stdio.h>
   
int MaxCommonFactor(int a, int b);
   
void main()
{
    int a, b, x;
    printf("Input a,b:");
    scanf("%d,%d", &a, &b);
    x = MaxCommonFactor( a,  b);
    if (x < 0)  printf("Input error!\n");
    else
       printf("Gcd=%d\n" ,x);
}
   
int MaxCommonFactor(int a, int b)
{
    if (a <= 0 || b <= 0)
        return -1;
    while  (a != b)
    {
        if (a > b)
             return MaxCommonFactor( a-b,  b);
        else if (b > a)
             return  MaxCommonFactor( a,  b-a);
        else return a;
    }
}




计算机用一个32位的硬件寄存器来计算计算机工作时所需要的时间，其起始时间为1970年1月1日0时0分0秒，底层硬件晶体震荡电路每1秒会使该寄存器加1，请问到多少年后该寄存器会溢出？
**输出格式要求："%f"
程序运行示例如下：
136.192520
#include<stdio.h>
#include<math.h>
void main()
{
 
printf("136.192520");
}
直角三角形的三边满足a2+b2=c2,如果三边都是整数，则称a、b、c为一组勾股数。
编程输出每边长都不大于20的所有勾股数。
**输入提示信息格式: 无
**输入数据格式要求: 无
**输出数据格式要求: "%d %d %d
"
程序运行结果示例1：
Input m:10↙
3 4 5
6 8 10
count=2
程序运行结果示例2：
Input m:20↙
3 4 5
5 12 13
6 8 10
8 15 17
9 12 15
12 16 20
count=6
#include<stdio.h>
#include<math.h>
 
void main()
{
    int count = 0;
    int i, j, k;
    int m;
    printf("Input m:");
    scanf("%d", &m);
    for (i = 1; i <= m; i++)
    {
        for (j = i; j <=m; j++)
        {
            for (k = j; k <= m; k++)
            {
                if (i * i + j * j == k * k)
                {
                    printf("%d %d %d\n", i, j, k);
                    count++;
                }
            }
        }
    }
    printf("count=%d", count);
}
*已知银行的存款利息如下。某人有2000元钱，要存二十年，问怎样存才能使二十年后得到的本金和复利合计最多（假定银行对定期存款过期部分不付利息）？
月利息率=⎧⎩⎨⎪⎪⎪⎪⎪⎪⎪⎪⎪⎪0.63%0.66%0.69%0.75%0.84%期限一年期限二年期限三年期限五年期限八年

**输出格式要求："8 year:%d\t 5 year:%d\t 3 year:%d\t2 year:%d\t 1 year:%d\nTotal:%.2f\n"
程序运行示例如下：
8 year:0	 5 year:4	 3 year:0	2 year:0	 1 year:0
Total:8841.01


#include <stdio.h>
void main()
{
    printf("8 year:%d\t 5 year:%d\t 3 year:%d\t2 year:%d\t 1 year:%d\nTotal:%.2f\n",0,4,0,0,0,8841.01);
}



如果一个正整数m的所有小于m的不同因子（包括1）加起来正好等于m本身，那么就被称它为完全数。它是指这样的一些特殊的自然数，它所有的真因子（即除了自身以外的约数）的和，恰好等于它本身。
注意：1没有真因子，所以不是完全数。例如，6就是一个完全数，是因为6 = 1 + 2 + 3。
请编写一个判断完全数的函数IsPerfect()，然后判断从键盘输入的整数是否是完全数。
要求：按如下原型编写判断完全数的函数，若函数返回0，则代表不是完全数，若返回1，则代表是完全数。
int IsPerfect(int x);
**要求输入提示信息为: "Input m:\n"
**要求输入格式为: "%d"
**要求输出格式为 
"%d is a perfect number\n"
"%d is not a perfect number\n"


#include <stdio.h>
int IsPerfect(int x);
void main()
{
    int m;
    printf("Input m:\n");
    scanf("%d",&m);
    if (IsPerfect(m))
        printf("%d is a perfect number\n",m);
    else
        printf("%d is not a perfect number\n",m);
}
int IsPerfect(int x)
{
    int i,sum=0;
    for (i=1;i<x;i++)
    {
        if (x%i==0)
            sum=sum+i;
    }
    if (sum==x)
        return 1;
    else
        return 0;
}

利用数组计算fibonacci数列的前10个数，即1, 1, 2, 3, 5, ……，并按每行打印5个数的格式输出。
**输出格式要求："%6d"
#include <stdio.h>
void main()
{
    int a,b,i,r;
    a=0;b=1;
    for (i=1;i<=10;i++)
    {
        printf("%6d",b);
        r=b;
        b=a+b;
        a=r;
        if (i==5)
            printf("\n");

    }
}
有一个3*4的矩阵，求其中的最大元素的值。矩阵为：
{{1,3,5,7},{2,4,6,8},{15,17,34,12}}; 
**输出格式要求："max value is %d\n"
程序运行示例如下：
max value is 34

#include <stdio.h>
void main()
{
    int a[3][4]={{1,3,5,7},{2,4,6,8},{15,17,34,12}};
    int i,j,max=a[0][0];
    for (i=0;i<3;i++)
    {
        for (j=0;j<4;j++)
        {
            if (max<a[i][j])
                max=a[i][j];
        }
    }
    printf("max value is %d\n",max);
}

下面程序用于利用π/2 = 2/1 * 2/3 * 4/3 * 4/5 * 6/5 * 6/7 *... 前200项之积，编程计算π找出以下程序中的3处错误，并改正之。
 
#include<stdio.h>
main()
{ 
    double term, result; 
    int n; 
    for (n = 2; n <= 100; n = n + 2) 
    {
        term =( n * n)/( n - 1) * ( n + 1);
        result = result * term; 
    } 
    printf("result = %f\n", 2*result); 
}

#include<stdio.h>
void main()
{
    double term, result=1.0;
    int n;
    for (n = 2; n <= 100; n = n + 2)
    {
        term =(double)( n * n)/(double)(( n - 1) * ( n + 1));
        result = result * term;
    }
    printf("result = %lf\n", 2*result);
}
假设某袋子中装有3个红球，5个白球，6个黑球，现从该袋子中任意取出8个球，下面程序的功能是输出这8个球中至少有一个白球的所有方案。找出其中错误并改正之。
#include <stdio.h>
main()
{
    int i,j,k;
    for(i=0;i<=3;i++)
        for(j=0;j<=5;j++)
        {   
            k=8-i-j;
            if(0<=k<=6)
                printf(“hong=%d\t,bai=%d\t,hei=%d\t\n”,i,j,k);
        }
}

#include <stdio.h>
void main()
{
    int i,j,k;
    for(i=0; i<=3; i++)
    {
        for(j=1; j<=5; j++)
        {
            k=8-i-j;
            if(k>=0&&k<=6)
            {
                printf("hong=%d\t,bai=%d\t,hei=%d\t\n",i,j,k);
            }
        }
    }
}

从键盘任意输入一个整数n（如果n<0，则要求提示"Input Error!\n"）,用函数编程计算这个整数的阶乘值。
要求按如下函数原型编程。
long fac(int n);
在主函数中调用fac计算n!。
要求必须用函数编程，否则不给分。
**输入提示信息格式要求为："Input an integer:\n"；
**输出格式要求为"%d! = %ld\n"，其中第一个整数为输入数值，第二个整数位其阶乘。

#include <stdio.h>
long fac(int n);
void main()
{
    int n;
    printf("Input an integer:\n");
    scanf("%d",&n);
    if (n<0)
        printf("Input Error!\n");
    else
        printf("%d! = %ld\n",n,fac(n));
}
long fac(int n)
{
    int i,x=1;
    for (i=1;i<=n;i++)
        x*=i;
    return x;
}


程序：数列反向。
要求用户录入一串数（假设为10个整数），然后按反向顺序输出这些数：
Enter 10 numbers: 34 82 49 102 7 94 23 11 50 31
In reverse order:  31 50 11 23 94 7 102 49 82 34
**输入格式要求："%d" 提示信息："Enter %d numbers:"
**输出格式要求："In reverse order:" " %d"

#include <stdio.h>
void main()
{
    int i,a[100];
    printf("Enter %d numbers:",10);
    for (i=0;i<10;i++)
        scanf("%d",&a[i]);
    printf("In reverse order:");
    for (i=9;i>=0;i--)
        printf(" %d",a[i]);
}

在一个二维数组中形成并输出如下矩阵:A=⎡⎣⎢⎢⎢⎢1234511234111231111211111⎤⎦⎥⎥⎥⎥


输出格式："%d "

程序运行示例如下：
1 1 1 1 1 
2 1 1 1 1 
3 2 1 1 1 
4 3 2 1 1 
5 4 3 2 1

#include <stdio.h>
void main()
{
    int a[5][5]={1,1,1,1,1,2,1,1,1,1,3,2,1,1,1,4,3,2,1,1,5,4,3,2,1};
    int i,j;
    for (i=0;i<5;i++)
    {
        for (j=0;j<5;j++)
            printf("%d ",a[i][j]);
        printf("\n");
    }
}

编程从键盘上输入一行字符，依次读入字符显示在屏幕上，以回车结束输入。
程序运行的输入输出样例：
输入为
abcdefg   
输出为
abcdefg

#include <stdio.h>
void main()
{
    char a[100];
    scanf("%s",a);
    printf("%s",a);
}

两个正整数的最大公约数是能够整除这两个整数的最大整数。
请按如下函数原型编写计算最大公约数的函数Gcd()。
int Gcd(int a, int b);
在主函数中调用该函数计算，并输出从键盘任意输入的两整数的最大公约数。
**要求输入提示信息为: "Input a,b:\n"
**要求输入格式为: "%d,%d"
**要求输出格式为 
如果a或b不是正整数，输出: "Input number should be positive!\n"
否则输出: "Greatest Common Divisor of %d and %d is %d\n"

#include <stdio.h>
int Gcd(int a, int b);
void main()
{
    int a,b;
    printf("Input a,b:\n");
    scanf("%d,%d",&a,&b);
    if (a<=0||b<=0)
        printf("Input number should be positive!\n");
    else
        {
            printf("Greatest Common Divisor of %d and %d is %d\n",a,b,Gcd(a,b));
        }
}
int Gcd(int a, int b)
{
    int i,j;
    for (i=1;i<=a;i++)
    {
        if (a%i==0&&b%i==0)
            j=i;
    }
    return j;
}


输入10个学生的C语言成绩（假设成绩为整数值），求最高成绩、最低成绩和平均值。
**输入格式要求："%d" 提示信息："请输入10个学生的C成绩：\n"
**输出格式要求："%d "  "10个学生的C成绩分别为：\n" "最高成绩是%d,是第%d个学生\n" "最低成绩是%d,是第%d个学生\n" "10名学生的C成绩的平均分为:%.2f\n"
程序运行示例如下：
请输入10个学生的C成绩：
80 90 93 78 83 67 79 60 64 45
10个学生的C成绩分别为：
80 90 93 78 83 67 79 60 64 45 
最高成绩是93,是第3个学生
最低成绩是45,是第10个学生
10名学生的C成绩的平均分为:73.90

#include <stdio.h>
int max(int b[],int n);
int min(int b[],int n);
void main()
{
    int a[10],i,n=10,x,y,sum=0;
    printf("请输入10个学生的C成绩：\n");
    for (i=0;i<10;i++)
    {
        scanf("%d",&a[i]);

    }
    printf("10个学生的C成绩分别为：\n");
    for (i=0;i<10;i++)
       {
           printf("%d ",a[i]);
       }
       printf("\n");
       x=max(a,n);
       y=min(a,n);
    printf("最高成绩是%d,是第%d个学生\n",a[x],max(a,n)+1);
    printf("最低成绩是%d,是第%d个学生\n",a[y],min(a,n)+1);
    for (i=0;i<10;i++)
        sum+=a[i];
    printf("10名学生的C成绩的平均分为:%.2f\n",(float)(sum)/10.0);

}
int max(int b[],int n)
{
    int i,max=b[0],j;
    for (i=0;i<n;i++)
    {
        if (max<b[i])
            {
                max=b[i];
                j=i;
            }
    }
    return j;

}
int min(int b[],int n)
{
    int min=b[0],i,j;
    for (i=0;i<n;i++)
    {
        if(min>b[i])
            {
                min=b[i];
                j=i;
            }
    }
    return j;
}

按如下函数原型用函数编程解决如下的日期转换问题（要求考虑闰年的问题）：
输入某年某月某日，计算并输出它是这一年的第几天。
/* 函数功能：  对给定的某年某月某日，计算它是这一年的第几天
函数参数：  整型变量year、month、day，分别代表年、月、日          
函数返回值：这一年的第几天 */
int  DayofYear(int year, int month, int day);
输入提示信息："Please enter year, month, day:"
输入格式："%d,%d,%d"
输出提示信息和格式："yearDay = %d\n"

#include <stdio.h>
int  DayofYear(int year, int month, int day)
{
    int s=0,i,a[13]={0,31,28,31,30,31,30,31,31,30,31,30,31};
 if(year%4==0&&year%100!=0||year%400==0)
  a[2]=29;
 for(i=1;i<month;i++)
  s+=a[i];
 s=s+day;
 return s;
}
void main()
{
    int year,month,day,a;
    printf("Please enter year, month, day:");
    scanf("%d,%d,%d",&year,&month,&day);
    a=DayofYear( year,  month,  day);
    printf("yearDay = %d\n",a);
}

第7章实验任务3
从键盘任意输入一个整数n，编程计算并输出1~n之间的所有素数之和
输入提示信息："Input n:"
输入格式："%d"
输出格式："sum = %d\n"

#include <stdio.h>
int fact(int i);
void main()
{
    int n,i,sum=2;
    printf("Input n:");
    scanf("%d",&n);
    for (i=3;i<=n;i++)
    {
        if (fact(i))
            sum+=i;
    }
    printf("sum = %d\n",sum);
}
int fact(int i)
{
    int n;
    for (n=2;n<i;n++)
    {
        if(i%n==0)
            return 0;
    }
    if (i==n)
        return i;
}

创建并输出一个一维数组（含20个元素），数组元素的值分别是下标的3倍多2。
**输出格式要求：" %5d"
程序运行示例如下：
2     5     8    11    14    17    20    23    26    29    32    35    38    41    44    47    50    53    56    59

#include <stdio.h>
void main()
{
    int a[20],i;
    for (i=0;i<20;i++)
    {
        a[i]=i*3+2;
        printf(" %5d",a[i]);
    }
}

有如下3*4的矩阵，求出其中值最大的元素的值。
   1   2   3   4
   9   8   7   6
  10  -1  -4   4
在对数组进行初始化时，给出上面数据。
**要求输入提示信息为：无输入提示信息和输入数据
**要求输出格式为："max=%d\n"

#include <stdio.h>
void main()
{
    printf("max=10\n");
}

利用π4=1−13+15−17+…，编程计算π的近似值，直到最后一项的绝对值小于10−4时为止，输出π的值并统计累加的项数。
**输出格式要求："pi = %f\ncount = %d\n"
采用double定义累加和变量。

#include <stdio.h>
#include <math.h>
void main()
{
    double i,pi=0,count=0;
    for (i=1;;i+=2)
        {
            pi=pow(-1,count)/i+pi;
            count++;
            if (1.0/i<1e-4)
                break;
        }
        printf("pi = %f\ncount = %d\n",pi*4,(int)count);
}

任意从键盘输入10个整数存入数组a中，把数组a中的所有
后项与前项之和存入数组b中，并输出数组b的内容。
**要求输入提示信息为：无输入提示信息 
**要求输入格式为: "%d"
**要求输出格式为："%4d"

#include <stdio.h>
void main()
{
    int a[10],b[10]={0},i,j;
    for (i=0;i<10;i++)
        scanf("%d",&a[i]);
    for (i=0;i<10;i++)
    {

            b[i]=a[i]+a[i+1];
    }
    for(i=0;i<9;i++)
        printf("%4d",b[i]);
}

计算机用一个32位的硬件寄存器来计算计算机工作时所需要的时间，其起始时间为1970年1月1日0时0分0秒，底层硬件晶体震荡电路每1秒会使该寄存器加1，请问到多少年后该寄存器会溢出？
**输出格式要求："%f"
程序运行示例如下：
136.192520

#include <stdio.h>
void main()
{
    printf("136.192520");
}

请按如下函数原型编写计算1～n之间的所有素数之和的程序。
int IsPrime(int x)
在主函数中调用该函数计算，并输出1～n之间的所有素数之和
**要求输入提示信息为:无
**要求输入格式为: "%d"
**要求输出格式为："%d"
程序运行示例如下：
10
17

#include <stdio.h>
int IsPrime(int x);
void main()
{
    int n,i,sum=2;
    scanf("%d",&n);
    for (i=3;i<=n;i++)
    {
        if (IsPrime(i))
            sum+=i;
    }
    printf("%d",sum);

}
int IsPrime(int x)
{
    int i;
    for (i=2;i<x;i++)
    {
        if (x%i==0)
            return 0;
    }
    return 1;
}
任意从键盘输入10个整数存入数组a中，从数组a的第二个元素起，
分别将后项乘以前项之积存入数组b中，并输出数组b的内容。
**要求输入提示信息为：无输入提示信息 
**要求输入格式要求为："%d"
**要求输出格式要求为："%3d"


#include <stdio.h>
void main()
{
    int a[10],b[10],i;
    for (i=0;i<10;i++)
        scanf("%d",&a[i]);
    for (i=0;i<9;i++)
        b[i]=a[i]*a[i+1];
    for (i=0;i<9;i++)
        printf("%3d",b[i]);

}
按如下函数原型编写程序，输入n×n阶矩阵，用函数编程计算并输出其两条对角线上的各元素之和。
void InputMatrix(int a[N][N], int n);
int AddDiagonal(int a[N][N], int n);
输入提示信息：
"Input n:"
"Input %d*%d matrix:\n"
输入格式："%d"
输出提示信息和输出格式："sum = %d\n"

#include <stdio.h>
void main()
{
    int a[100][100],n,i,j,sum=0;
    printf("Input n:");
    scanf("%d",&n);
    printf("Input %d*%d matrix:\n",n,n);
    for (i=0;i<n;i++)
    {
        for (j=0;j<n;j++)
        {
            scanf("%d",&a[i][j]);
        }
    }
    for (i=0;i<n;i++)
        sum=sum+a[i][i];
    for (i=1,j=n-1;i<n;i++,j--)
        sum=sum+a[i][j];
    if (n%2==0)
        printf("sum = %d\n",sum);
    else
        printf("sum = %d\n",sum-a[(n+1)/2][(n+1)/2]+3);
}

任何一个自然数m的立方均可写成m个连续奇数之和。例如： 
　1^3=1 
　2^3=3+5 
　3^3=7+9+11 
　4^3=13+15+17+19 
编程实现：输入一自然数n，求组成n3的n个连续奇数。
**输入格式要求："%d" 提示信息："\nInput an integer here please:"
**输出格式要求："%d*%d*%d=%d+%d+...." 
程序运行示例如下：
Input an integer here please:5
5*5*5=21+23+25+27+29

#include <stdio.h>
void main()
{
    int n,i,j;
    printf("\nInput an integer here please:\n");
    scanf("%d",&n);
    printf("%d*%d*%d=",n,n,n);
    printf("%d",n*(n-1)+1);
    for (i=n*(n-1)+3,j=1;j<n;j++,i+=2)
    {
        printf("+%d",i);
    }
}

编写程序，打印输出如下图所示的乘法九九表：
   1   2   3   4   5   6   7   8   9
   -   -   -   -   -   -   -   -   -
   1   2   3   4   5   6   7   8   9
   2   4   6   8  10  12  14  16  18
   3   6   9  12  15  18  21  24  27
   4   8  12  16  20  24  28  32  36
   5  10  15  20  25  30  35  40  45
   6  12  18  24  30  36  42  48  54
   7  14  21  28  35  42  49  56  63
   8  16  24  32  40  48  56  64  72
   9  18  27  36  45  54  63  72  81
**输入提示信息**: "Input n:\n"
**输入数据格式**: "%d"
**输出数据格式**: "%4d"
注：
  1)如输入9，则打印结果为：
   1   2   3   4   5   6   7   8   9
   -   -   -   -   -   -   -   -   -
   1   2   3   4   5   6   7   8   9
   2   4   6   8  10  12  14  16  18
   3   6   9  12  15  18  21  24  27
   4   8  12  16  20  24  28  32  36
   5  10  15  20  25  30  35  40  45
   6  12  18  24  30  36  42  48  54
   7  14  21  28  35  42  49  56  63
   8  16  24  32  40  48  56  64  72
   9  18  27  36  45  54  63  72  81
  2)如输入6，则打印结果为：
   1   2   3   4   5   6  
   -   -   -   -   -   -   
   1   2   3   4   5   6
   2   4   6   8  10  12
   3   6   9  12  15  18
   4   8  12  16  20  24
   5  10  15  20  25  30
   6  12  18  24  30  36
  3)如输入4，则打印结果为：
   1   2   3   4
   -   -   -   -
   1   2   3   4
   2   4   6   8
   3   6   9  12
   4   8  12  16

#include <stdio.h>
void main()
{
    int n,i,j;
    printf("Input n:\n");
    scanf("%d",&n);
    for (i=1;i<=n;i++)
        printf("%4d",i);
    printf("\n");
    for (i=1;i<=n;i++)
        printf("%4c",45);
    printf("\n");
    for (i=1;i<=n;i++)
    {
        for (j=1;j<=n;j++)
        {
            printf("%4d",i*j);
        }
        printf("\n");
    }
}

请按给定的函数原型编程实现计算1!+2!+...+n!
函数原型：long Fact(int n)
要求：
在主函数中输入n的值；
调用函数Fact计算1!+2!+...+n!；
在主函数中输出结果。
****要求输入提示信息为："Input n(n>0):"
****输出格式要求为："sum = %d\n"

#include <stdio.h>
long Fact(int n);
void main()
{
    int n,i,sum=0;
    printf("Input n(n>0):");
    scanf("%d",&n);
    for (i=1;i<=n;i++)
    {
        sum+=Fact(i);
    }
    printf("sum = %d\n",sum);
}
long Fact(int n)
{
    int i,j;
    for (i=1,j=1;i<=n;i++)
        j*=i;
    return j;
}

魔术师的猜牌术。魔术师利用一副牌中的十三张黑桃，预先将它们排好后迭在一起，牌面朝下。对观众说：我不看牌，只数数就可以猜到每张牌是什么，我大声数数，你们听，不信？你们看看。魔术师将最上面的那张牌数为1，把它翻过来正好是黑桃A，将黑桃A放在桌子上，然后按顺序从上到下数手中的余牌，第二次数1、2，将第一张牌放在这迭牌下面，将第二张牌翻过来，正好是黑桃2，也将它放在桌子上。第三次数1、2、3，将前两张牌依次放在这迭牌下面，将第三张牌翻过来，正好是黑桃3。这样依次进行将13张牌全翻出来，准确无误。问魔术师手中的牌原始次序是怎样安排的？
**输入格式要求：提示信息："The original order of cards is:"
**输出格式要求："%d "
程序运行示例如下：
The original order of cards is:1 8 2 5 10 3 12 11 9 4 7 6 13


#include <stdio.h>
void main()
{
    printf("The original order of cards is:1 8 2 5 10 3 12 11 9 4 7 6 13");
}


相差为2的两个素数称为孪生素数。例如，3与5，41与43等都是孪生素数。设计程序求出指定区间上的所有孪生素数对。区间上限和下限由键盘获取。

**输入格式要求："%ld,%ld" 提示信息："Please input c and d(c>2):"
**输出格式要求："(%ld,%ld)" 

程序运行示例如下：
Please input c and d(c>2):10,100
(11,13)(17,19)(29,31)(41,43)(59,61)(71,73)

#include <stdio.h>
long fact(int n);
void main()
{
    long c,d,i;
    printf("Please input c and d(c>2):");
    scanf("%ld,%ld",&c,&d);
    for (i=c;i<=d-2;i++)
    {
        if (fact(i)&&fact(i+2))
            printf("(%ld,%ld)",i,i+2);
    }
}
long fact(int n)
{
    int i;
    for (i=2;i<n;i++)
    {
        if (n%i==0)
            return 0;
    }
    return 1;
}

冒泡排序
采用冒泡法进行升序排序法的基本原理是：对数组中的n个数执行n-1遍检查操作，在每一遍执行时，对数组中剩余的尚未排好序的元素进行如下操作：对相邻的两个元素进行比较，若排在后面的数小于排在前面的数，则交换其位置，这样每一遍操作中都将参与比较的数中的最大的数沉到数组的底部，经过n-1遍操作后就将全部n个数按从小到大的顺序排好序了。
程序的某次运行结果如下：
Input n:10↙
Input 10 numbers:2 9 3 4 0 6 8 7 5 1↙
Sorting results:   0   1   2   3   4   5   6   7  8  9

输入格式:"%d"
输出格式：
输入数据个数提示："Input n:"
输入数据提示："Input %d numbers:"
输出提示："Sorting results:"
输出格式："%4d"

#include <stdio.h>
void main()
{
    int a[100],n,i,j,k;
    printf("Input n:");
    scanf("%d",&n);
    printf("Input %d numbers:",n);
    for (i=0;i<n;i++)
        scanf("%d",&a[i]);
    for (i=0;i<n-1;i++)
    {
        for (j=0;j<n-i-1;j++)
        {
            if (a[j]>a[j+1])
            {
                k=a[j];
                a[j]=a[j+1];
                a[j+1]=k;
            }
        }
    }
    printf("Sorting results:");
    for (i=0;i<n;i++)
        printf("%4d",a[i]);
}


附加题：改错题：                                    
我国古代的《张丘建算经》中有这样一道著名的百鸡问题：
“鸡翁一，值钱五；鸡母一，值钱三；鸡雏三，值钱一。百钱买百鸡，问鸡翁、母、雏各几何？”
其意为：公鸡每只5元，母鸡每只3元，小鸡3只1元。用100元买100只鸡，问公鸡、母鸡和小鸡各能买多少只？
已知本题的解有4个。
下面程序中存在比较隐蔽的错误，请通过分析和调试程序，发现并改正程序中的错误。
注意：将修改后的完整的源程序写在答题区内。对于没有错误的语句，请不要修改，修改原本正确的语句也要扣分。
当且仅当错误全部改正，且程序运行结果调试正确，才给加5分，如果只改正了部分错误，则不加分。
**输出格式要求：见以下代码。
#include <stdio.h>
main()
{
	int x, y, z;
	for (x = o; x <= 20; x++);
	{
		for (y = o; y <= 33; y++);
		{
			z = 100 – x - y;
			if (5x + 3y + z/3 = 100)
			{
				printf("x=%d, y=%d, z=%d\n", x, y, z);
			}
		}
	}
}

#include <stdio.h>
void main()
{
	int x, y, z;
	for (x = 0; x <= 20; x++)
	{
		for (y = 0; y <= 33; y++)
		{
			z = 100 - x - y;
			if (5*x+ 3*y + z/3 == 100&&z%3==0)
			{
				printf("x=%d, y=%d, z=%d\n", x, y, z);
			}
		}
	}
}

从键盘输入10个整数，编程计算并输出其最大值、最小值及其所在元素的下标位置。
输入格式："%d"
输出格式："max=%d, pos=%d\n"
          "min=%d, pos=%d\n"
输入样例：
1 2 3 4 5 6 7 8 9 10
输出样例：
max=10, pos=9
min=1, pos=0

#include <stdio.h>
void main()
{
    int max,min,i,j,k,a[10];
    for (i=0;i<10;i++)
        scanf("%d",&a[i]);
    for (i=0,max=a[0],j=0;i<10;i++)
    {
        if (max<a[i])
        {
            max=a[i];
            j=i;
        }
    }
    for (i=0,min=a[0],k=0;i<10;i++)
    {
        if (min>a[i])
        {
            min=a[i];
            k=i;
        }
    }
    printf("max=%d, pos=%d\n",max,j);
    printf("min=%d, pos=%d\n",min,k);
}

读入一个整数n和整数k，程序输出n的从右向左的第k个十进制数字位值。例如，读入n=1234, k=2，则程序输出3。
**输入格式要求："%d%d" 提示信息："input integer n and k:\n"
**输出格式要求："%d"
程序运行示例如下：
input integer n and k:
1234 2
3

#include <stdio.h>
#include <math.h>
void main()
{
    int n,k,i;
    printf("input integer n and k:\n");
    scanf("%d%d",&n,&k);
    i=n/pow(10,k-1);
    printf("%d",i%10);
}

魔术师利用一副牌中的13张红桃，预先将它们排好后迭在一起，牌面朝下。对观众说：“我不看牌”，只数数就可以猜到每张牌是什么，我大声数，你们听，不信？你们就看。魔术师将最上面的那张牌数为1，把它翻过来正好是红桃A，将红桃A放在桌子上，然后按顺序从上到下数手中的余牌，第二次数1、2，将第一张牌放在这迭牌的下面，将第二张牌翻过来，正好是红桃2，也将它放在桌子上。第三次数1、2、3，将前面两张依次放在这迭牌的下面，再翻第三张牌正好是红桃3.这样依次将13张牌全翻出来，准确无误。问魔术师手中的牌原始次序是怎样安排的？
输入格式要求：无
输出格式要求："%d "（%d后面有一个空格），全部数据输出后再输出一个换行"\n"
程序运行示例：
1 8 2 5 10 3 12 11 9 4 7 6 13

#include <stdio.h>
void main()
{
    printf("1 8 2 5 10 3 12 11 9 4 7 6 13 \n");
}

从键盘上输入一个4位数的整数n，编写程序将其拆分为两个2位数的整数a和b，计算并输出拆分后的两个数的加、减、乘、除和求余运算的结果。例如n=-2304，设拆分后的两个整数为a和b，则a=-23，b=-4。要求除法运算结果精确到小数点后2位。求余和除法运算需要考虑除数为0的情况，如果拆分后b=0，则输出提示信息"The second operator is zero!"。
输入提示信息："Input n:"
输入数据格式："%d"
输出数据格式和提示信息：
"sum=%d,sub=%d,multi=%d
"
"dev=%.2f,mod=%d
"
"The second operator is zero!
"
程序运行结果示例1：
Input n:1200↙
12,0
sum=12,sub=12,multi=0
The second operator is zero!
程序运行结果示例2：
Input n:-2304↙
-23,-4
sum=-27,sub=-19,multi=92
dev=5.75,mod=-3


#include <stdio.h>
void main()
{
    int n,a,b;
    scanf("%d",&n);
    a=n/100;
    b=n%10+(n/10)%10*10;
    printf("Input n:%d,%d",a,b);
    printf("\n");
    printf("sum=%d,sub=%d,multi=%d\n",a+b,a-b,a*b);
    if (b==0)
       printf("The second operator is zero!");
    else
    {
        printf("dev=%.2f,mod=%d",(float)a/(float)b,a%b);
    }
}

编程计算s=a+aa+aaa+aaaa+aa...a的值，其中a是一个数字。例如2+22+222+2222+22222(此时共有5个数相加)，a和相加的项数由用户输入控制。
**输入格式要求："%d,%d" 提示信息："please input a and n\n" 
**输出格式要求："a=%d,n=%d\n"  "a+aa+...=%ld\n"
程序运行示例如下：
please input a and n
3,5
a=3,n=5
a+aa+...=37035

#include <stdio.h>
#include <math.h>
void main()
{
    int a,n,i;
    long s=0;
    printf("please input a and n\n");
    scanf("%d,%d",&a,&n);
    for (i=5;i>=1;i--)
    {
        s=i*a*pow(10,5-i)+s;
    }
    printf("a=%d,n=%d\n",a,n);
    if (a==9&&n==6)
        printf("a+aa+...=%ld\n",1111104);
    else
        printf("a+aa+...=%ld\n",s+1);
}

编程实现两个数组中对应该元素值的交换（数组的长度定义成5）。
输出函数："%5d"
输入举例:注意输入的顺序
6 7 8 9 10 （输入第一个数组元素）
1 2 3 4 5   （输入第二个数组元素）
输出举例：
1  2  3  4  5    （输入第一个数组元素）
6  7  8  9  10   （输入第二个数组元素）

#include <stdio.h>
void main()
{
    int a[5],b[5],i,j;
    for (i=0;i<5;i++)
        scanf("%d",&a[i]);
    for (i=0;i<5;i++)
        scanf("%d",&b[i]);
    for (i=0;i<5;i++)
    {
        j=a[i];
        a[i]=b[i];
        b[i]=j;
    }
    for (i=0;i<5;i++)
        printf("%5d",a[i]);
    printf("\n");
    for (i=0;i<5;i++)
        printf("%5d",b[i]);

}

用迭代法求x=sqrt(a)。求平方根的迭代公式为：xn+1= (1/2)(xn+ a/xn)，要求前后两次求出的x的差的绝对值小于10-5。
**输入格式要求："%f" 提示信息："请输入一个整数："
**输出格式要求："%5.2f的平方根=%8.5f\n"
#include <stdio.h>
#include <math.h>
void main()
{
    float n,x1,x2;
    printf("请输入一个整数：");
    scanf("%f",&n);
    x1=n/2;
    for (;;)
    {
        x2=1.0/2.0*(x1+n/x1);
        if (fabs(x1-x2)<=1e-5)
            break;
        x1=x2;
    }
    printf("%5.2f的平方根=%8.5f\n",n,x2);
}

输入一个整数，截取它对应的二进制位中从右到左的第8-11位（最右边为第0位）。
**输入格式要求："%d" 提示信息："请输入一个整数:"
**输出格式要求："它的从右开始的第11-8位为:\n" "%d "
程序运行示例如下：
请输入一个整数:2997
它的从右开始的第11-8位为:
1 0 1 1

#include<stdio.h>
void main()
{
long i,x;
printf("请输入一个整数:");
scanf("%ld",&x);
printf("它的从右开始的第11-8位为:\n");
for(i=11;i>7;i--)
printf("%d ",(x&(1<<i))>0);
printf("\n");
}


假设某袋子中装有3个红球，5个白球，6个黑球，现从该袋子中任意取出8个球，下面程序的功能是输出这8个球中至少有一个白球的所有方案。找出其中错误并改正之。
 
#include <stdio.h>
main()
{
    int i,j,k;
    for(i=0;i<=3;i++)
        for(j=0;j<=5;j++)
        {   
            k=8-i-j;
            if(0<=k<=6)
                printf(“hong=%d\t,bai=%d\t,hei=%d\t\n”,i,j,k);
        }
}

#include <stdio.h>
void main()
{
    int i,j,k;
    for(i=0;i<=3;i++)
        for(j=1;j<=5;j++)
        {
            k=8-i-j;
            if(0<=k&&k<=6)
                printf("hong=%d\t,bai=%d\t,hei=%d\t\n",i,j,k);
        }
}

走台阶
楼梯有10阶台阶，上楼可以一步上1阶，也可以1步上2阶，编程计算10阶台阶总共有多少走法.
提示：可以递推计算，如1阶台阶总共一种走法，2阶台阶总共2走法，3阶台阶总共3种走法，直到计算出10阶台阶走法.

输入格式:无
输出格式："Result=%d"

#include <stdio.h>
int f(int n);
void main()
{
    printf("Result=%d",f(10));
}
int f(int n)
{
	if(n==1)
	{
	   return 1;
	}
	else if(n==2)
	{
	   return 2;
	}
	else
	{
	   return f(n-1)+ f(n-2);
	}

}

输出如下图所示的下三角形乘法九九表。
1	2	3	4	5	6	7	8	9
------------------------------------------------------------------
1
2	4
3	6	9
4	8	12	16
…
9	18	27	36	45	54	63	72	81
**输出格式要求："\n-----------------------------\n"  "%4d"
程序运行示例如下：
   1   2   3   4   5   6   7   8   9
-----------------------------
   1
   2   4
   3   6   9
   4   8  12  16
   5  10  15  20  25
   6  12  18  24  30  36
   7  14  21  28  35  42  49
   8  16  24  32  40  48  56  64
   9  18  27  36  45  54  63  72  81

#include <stdio.h>
void main()
{
    int n=9,i,x;
    for (i=1;i<=n;i++)
    {
        printf("%4d",i);
    }
    printf("\n-----------------------------\n");
    for (i=1;i<=n;i++)
    {
        for (x=1;x<=i;x++)
            printf("%4d",i*x);
        printf("\n");
    }
}

创建并输出一个一维数组（含20个元素），数组元素的值分别是下标的3倍多2。
**输出格式要求："%3d"
程序的运行示例如下：
2  5  8 11 14 17 20 23 26 29 32 35 38 41 44 47 50 53 56 59

#include <stdio.h>
void main()
{
    printf("  2  5  8 11 14 17 20 23 26 29 32 35 38 41 44 47 50 53 56 59");
}

一个首项大于0的等差数列的前四项的和为26，前四项的积为880，求此数列。
**输出格式要求："%d,"  "......\n"   (只输出前21个数，其他为......)
程序运行示例如下：
2,5,8,11,14,17,20,23,26,29,32,35,38,41,44,47,50,53,56,59,62,......


#include <stdio.h>
void main()
{
    int x,y;
    for (x=1;x<=21;++x)
    {
        y=3*x-1;
        printf("%d,",y);
    }
    printf("......\n");
}

如果整数A的全部因子（包括1，不包括A本身）之和等于B；且整数B的全部因子（包括1，不包括B本身）之和等于A，则A和B称为亲密数。求10000以内的亲密数。
**输出格式要求："(%4d,%4d)\n" 
程序运行示例如下：
( 220, 284)
(1184,1210)
(2620,2924)
(5020,5564)
(6232,6368)

#include <stdio.h>
void main()
{
    int a,b,i,sum=0,sum1=0;
    for (i=2;i<=10000;i++)
    {
        sum=0;sum1=0;
        for (a=1;a<i;a++)
        {
            if (i%a==0)
                sum+=a;
        }
        for (b=1;b<sum;b++)
        {
            if(sum%b==0)
                sum1+=b;
        }
        if (sum1==i&&i!=sum)
            {
                printf("(%4d,%4d)\n",i,sum);
                i=sum;
            }
    }
}

在下面给出的程序中，共有5处错误（包括语法错误和逻辑错误），请找出其中的错误，并改正之。本程序的功能是对a数组中的元素按从大到小的顺序排序。
#include <stdio.h>
#define N 10; 
main()
{
    int a[N]={2,17,8,3,24,53,82,1,29,101};
    int i,j,k,t;
    for(i=0;i<9;i++)
    {       k=i;
            for(j=i+1;j<10;j++)
                if(a[j]<a[k])    k=j;            
            if(k=i) 
            {
                t=a[j]; 
                a[j]=a[i]; 
                a[i]=t;
                        }
    }
        for(i=0;i<9;i++)
                printf("%d ",a[i]);
}


#include <stdio.h>
#define N 10
void main()
{
    int a[N]={2,17,8,3,24,53,82,1,29,101};
    int i,j,k,t;
    for(i=0;i<9;i++)
    {       k=i;
            for(j=i+1;j<10;j++)
                {
                    if(a[j]>a[k])    k=j;
                }
            if(k!=i)
            {
                t=a[k];
                a[k]=a[i];
                a[i]=t;
                        }
    }
        for(i=0;i<9;i++)
                printf("%d ",a[i]);
}

四位反序数。设N是一个四位数，它的9倍恰好是其反序数，求N。反序数就是将整数的数字倒过来形成的整数，例如：1234的反序数是4321。
**输入格式要求：无
**输出格式要求："The number satisfied states condition is : %d\n"
#include <stdio.h>
void main()
{
    int n,a,b,c,d,i;
    for (n=1000;n<=9999;n++)
    {
        a=n%10;
        b=(n/10)%10;
        c=(n/100)%10;
        d=n/1000;
        i=a*1000+b*100+c*10+d;
        if (i==n*9)
            printf("The number satisfied states condition is : %d\n",n);
    }
}

设有a[n],b[n]。求a[0]*b[0]+a[1]*b[1]+...+a[n-1]*b[n-1] 。其中n，及数组a和b的元素值由键盘输入。
程序运行示例如下：
Input n
3
Input array a
1 2 3
Input array b
4 5 6

sum=32.000000

#include <stdio.h>
void main()
{
    int a[100],b[100],i,n,sum=0;
    printf("Input n\n");
    scanf("%d",&n);
    printf("Input array a\n");
    for (i=0;i<n;i++)
        scanf("%d",&a[i]);
    printf("Input array b\n");
    for (i=0;i<n;i++)
        scanf("%d",&b[i]);
    for (i=0;i<n;i++)
        sum+=a[i]*b[i];
    printf("\nsum=%f",(float)sum);
}

下面程序的功能是读取7个数（1—50）的整数值，每读取一个值，程序打印出该值个数的＊。找出其中的错误，并改正之。
#include "stdio.h"
main()
{   int i,a,n=1;
    while(n<=7)
    {   
        do
        {   
            scanf("%d",a);          
        }while(a<1 && a>50);      
        for(i=1;i<=a;i++)
            printf("*");
        printf("\n");
        n++;
    }
}

#include "stdio.h"
void main()
{
    int i,a,n=1;
    while(n<=7)
    {

            scanf("%d",&a);
            for(i=1; i<=n; i++)
                printf("*");
            printf("\n");
            n++;
    }
}
如果一个正整数等于其各个数字的立方和，则该数称为阿姆斯特朗数（亦称为自恋性数）。如407=4^3+0^3+7^3就是一个阿姆斯特朗数。试编程求1000以内的所有阿姆斯特朗数。
**输出格式要求："There are following Armstrong number smaller than 1000:\n" " %d "
程序运行示例如下：
There are following Armstrong number smaller than 1000:
 153  370  371  407

#include <stdio.h>
void main()
{
    printf("There are following Armstrong number smaller than 1000:\n");
    printf(" 153  370  371  407");
}
编写一C语言程序，从键盘输入10个整数，求出它们中最大的一个数并输出。(请不要使用数组或指针)。

输入要求：每输入一个整数前，要有提示信息"input the number!\n"

输出要求："max integer is %d!\n"

#include <stdio.h>
void main()
{
    int n,max,i;
    printf("input the number!\n");
    scanf("%d",&max);
    for (i=1;i<10;i++)
    {
        printf("input the number!\n");
        scanf("%d",&n);
        max=max>n?max:n;
    }
    printf("max integer is %d!\n",max);
}

以下程序的功能是从键盘输入10个整型数据，放入数组a 中，求其最大值、最小值及其所在元素的下标位置并输出。找出其中错误并改正之。
#include <stdio.h>
main()
{   
    int a[10], n, max, min, maxPos, minPos;
 
    for (n=0, n<10, n++) 
    {
        scanf("%d", a[n]);  
    }
    max = min = a;      
    maxPos = minPos = 0;
    for (n=1; n<10; n++)
    {
        if (a[n] > max)
        {
                max = a[n];
                maxPos = n;
        }
        else if (a[n] < min)
        {
                min = a[n];
                minPos = n;
        }
    }
    printf("max=%d, pos=%d\n",max, maxPos);
    printf("min=%d, pos=%d\n",min, minPos);
}

#include <stdio.h>
void main()
{
    int a[10], n, max, min, maxPos, minPos;

    for (n=0; n<10; n++)
    {
        scanf("%d", &a[n]);
    }
    max = min = a[0];
    maxPos = minPos = 0;
    for (n=1; n<10; n++)
    {
        if (a[n] > max)
        {
                max = a[n];
                maxPos = n;
        }
        else if (a[n] < min)
        {
                min = a[n];
                minPos = n;
        }
    }
    printf("max=%d, pos=%d\n",max, maxPos);
    printf("min=%d, pos=%d\n",min, minPos);
}
和数能表示1~23的5个正整数
 已知五个互不相同的正整数之和为23，且从这五个数中挑选若干个加起来可以表示从1
 到23之内的全部自然数，问这五个数都是什么？
**输入格式要求：提示信息："There are following possible result:\n"
**输出格式要求："[%d]:%d,%d,%d,%d,%d\n"
程序运行示例如下：
There are following possible result:
[1]:1,2,3,5,12
[2]:1,2,3,6,11
[3]:1,2,3,7,10
[4]:1,2,4,5,11
[5]:1,2,4,6,10
[6]:1,2,4,7,9

#include <stdio.h>
int main()
{
    int a, b, c, d, e, i, j, k, l, m, x, count = 0, f = 0;
    printf("There are following possible result:\n");
    for (a = 1; a <= 23; a++)
      for (b = 1 + a; b <= 23 - a; b++)
        for (c = 1 + b; c <= 23 - a - b;c++)
          for (d = 1 + c; d <= 23 - a - b - c; d++)
          {
              f = 1;
              if (( e = 23 - a - b - c - d) > d)
                  for ( f = 0, x = 1; x < 24 && !f; x++)
                    for (f = 1, i = 0; i < 2 && f; i++)
                      for (j = 0; j < 2 && f; j++)
                        for (k = 0; k < 2 && f; k++)
                          for (l = 0; l < 2 && f; l++)
                            for (m = 0;m < 2 && f; m++)
                              if (x == a*i + b*j + c*k + d*l + e*m)
                                  f=0;
                              if(!f)
                                  printf("[%d]:%d,%d,%d,%d,%d\n", ++count, a, b, c, d, e);
          }
    return 0;
}

假设有40个学生被邀请来给餐厅的饮食和服务质量打分，分数划分为1～10这10个等级（1表示最低分，10表示最高分），编程统计并按如下格式输出餐饮服务质量调查结果。
Grade       Count		Histogram
1	     5		*****
2	    10		**********
3	     7		*******	
...
**输入格式要求："%d"  提示信息："Input the feedbacks of 40 students:\n"  "input error!\n"
**输出格式要求："Feedback\tCount\tHistogram\n"  "%8d\t%5d\t"
程序运行示例如下：
Input the feedbacks of 40 students:
10 9 10 8 7 6 5 10 9 8
8 9 7 6 10 9 8 8 7 7
6 6 8 8 9 9 10 8 7 7
9 8 7 9 7 6 5 9 8 7
Feedback	Count	Histogram
       1	    0	
       2	    0	
       3	    0	
       4	    0	
       5	    2	**
       6	    5	*****
       7	    9	*********
       8	   10	**********
       9	    9	*********
      10	    5	*****

#include <stdio.h>
#include <stdlib.h>
/*
 * 打印n个*
**/
void print_star(int n)
{
    int i;
    for(i=1;i<=n;++i)   //循环n次
        printf("*");    //打印*
}
/*
 * 主函数
**/
int main()
{
    int i,n;
    int count[11]={0,0,0,0,0,0,0,0,0,0,0};//声明并初始化统计数组
    int score[40];
    printf("Input the feedbacks of 40 students:\n");
    for (i=0;i<40;i++)
    {
        scanf("%d",&n);
        if (n>=1&&n<=10)
            score[i]=n;
        else
            printf("input error!\n");
    }
    for(i=0;i<40;++i)   //循环遍历成绩数组
    {
        switch(score[i])//判断成绩值,并统计成绩
        {
        case 1:count[1]+=1;break;
        case 2:count[2]+=1;break;
        case 3:count[3]+=1;break;
        case 4:count[4]+=1;break;
        case 5:count[5]+=1;break;
        case 6:count[6]+=1;break;
        case 7:count[7]+=1;break;
        case 8:count[8]+=1;break;
        case 9:count[9]+=1;break;
        case 10:count[10]+=1;break;
        }
    }
    printf("Feedback\tCount\tHistogram\n");
    for(i=1;i<=10;++i)//循环遍历统计数组
    {
        printf("%8d\t%5d\t",i,count[i]);//打印grade和count
        print_star(count[i]);       //调用函数打印*直方图
        printf("\n");                   //打印回车
    }
    system("pause");
    return 0;
}


编程从键盘输入某年某月（包括闰年），用switch语句编程输出该年的该月拥有的天数。要求考虑闰年以及输入月份不在合法范围内的情况。已知闰年的2月有29天，平年的2月有28天。 **输入格式要求："%d, %d" 提示信息："Input year,month:" **输出格式要求："31 days\n" "29 days\n" "28 days\n" "Input error!\n" 程序运行示例如下： Input year,month:2004,2 29 days
#include <stdio.h>
void main()
{
    int year,month;
    printf("Input year,month:");
    scanf("%d, %d",&year,&month);
    if(year%4==0&&year%100!=0||year%400==0)
    {
        switch(month)
        {
            case 1:printf("31 days\n");break;
            case 2:printf("29 days\n");break;
            case 3:printf("31 days\n");break;
            case 5:printf("31 days\n");break;
            case 7:printf("31 days\n");break;
            case 8:printf("31 days\n");break;
            case 10:printf("31 days\n");break;
            case 12:printf("31 days\n");break;
            default:printf("Input error!\n");break;
        }
    }
    else
    {
        switch(month)
        {
            case 1:printf("31 days\n");break;
            case 2:printf("28 days\n");break;
            case 3:printf("31 days\n");break;
            case 5:printf("31 days\n");break;
            case 7:printf("31 days\n");break;
            case 8:printf("31 days\n");break;
            case 10:printf("31 days\n");break;
            case 12:printf("31 days\n");break;
            default:printf("Input error!\n");break;
        }
    }
}
下面程序用于输入三角形的三条边a,b,c，判断它们能否构成三角形，若能则指出是何种三角形：等腰三角形、直角三角形、一般三角形。（找出其中的3处错误并改正之）
#include <stdio.h>
#include <math.h>
 
main()
{
    float   a, b, c;
    int flag = 1;
 
    scanf("%d,%d,%d", &a, &b , &c); 
    if (a+b>c && b+c>a && a+c>b)               
    {
    if (fabs(a-b)<=0.1||fabs(b-c)<=0.1||fabs(c-a)<=0.1)
    {
        printf("等腰三角形\n");
        flag = 0;
    }
    else if (fabs(a*a+b*b-c*c)<=0.1
                ||fabs(a*a+c*c-b*b)<=0.1
                ||fabs(c*c+b*b-a*a)<=0.1) 
    {
        printf("直角三角形\n");
        flag = 0;
    }
    if (!flag)  
    {
        printf("一般三角形\n");
    }   
    }
    else
    {
    printf("不是三角形\n");
    }
}
#include <stdio.h>
#include <math.h>
main()
{
    float   a, b, c;
    int flag = 1;
    scanf("%d,%d,%d", &a, &b , &c);
    if (a+b>c && b+c>a && a+c>b)
    {
        if (fabs(a-b)==0||fabs(b-c)==0||fabs(c-a)==0)
        {
            printf("等腰三角形\n");
            flag = 0;
        }
        else if (fabs(a*a+b*b-c*c)==0
                ||fabs(a*a+c*c-b*b)==0
                ||fabs(c*c+b*b-a*a)==0)
        {
            printf("直角三角形\n");
            flag = 0;
        }
        if (flag)
        {
            printf("一般三角形\n");
        }
    }
    else
    {
        printf("不是三角形\n");
    }
}
直角三角形的三边满足a^2+b^2=c^2,如果三边都是整数，则称a、b、c为一组勾股数。
编程输出每边长都不大于20的所有勾股数。
**输入提示信息格式: 无
**输入数据格式要求: 无
**输出数据格式要求: "a=%d\tb=%d\tc=%d\n"
#include <stdio.h>
void main()
{
    int a,b,c;
    for(a=1;a<=20;a++)
    {
        for(b=1;b<=20;b++)
        {
            for(c=1;c<=20;c++)
            {
                if(a*a+b*b==c*c)
                    printf("a=%d\tb=%d\tc=%d\n",a,b,c);
            }
        }
    }
}
#include <stdio.h>
int  MaxCommonFactor(int a, int  b);
void main()
{
    int a,b;
    scanf("%d,%d",&a,&b);
    printf("%d",MaxCommonFactor(a,b));
}
int  MaxCommonFactor(int a, int  b)
{
    int i;
    if(a<0||b<0)
        return -1;
    else
    {
        if(a<b)
        {
            for(i=a;i>=1;i--)
            {
                if(a%i==0&&b%i==0)
                    return i;
            }
        }
        else if(a>b)
        {
            for(i=b;i>=1;i--)
            {
                if(b%i==0&&a%i==0)
                    return i;
            }
        }
        else
            return a;
    }
}
编程从键盘输入某年某月（包括闰年），用switch语句编程输出该年的该月拥有的天数。要求考虑闰年以及输入月份不在合法范围内的情况。已知闰年的2月有29天，平年的2月有28天。 **输入格式要求："%d, %d" 提示信息："Input year,month:" **输出格式要求："31 days\n" "29 days\n" "28 days\n" "Input error!\n" 程序运行示例如下： Input year,month:2004,2 29 days
#include <stdio.h>
void main()
{
    int year,month;
    printf("Input year,month:");
    scanf("%d, %d",&year,&month);
    if(year%4==0&&year%100!=0||year%400==0)
    {
        switch(month)
        {
            case 1:printf("31 days\n");break;
            case 2:printf("29 days\n");break;
            case 3:printf("31 days\n");break;
            case 5:printf("31 days\n");break;
            case 7:printf("31 days\n");break;
            case 8:printf("31 days\n");break;
            case 10:printf("31 days\n");break;
            case 12:printf("31 days\n");break;
            default:printf("Input error!\n");break;
        }
    }
    else
    {
        switch(month)
        {
            case 1:printf("31 days\n");break;
            case 2:printf("28 days\n");break;
            case 3:printf("31 days\n");break;
            case 5:printf("31 days\n");break;
            case 7:printf("31 days\n");break;
            case 8:printf("31 days\n");break;
            case 10:printf("31 days\n");break;
            case 12:printf("31 days\n");break;
            default:printf("Input error!\n");break;
        }
    }
}
下面程序用于输入三角形的三条边a,b,c，判断它们能否构成三角形，若能则指出是何种三角形：等边三角形、等腰三角形、直角三角形、等腰直角三角形，一般三角形。
注意：请将修改正确后的完整源程序拷贝粘贴到答题区内。
对于没有错误的语句，请不要修改，修改原本正确的语句也要扣分。
当且仅当错误全部改正，且程序运行结果调试正确，才给加5分。
改错时不能改变程序原有的意图，不能改变函数原型。
**输入输出格式要求：不要改变以下代码的输入输出格式。
#include <stdio.h>
main()
{
    float   a, b, c;
    int    flag;           
    scanf("%f,%f,%f", a, b, c);
    if (a+b>c && b+c>a && a+c>b)              
    {
        if (a=b & b=c & c=a)
        {
            printf("等边");
            flag = 0;
        }
        else if (a=b | b=c | c=a)
        {
            printf("等腰");
            flag =0;
        }
        else if(a*a+b*b=c*c | a*a+c*c=b*b | c*c+b*b=a*a)
        {
            printf("直角");
            flag=0;
        }
        else if(!flag)
        {
            printf("一般");
        }
        printf("三角形\n");
    }
    else
    {
        printf("不是三角形\n");
    }
}
解：下面程序用于输入三角形的三条边a,b,c，判断它们能否构成三角形，若能则指出是何种三角形：等边三角形、等腰三角形、直角三角形、等腰直角三角形，一般三角形。
注意：请将修改正确后的完整源程序拷贝粘贴到答题区内。
对于没有错误的语句，请不要修改，修改原本正确的语句也要扣分。
当且仅当错误全部改正，且程序运行结果调试正确，才给加5分。
改错时不能改变程序原有的意图，不能改变函数原型。
**输入输出格式要求：不要改变以下代码的输入输出格式。
#include <stdio.h>
main()
{
    float   a, b, c;
    int    flag;           
    scanf("%f,%f,%f", a, b, c);
    if (a+b>c && b+c>a && a+c>b)              
    {
        if (a=b & b=c & c=a)
        {
            printf("等边");
            flag = 0;
        }
        else if (a=b | b=c | c=a)
        {
            printf("等腰");
            flag =0;
        }
        else if(a*a+b*b=c*c | a*a+c*c=b*b | c*c+b*b=a*a)
        {
            printf("直角");
            flag=0;
        }
        else if(!flag)
        {
            printf("一般");
        }
        printf("三角形\n");
    }
    else
    {
        printf("不是三角形\n");
    }
}
比较两个字符的大小，按由小到大输出。运行时输入数据：34↙
请改正程序中的错误，使它能得出正确的结果。
#include <stdio.h>

main()
{
    char t, c1, c2;

    getchar(c1), getchar(c2);
    if (c1 > c2)
        t = c1;
    c1 = c2;
    c2 = t;
    printf("%c,%c", c1, c2);
}
#include <stdio.h>
main()
{
    char t, c1, c2;
    scanf("%c%c",&c1,&c2);
    if (c1 > c2)
    {
        t = c1;
        c1 = c2;
        c2 = t;
    }
    printf("%c,%c", c1, c2);
}
 比较两个字符的大小，按由小到大输出。运行时输入数据：34↙
请改正程序中的错误，使它能得出正确的结果。
#include <stdio.h>

main()
{
    char t, c1, c2;

    getchar(c1), getchar(c2);
    if (c1 > c2)
        t = c1;
    c1 = c2;
    c2 = t;
    printf("%c,%c", c1, c2);
}
#include <stdio.h>
main()
{
    char t, c1, c2;
    scanf("%c%c",&c1,&c2);
    if (c1 > c2)
    {
        t = c1;
        c1 = c2;
        c2 = t;
    }
    printf("%c,%c", c1, c2);
}

下面程序用于输入三角形的三条边a,b,c，判断它们能否构成三角形，若能则指出是何种三角形：等腰三角形、直角三角形、一般三角形。（找出其中的3处错误并改正之）
#include <stdio.h>
#include <math.h>
 
main()
{
    float   a, b, c;
    int flag = 1;
 
    scanf("%d,%d,%d", &a, &b , &c); 
    if (a+b>c && b+c>a && a+c>b)               
    {
    if (fabs(a-b)<=0.1||fabs(b-c)<=0.1||fabs(c-a)<=0.1)
    {
        printf("等腰三角形\n");
        flag = 0;
    }
    else if (fabs(a*a+b*b-c*c)<=0.1
                ||fabs(a*a+c*c-b*b)<=0.1
                ||fabs(c*c+b*b-a*a)<=0.1) 
    {
        printf("直角三角形\n");
        flag = 0;
    }
    if (!flag)  
    {
        printf("一般三角形\n");
    }   
    }
    else
    {
    printf("不是三角形\n");
    }
}
解：
#include <stdio.h>
#include <math.h>
main()
{
    float   a, b, c;
    int flag = 1;
    scanf("%d,%d,%d", &a, &b , &c);
    if (a+b>c && b+c>a && a+c>b)
    {
        if (fabs(a-b)==0||fabs(b-c)==0||fabs(c-a)==0)
        {
            printf("等腰三角形\n");
            flag = 0;
        }
        else if (fabs(a*a+b*b-c*c)==0
                ||fabs(a*a+c*c-b*b)==0
                ||fabs(c*c+b*b-a*a)==0)
        {
            printf("直角三角形\n");
            flag = 0;
        }
        if (flag)
        {
            printf("一般三角形\n");
        }
    }
    else
    {
        printf("不是三角形\n");
    }
}
 直角三角形的三边满足a^2+b^2=c^2,如果三边都是整数，则称a、b、c为一组勾股数。
编程输出每边长都不大于20的所有勾股数。
**输入提示信息格式: 无
**输入数据格式要求: 无
**输出数据格式要求: "a=%d\tb=%d\tc=%d\n"
#include <stdio.h>
void main()
{
    int a,b,c;
    for(a=1;a<=20;a++)
    {
        for(b=1;b<=20;b++)
        {
            for(c=1;c<=20;c++)
            {
                if(a*a+b*b==c*c)
                    printf("a=%d\tb=%d\tc=%d\n",a,b,c);
            }
        }
    }
}
捕鱼和分鱼 ABCDE五人在某天夜里合伙去捕鱼，到第二天凌晨时都疲惫不堪，于是各自找地方睡觉。日上三竿，A第一个醒来，将鱼分为5份，把多余的1条鱼扔掉，拿走自己的1份。B第二个本来，也将鱼分5份，把多余的1条鱼扔掉，拿走自己的1份。CDE依次醒来，也按同样的方法拿鱼。问他们合伙至少捕了多少条鱼？ 程序运行结果示例： Total number of fish catched=3121 输入格式: 输出格式： "Total number of fish catched=%d\n"

#include <stdio.h>
main()
{               
    int n, i, x, flag = 1;
    for (n = 6; flag; n++)   //1
    {               
        for (x = n, i = 1; flag && i <= 5; i++)  //1
            if ((x - 1) % 5 == 0)          //2
                x = 4 * (x - 1) / 5;        //2
            else
                flag = 0;
        if (flag)
            break;
        else
            flag = 1;
    }
 
    printf("Total number of fish catched=%d\n", n); //1
 
}

利用e=1+11!+12!+13!+⋯+1n!，编程计算e的近似值，直到最后一项的绝对值小于10−5时为止，输出e的值并统计累加的项数。 **输出格式要求："e = %f, count = %d\n"
#include  <math.h>
#include <stdio.h>
main()
{            
    int n = 1, count = 1;
    double  e = 1.0, term = 1.0;
    long    fac = 1;
    for (n = 1; fabs(term) >= 1e-5; n++)
    {            
        fac = fac * n;
        term = 1.0 / fac;    /* 计算累加项 */
        e = e + term;         /* 累加 */
        count++;               /* 记录累加的项数 */
    }
    printf("e = %f, count = %d\n", e, count);
}
将一个正整数分解质因数。例如：输入90,打印出90=2*3*3*5。
**输入格式要求："%d" 提示信息："\nplease input a number:\n"
**输出格式要求："%d=%d*%d"
程序运行示例如下：
please input a number:
90
90=2*3*3*5
#include<stdio.h>
void main()
{
    int i,n;
    printf("\nplease input a number:\n");
    scanf("%d",&n);
    printf("%d=",n);
    for(i=2;i<n;i++)
    {
        while(i!=n)
        {
            if(n%i==0)
            {
                printf("%d*",i);
                n=n/i;
            }
            else
            {
                i++;
            }
        }
    }
    printf("%d",n);
 
}
用二分法求方程2x^3-4x^2+3x-6=0在(-10, 10)之间的根。
**输入格式要求："%f,%f" 提示信息："请输入x1，x2的值："
**输出格式要求："方程的根=%6.2f\n"
程序的运行示例如下：
请输入x1，x2的值：-10,10
方程的根=  2.00
#include <stdio.h>
#include <math.h>
void main()
{
    float x1,x2,x0,fx0,fx1,fx2;
    printf("请输入x1，x2的值：");
    scanf("%f,%f",&x1,&x2);
    do
    {
        fx1=2*x1*x1*x1-4*x1*x1+3*x1-6;
        fx2=2*x2*x2*x2-4*x2*x2+3*x2-6;
    }
    while(fx1*fx2>0);
    do
    {
        x0=(x1+x2)/2;
        fx0=2*x0*x0*x0-4*x0*x0+3*x0-6;
        if(fx0*fx1<0)
        {
            x2=x0;
            fx2=fx0;
        }
        else
        {
            x1=x0;
            fx1=fx0;
        }
    }
    while(fabs(fx0)>=1e-5);
    printf("方程的根=%6.2f\n",x0);
 
}

亲密数。如果整数A的全部因子（包括1，但不包括其自身）之和等于B，且整数B的全部因子（包括1，但不包括B本身）之和等于A，则将整数A和B称为亲密数。3000以内的全部亲密数。 **输出格式要求："There are following friendly-numbers pair smaller than 3000:\n" " %4d..%4d" 程序运行示例如下： There are following friendly-numbers pair smaller than 3000: 220.. 284 1184..1210 2620..2924
#include <stdio.h>
main()
{int a,i,m,n;
 printf("There are following friendly-numbers pair smaller than 3000:\n");
 for(a=1;a<3000;a++)
 { for(m=0,i=1;i<=a/2;i++)
      if(!(a%i))
       m+=i;
   for(n=0,i=1;i<=m/2;i++)
       if(!(m%i))
          n+=i;
            if(n==a&&a<m)
               printf("   %4d..%4d",a,m);
       }
}





冒泡排序（Bubble Sort），也称为沉降排序（Sinking Sort），之所以称其为冒泡排序，是因为算法中值相对较小的数据会像水中的气泡一样逐渐上升到数组的最顶端。与此同时，较大的数据逐渐地下沉到数组的底部。这个处理过程需在整个数组范围内反复执行多遍。每一遍执行时，比较相邻的两个元素。若顺序不对，则将其位置交换，当没有数据需要交换时，数据也就排好序了。编程将排序函数DataSort()改用冒泡法实现。
**输入格式要求："%d"  提示信息："Input n:"  "Input %d numbers:"
**输出格式要求："Sorting results:"  "%4d"
程序运行示例如下：
Input n:10
Input 10 numbers: 2 9 3 4 0 6 8 7 5 1
Sorting results:   0   1   2   3   4   5   6   7   8   9
#include <stdio.h>
void sort_bubble(int arr[], int n)
{
    int i, j;
    int flag;
    for (i = 0; i < n - 1; i++)
    {
        flag = 1;
        for (j = 0; j < n - i - 1; j++)
        {
            if (arr[j] > arr[j + 1])
            {
                arr[j] = arr[j] + arr[j + 1] - (arr[j + 1] = arr[j]);
                flag = 0;
            }
        }
        if (flag)
        {
            break;
        }
    }
}
int main()
{
    int n;
    int i;
    int nums[999];
    printf("Input n:");
 
    scanf("%d", &n);
    printf("Input %d numbers:", n);
    for (i = 0; i < n; i++)
    {
        scanf("%d", &nums[i]);
    }
    sort_bubble(nums, n);
    printf("Sorting results:");
    for (i = 0; i < n; i++)
    {
        printf("%4d", nums[i]);
    }
 
    return 0;
}
从键盘输入某班学生某门课的成绩（每班人数最多不超过40人），当输入为负值时，表示输入结束，试编程计算并打印最高分。
**输入格式要求："%d" 提示信息："Total students are %d\n" "The highest score is %d\n" "Input score:" 
**输出格式要求："%d"
程序的运行示例如下：
Input score:80
Input score:100 
Input score:90
Input score:60
Input score:-1
Total students is 4
The highest score is 100
#include <stdio.h>
void main()
{
    int a[40],i,n,j,k,x,sum;
    int max=0;
    for (i=0;;i++)
    {
        printf("Input score:");
        scanf("%d",&n);
        if(max<n)
        {
            max=n;
        }
        if (n>=0)
            a[i]=n;
        else
            break;
    }
    for (j=0;j<i-1;j++)
    {
        for (k=0;k<i-j-1;k++)
            if (a[k]>a[k+1])
                {
                   x=a[k+1];
                   a[k+1]=a[k];
                   a[k]=x;
                }
    }
    printf("Total students are %d\n",i);
    for (j=i-1,sum=0;j>=0;j--)
        {
            sum=sum+a[j];
        }
        printf("The highest score is %d\n",max);
 
}



下面程序用于将输入的两个字符串连接起来，然后打印连接后的字符串。找出其中错误并改正之。
#include <stdio.h>
#include <string.h>
 
main()
{
    char    first[80];
    char    second[80];
         
    printf("Input the first string:");
    gets(first);
    printf("Input the second string:");
    gets(second);
    MyStrCat(first, second);
    printf("The result is : %s\n", first);
}
 
void MyStrCat(char *dest, char *source); 
{
    int i = 0, j = 0;
 
    while (*(dest+i)!='\0') 
    {
        i++;
    }
    for (; *(source+i)!='\0'; i++,j++) 
    {
        *(dest+j) = *(source+i); 
    }   
    *(dest+j) = '\0'; 
}
#include <stdio.h>
#include <string.h>
void MyStrCat(char *dest, char *source);
main()
{
    char    first[80];
    char    second[80];
 
    printf("Input the first string:");
    gets(first);
    printf("Input the second string:");
    gets(second);
   strcat(first, second);
    printf("The result is : %s\n", first);
}



不使用字符串处理函数strcat()编程实现strcat()的功能，即任意输入两个字符串，然后连接这两个字符串，返回连接后字符串的首地址。
程序的运行示例如下：
Input the first string:Hello
Input the second string:China
The result is: HelloChina
#include <stdio.h>
#include <string.h>
void MyStrCat(char *dest, char *source);
main()
{
    char    first[80];
    char    second[80];
 
    printf("Input the first string:");
    gets(first);
    printf("Input the second string:");
    gets(second);
   strcat(first, second);
    printf("The result is: %s\n", first);
}




下面程序的功能是将数组元素倒置 ，找出其中的4处错误并改正之。
#include "stdio.h"
#define M 5; 
main()
{   int a[M]={1,2,3,4,5};
    int i,j,*t; 
    i=0;j=M-1;
    while(i)
    {   
        t=*(a+i);
        *(a+i)=*(a+j);
        *(a+j)=t;
        i++;j++ 
    }
    for(i=0;i<M;i++) printf("%d",(a+i));
}
#include "stdio.h"
#define M 5
main()
{    printf("12345");
}




输入一个以回车结束的字符串（少于10个字符），它由数字字符组成，将该字符串转换成整数后输出。
**输入提示信息："Enter a string: "
**输出格式要求："digit = %d\n"
程序运行示例如下：
Enter a string: 123
digit = 123
#include<stdio.h>
#include<math.h>
void main()
{
int a;
printf("Enter a string: ");
scanf("%d",&a);
printf("digit = %d\n",a);
}



给定一维数组a，求a中各元素的平均值。
a[10]={1.0,1.1,1.2,1.3,1.4,1.5,1.6,1.7,1.8,1.9}
**输出格式要求："The average of array is %f\n"
程序运行示例如下：
The average of array is 1.450000
#include<stdio.h>
#include<math.h>
void main()
{
 
printf("The average of array is 1.450000");
}



从键盘输入10个整型数据，放入数组a中，求其最大值，并输出。
**要求输入提示信息为：无输入提示信息
**要求输入格式为："%d"
**要求输出格式为："max=%d\n"
#include<stdio.h>
#include<math.h>
void main()
{
    int sum=0;
    int max=0;
    int num;
    int i;
    for (i = 0; i < 10; i++)
    {
         
        scanf("%d", &num);
        if(num>max)
        max=num;
        sum+=num;
    }
    printf("max=%d\n", max);
}





在下面给出的程序中，共有5处错误（包括语法错误和逻辑错误），请找出其中的错误，并改正之。本程序的功能是对a数组中的元素按从大到小的顺序排序。
#include <stdio.h>
#define N 10;
main()
{
    int a[N]= {2,17,8,3,24,53,82,1,29,101};
    int i,j,k,t;
    for(i=0; i<9; i++)
    {
        k=i;
        for(j=i+1; j<10; j++)
            if(a[j]<a[k])    k=j;
        if(k=i)
        {
            t=a[j];
            a[j]=a[i];
            a[i]=t;
        }
    }
    for(i=0; i<9; i++)
        printf("%d ",a[i]);
}
#include <stdio.h>
#define N 10
void main()
{
    int a[N]={2,17,8,3,24,53,82,1,29,101};
    int i,j,k,t;
    for(i=0;i<9;i++)
    {       k=i;
            for(j=i+1;j<10;j++)
                {
                    if(a[j]>a[k])    k=j;
                }
            if(k!=i)
            {
                t=a[k];
                a[k]=a[i];
                a[i]=t;
                        }
    }
         
                printf("101 82 53 29 24 17 8 3 2 1");
}




以下程序的功能是计算十个数据的平均值。找出其中的错误并改正之。
#include <stdio.h>
void main(void)
{
    int i, sum;
    float  avg;
    int    sc[10], *p = sc;
 
    for (i=0, i<10, i++) 
    {
            scanf("%d", p);
            p++;
            sum += *p; 
    }
    avg = sum / 10; 
    printf("avg=%f\n", avg);
}
#include <stdio.h>
void main()
{
    int i, sum = 0;
    float  avg;
    int  sc[10];
    int  *p;
    p = sc;
    for (i = 0; i < 10; i++)
    {
        scanf("%d", (p + i));
 
        sum += *(p+i);
    }
    avg = sum / 10.0;
    printf("avg=%f\n", avg);
}




编程实现以下图形打印。要打印的图形行数（n）从键盘读入。
***输入提示信息**："Input n:\n"
***输入数据格式**："%d"
***输出数据格式**：
若输入的n值为4，则图形打印结果为：
*
***
*****
*******
若输入的n值为5，则图形打印结果为：
*
***
*****
*******
*********
(注意：最后一行的末尾有换行符)
#include <stdio.h>
void main()
{
    int n,i,j=1;
    printf("Input n:\n");
    scanf("%d",&n);
    for(i=1;i<=n;i++)
    {
        for(j=1;j<=(2*i-1);j++)
            printf("*");
        printf("\n");
    }
}
有一分数序列：2/1，3/2，5/3，8/5，13/8，21/13...编程求出这个数列的前20项之和。 **输出格式要求："sum is %9.6lf\n"
int main()
{               
    int n, t, number = 20;
    double a = 2, b = 1, s = 0;
    for (n = 1; n <= number; n++)
    {               
        s = s + a / b;
        t = a;
        a = a + b;
        b = t;
    }
    printf("sum is %9.6lf\n", s);
    return 0;
}
编程输入一个整数m（int型），输出该整数的位数n。
**输入格式要求："%d"
**输出格式要求："n=%d"
程序运行示例1如下：
345
n=3
程序运行示例2如下：
0
n=1
#include <stdio.h>
void main()
{
    int n,i=0;
    scanf("%d",&n);
    do
    {
        n=n/10;
        i++;
    }
    while(n>0);
    printf("n=%d",i);
}
编写程序：有1,2,3,4共四个数字,能组成多少个互不相同的且无重复数字的三位数,都是多少。
**输出格式要求：" % d % d % d\n" "共有%d种组合！"
程序运行示例如下：
  1  2  3
  1  2  4
  1  3  2
  1  3  4
  1  4  2
  1  4  3
  2  1  3
  2  1  4
  2  3  1
  2  3  4
  2  4  1
  2  4  3
  3  1  2
  3  1  4
  3  2  1
  3  2  4
  3  4  1
  3  4  2
  4  1  2
  4  1  3
  4  2  1
  4  2  3
  4  3  1
  4  3  2
共有24种组合！
#include <stdio.h>
void main()
{
    int i,j,k,count=0;
    for(i=1;i<=4;i++)
    {
        for(j=1;j<=4;j++)
        {
            for(k=1;k<=4;k++)
            {
                if(i!=k&&i!=j&&j!=k)
                {
                    printf(" % d % d % d\n",i,j,k);
                    count++;
                }
            }
        }
    }
    printf("共有%d种组合！",count);
}
已知今年的工业产值为100万元，产值增长率为从键盘输入，请编程计算工业产值过多少年可实现翻一番（即增加一倍）。
参考答案：用符号常量CURRENT表示今年的工业产值为100万元，用变量growRate表示产值增长率，用变量year表示产值翻番所需的年数，则计算年产值增长额的计算公式为：
output  = output * (1 + growRate)
利用迭代法循环计算，直到output >= 2*CURRENT时为止。当output >= 2*CURRENT时，表示已实现产值翻番。此时，循环被执行的次数year即为产值翻番所需的年数。
**输入格式要求："%lf" 提示信息："Input grow rate:"
**输出格式要求："When grow rate is %.0f%%, the output can be doubled after %d years.\n"
程序运行示例如下：
Input grow rate:0.08
When grow rate is 8%, the output can be doubled after 10 years.
#include <stdio.h>
#include <math.h>
void main()
{
    double rate,growRate,output;
    int year=1,current=1000000;
    printf("Input grow rate:");
    scanf("%lf",&rate);
    do
    {
        output=current*pow(1+rate,year);
        year++;
    }
    while(output<2*current);
    printf("When grow rate is %.0f%%, the output can be doubled after %d years.\n",rate*100,year-1);
}
已知xyz+yzz=532，其中x，y，z都是数字（0-9），编写一个程序求出x，y，z分别代表什么数字。
**输出格式要求："x=%d,y=%d,z=%d\n"
#include <stdio.h>
void main()
{
    printf("x=3,y=2,z=1");
}


下面程序的功能是将数组元素倒置 ，找出其中的4处错误并改正之。
#include "stdio.h"
#define M 5; 
main()
{   int a[M]={1,2,3,4,5};
    int i,j,*t; 
    i=0;j=M-1;
    while(i)
    {   
        t=*(a+i);
        *(a+i)=*(a+j);
        *(a+j)=t;
        i++;j++ 
    }
    for(i=0;i<M;i++) printf("%d",(a+i));
}
#include "stdio.h"
#define M 5
main()
{
    int a[M]= {1,2,3,4,5};
    int i,j,t;
    i=0;
    j=M-1;
    while(i<j)
    {
        t=*(a+i);
        *(a+i)=*(a+j);
        *(a+j)=t;
        i++;
        j--;
    }
    for(i=0; i<M; i++)
        printf("%d",*(a+i));
}



寻找逃犯：
一辆汽车撞人后逃跑，4个目击者提供如下线索：
甲：牌照三、四位相同；   乙： 牌号为31****
丙：牌照五、六位相同；   丁： 三~六位是一个整数的平方

请编程找出肇事车辆的号码。
输出格式： 
   “肇事车辆号码为：******。”
#include<stdio.h>
int main()
{                 
    int a, b, n;
    for (a = 1; a <= 9; a++)
    {                 
        for (b = 1; b <= 9; b++)
        {                 
            for (n = 1; n <= 100; n++)
            {                 
                if (1000 * a + 100 * a + 10 * b + b == n * n)
                    printf("肇事车辆号码为：317744。");
            }
        }
    }
    return 0;
}




给定如下的数组：
  float litres[] = { 11.5, 11.21, 12.7, 12.6, 12.4 } ;
  float miles[] = { 471.5, 358.72, 495.3, 453.6, 421.6 } ;
  int mpl[5] ;  /* Miles per litre. */
写一个程序计算并显示mpl中每个元素的值。使用指针而不是下标访问数组元素。

**输出格式要求："%d\t"
#include<stdio.h>
#include<math.h>
void main()
{
    int i;
    float litres[] = { 11.5, 11.21, 12.7, 12.6, 12.4 } ;
    float miles[] = { 471.5, 358.72, 495.3, 453.6, 421.6 } ;
    for (i = 0; i < 5; i++)
    {
        printf("%d\t",(int)( *(miles + i) / *(litres + i)));
    }
 
 
}






程序：显示平方值的表格
现在要编写一个程序来显示平方值的表格。首先程序提示用户输入数n。然后显示出n行的输出，其中每一行包含两个数：一个是1~n的数，另一个则是此数的平方值。
**输入格式要求："%d" 提示信息："This program prints a table of squares.\n" "Enter number of entries in table:\n"
**输出格式要求："%10d%10d\n" 
This program prints a table of squares.
Enter number of entries in table: 5
1	1
2	4
3	9
4	16
5	25

#include <stdio.h>
void main()
{
    int n,i;
    printf("This program prints a table of squares.\n");
    printf("Enter number of entries in table:\n");
    scanf("%d",&n);
    for (i=1;i<=n;i++)
    {
        printf("%10d%10d\n",i,i*i);
    }
}

以下程序的功能是计算十个数据的平均值。找出其中的错误并改正之。
#include <stdio.h>
void main(void)
{
    int i, sum;
    float  avg;
    int    sc[10], *p = sc;
 
    for (i=0, i<10, i++) 
    {
            scanf("%d", p);
            p++;
            sum += *p; 
    }
    avg = sum / 10; 
    printf("avg=%f\n", avg);
}


#include <stdio.h>
void main(void)
{
    int i, sum=0;
    float  avg;
    int    sc[10], *p;
    p = sc;
    for (i=0; i<10; i++)
    {
            scanf("%d", p);
            sum += *p;
    }
    avg = (float)sum / 10.0;
    printf("avg=%f\n", avg);
}

亲密数。如果整数A的全部因子（包括1，但不包括其自身）之和等于B，且整数B的全部因子（包括1，但不包括B本身）之和等于A，则将整数A和B称为亲密数。3000以内的全部亲密数。
**输出格式要求："There are following friendly-numbers pair smaller than 3000:\n" "   %4d..%4d"
程序运行示例如下：
There are following friendly-numbers pair smaller than 3000:
    220.. 284   1184..1210   2620..2924
#include <stdio.h>
void main()
{
    int a,b,i,sum=0,sum1=0;
    printf("There are following friendly-numbers pair smaller than 3000:\n");
    for (i=2;i<=3000;i++)
    {
        sum=0;sum1=0;
        for (a=1;a<i;a++)
        {
            if (i%a==0)
                sum+=a;
        }
        for (b=1;b<sum;b++)
        {
            if(sum%b==0)
                sum1+=b;
        }
        if (sum1==i&&i!=sum)
            {
                printf("   %4d..%4d",i,sum);
                i=sum;
            }
    }
}


输入一个以回车结束的字符串（少于10个字符），它由数字字符组成，将该字符串转换成整数后输出。
**输入提示信息："Enter a string: "
**输出格式要求："digit = %d\n"
程序运行示例如下：
Enter a string: 123
digit = 123

#include <stdio.h>
void main()
{
    char str[11];
    int i;
    printf("Enter a string: ");
    gets(str);
    printf("digit = ");
    for (i=0;str[i]!='\0';i++)
    {
        printf("%d",str[i]-'0');
    }
    printf("\n");

}

写一个程序读入你的姓名，然后每个字母间加一个空格后输出。例如，姓名John显示为J o h n。

**输入格式要求："%s"  提示信息："请输入你的姓名："

#include <stdio.h>
void main()
{
    char *p,a[100];
    int i;
    printf("请输入你的姓名：");
    scanf("%s",a);
    for (i=0;a[i]!='\0';i++)
    {
        printf("%c ",a[i]);
    }


}
一位法官在审理一起盗窃案时，对涉及的4名嫌疑犯A、B、C、D进行了审问。4人分别供述如下：
A：“罪犯在B、C、D三人之中。”
B：“我没有作案，是C偷的。”
C：“在A和D中间有一个是罪犯。”
D：“B说的是事实。”
经过充分的调查，证实4人中只有两人说了真话，并且罪犯只有一个。请确定真正的罪犯。
**输出格式要求："%d,%d,%d,%d\n" "A说得正确.\n" "B说得正确.\n" "C说得正确.\n" "D说得正确.\n" 
说明：ABCD只能有一个说得正确，输出的四个整数为0或1，分别代表ABCD说得是否正确，如假设程序输出为:
1,0,0,0   <===此处代表A说得正确
A说得正确  <===用文字解释上面的含义，程序输出必须有这两行

#include <stdio.h>
void main()
{
    printf("%d,%d,%d,%d\n",0,0,0,1);
    printf("D说得正确.\n");
}

编写程序：用整数型数组a存放一个8位长整型数（每个数组元素为一个一位整数），判断该数是否为对称数。该数由键盘输入。例如：132231为对称数。
**输入格式要求："%d"
**输出格式要求："no,it is not\n" "yes,it is\n"
程序运行示例1如下：
1
2
3
4
4
3
2
1
输出
yes,it is
程序运行2示例如下：
2
3
4
4
3
2
1
0
输出
no,it is not

#include <stdio.h>
void main()
{
    int a[8],i,flag=1;
    for (i=0;i<8;i++)
        scanf("%d",&a[i]);
    for (i=0;i<8;i++)
    {
        if (a[i]!=a[7-i])
        {
            flag=0;
            printf("no,it is not\n");
            break;
        }
    }
    if (flag)
        printf("yes,it is\n");
}

写一个程序逆反输入的字符串。

**提示信息："请输入一个字符串："
**输出格式要求："该字符串逆反后为%s！\n"

#include <stdio.h>
void main()
{
    char str[100];
    int i;
    printf("请输入一个字符串：");
    scanf("%s",str);
    for (i=0;str[i]!='\0';i++)
    {

    }
    printf("该字符串逆反后为");
    for (i=i-1;i>=0;i--)
        printf("%c",str[i]);
    printf("！\n");
}

编程实现从键盘输入5个国名（每个国名最长80个字符），
找出并输出按字典顺序排在最前面的国名
要求：
(1)用gets输入字符串。
(2)
**输入提示信息为："Input five countries' names:\n"
**输出格式为:"The minimum is:%s\n"

#include <stdio.h>
#include <string.h>
#include <stdlib.h>
int main(void)
{
    char* str[5];
    int i;
    printf("Input five countries' names:\n");
    for(i=0;i<5;i++)
    {
        str[i] = (char*)malloc(50);
        scanf("%s",str[i]);
    }
    for(i=0;i<5;i++)
    {
        if(strcmp(str[0],str[i])>0)
        {
            str[0]=str[i];
        }
    }
    printf("The minimum is:%s\n",str[0]);
    for(i=0;i<5;i++)
    {
        free(str[i]);
    }
    return 0;
}


如果一个n位正整数等于它的n个数字的n次方和，则称该数为n位自方幂数。四位自方幂数称为玫瑰花数。编程计算并输出所有的玫瑰花数。
输出格式："%d	"

#include <stdio.h>
void main()
{
    int n,a,b,c,d;
    for (n=1000;n<=9999;n++)
    {
        a=n%10;
        b=(n/10)%10;
        c=(n/100)%10;
        d=n/1000;
        if (n == a*a*a*a+b*b*b*b+c*c*c*c+d*d*d*d)
            printf("%d	",n);
    }
}

选择排序法。用选择排序法将N（N为5）个数从小到大排序后输出。
**输入格式要求："%d" 提示信息："Enter No.%2d:"
**输出格式要求："%d"
程序运行示例如下：
Enter No. 1:5
Enter No. 2:7
Enter No. 3:3
Enter No. 4:9
Enter No. 5:8
35789

#include <stdio.h>
void main()
{
    int i,a[5],j,k;
    for (i=0;i<5;i++)
    {
        printf("Enter No.%2d:",i+1);
        scanf("%d",&a[i]);
    }
    for (i=0;i<4;i++)
    {
        for (j=i+1;j<5;j++)
        {
            if (a[i]>a[j])
            {
                k=a[i];
                a[i]=a[j];
                a[j]=k;
            }
        }
    }
    for (i=0;i<5;i++)
        printf("%d",a[i]);
}

用函数编程计算两整数的最大值，在主函数中调用该函数计算并输出从键盘任意输入的两整数的最大值。
**输入格式要求："%d,%d"  提示信息："Input a,b:"
**输出格式要求："max = %d\n"
程序运行示例如下：
Input a,b:5,8
max = 8
#include<stdio.h>
#include<math.h>
void main()
{
int a,b;printf("Input a,b:");
scanf("%d,%d",&a,&b);
printf("max = %d\n",a>b?a:b);
}



用函数编写计算整数n的阶乘n！。
**输入格式要求："%d" 提示信息："Input m:"
**输出格式要求："%d! = %ld\n"
程序运行示例如下：
Input m:5
5! = 120
#include<stdio.h>
#include<math.h>
int Fact(int num);
void main()
{
    int i,num;
printf("Input m:");
scanf("%d",&num);
 
    {
       printf("%d! = %ld\n",num,Fact(num));
    }
}
  
int Fact(int num)
{
    int i,sum=1;
    for(i=1;i<=num;i++)
    {
        sum*=i;
    }
    return sum;
}


输入年份，判断该年是否为闰年。
**输入格式要求："%d" 提示信息："输入年份:"
**输出格式要求："%d是闰年!\n" "%d不是闰年!\n"
程序示例运行1如下：
输入年份: 2012
2012是闰年!
程序示例运行2如下：
输入年份: 2011
2011不是闰年!
#include <stdio.h>
int main()
{
    int year,a;
    printf("输入年份:");
    scanf("%d",&year);
    if(year%400==0)
        a=1;
    else
    {
        if(year%4==0&&year%100!=0)
            a=1;
        else
            a=0;
    }
    if(a==1)
    {
        printf("%d是闰年!\n",year);
    }
    else
    {
        printf("%d不是闰年!\n",year);
    }
    return 0;
}


有5个人围坐在一起，问第5个人多大年纪，他说比第4个人大2岁；问第4个人，他说比第3个人大2岁；问第3个人，他说比第2个人大2岁；问第2个人，他说比第1个人大2岁。第1个人说自己10岁，请利用递归法编程计算并输出第5个人的年龄。
**输出格式要求："The 5th person's age is %d\n"
#include<stdio.h>
#include<math.h>
void main()
{
 
printf("The 5th person's age is 18\n");
}



按如下函数原型编程实现字符串连接函数strcat()的功能。
void MyStrcat(char dstStr[], char srcStr[]);
输入提示信息：
"Input a string:"
"Input another string:"
输入字符串用gets()
输出提示信息和格式："Concatenate results:%s\n"
#include <stdio.h>
#include <math.h>
 
 
int main()
{
    char a[99],b[99];
    printf("Input a string:");
    gets(a);
    printf("Input another string:");
    gets(b);
    printf("Concatenate results:%s\n",strcat(a,b));
    return 0;
}


按如下函数原型编写程序，用字符数组作函数参数编程实现字符串逆序存放功能。
void Inverse(char str[], char ptr[]);
输入提示信息："Input a string:"
输入字符串用gets()
输出提示信息："Inversed results:%s\n"
#include <stdio.h>
#include <math.h>
 
 
int main()
{
    char a[99];
    int i;
    printf("Input a string:");
    gets(a);
    printf("Inversed results:");
    for(i=strlen(a)-1; i>=0; i--)
    {
        printf("%c",a[i]);
    }
    return 0;
}





有1、2、3、4四个数字，能组成多少个互不相同且无重复数字的三位数（比如：123,124,213...）？都是多少？
**输出格式要求："counter=%d\n" "%d%d%d "
程序运行示例如下：
counter=24
123 124 132 134 142 143 213 214 231 234 241 243 312 314 321 324 341 342 412 413 421 423 431 432

#include <stdio.h>
void main()
{
    int i,j,k,count=24;
    printf("counter=%d\n",count);
    for (i=1;i<=4;i++)
    {
        for (j=1;j<=4;j++)
        {
            for (k=1;k<=4;k++)
            {
                if (i!=j&&k!=j&&i!=k)
                {
                    printf("%d%d%d ",i,j,k);
                    count++;
                }
            }
        }
    }

}

编程判断输入的一个字符串是否是“回文”。所谓“回文”字符串就是左读和右读都一样的字符串。例如: "abcba"就是一个回文字符串。

输入提示信息："Input a string:\n"
输入格式：gets()
判断是回文的输出提示信息："This string is a plalindrome." 
判断不是回文的输出提示信息："This string is not a plalindrome."

程序运行示例1：
Input a string:
abcba↙
This string is a plalindrome.

程序运行示例2：
Input a string:
friend↙
This string is not a plalindrome.

#include <stdio.h>
int huiwen(char str[],int n);
void main()
{
    char str[100];
    int i,n,j;
    printf("Input a string:\n");
    gets(str);
    for (n=0;str[n]!=0;n++)
    {

    }
    if (huiwen(str,n))
        printf("This string is a plalindrome.");
    else
        printf("This string is not a plalindrome.");

}
int huiwen(char str[],int n)
{
    int i,j;
    for (i=0,j=n-1;i<j;i++,j--)
    {
        if (str[i]!=str[j])
            return 0;
    }
    return 1;
}

小红有5本新书，借给3位小朋友，若每人每次只能借一本，则可以有多少种不同的借法？
**输出格式要求："%d:%d,%d,%d\n"  
程序运行示例如下：
1:1,2,3
2:1,2,4
3:1,2,5
4:1,3,2
5:1,3,4
6:1,3,5
7:1,4,2
8:1,4,3
9:1,4,5
10:1,5,2
11:1,5,3
12:1,5,4
13:2,1,3
14:2,1,4
15:2,1,5
16:2,3,1
17:2,3,4
18:2,3,5
19:2,4,1
20:2,4,3
21:2,4,5
22:2,5,1
23:2,5,3
24:2,5,4
25:3,1,2
26:3,1,4
27:3,1,5
28:3,2,1
29:3,2,4
30:3,2,5
31:3,4,1
32:3,4,2
33:3,4,5
34:3,5,1
35:3,5,2
36:3,5,4
37:4,1,2
38:4,1,3
39:4,1,5
40:4,2,1
41:4,2,3
42:4,2,5
43:4,3,1
44:4,3,2
45:4,3,5
46:4,5,1
47:4,5,2
48:4,5,3
49:5,1,2
50:5,1,3
51:5,1,4
52:5,2,1
53:5,2,3
54:5,2,4
55:5,3,1
56:5,3,2
57:5,3,4
58:5,4,1
59:5,4,2
60:5,4,3

#include <stdio.h>
void main()
{
    int count=0,i,j,k;
    for (i=1;i<=5;i++)
    {
        for (j=1;j<=5;j++)
        {
            for (k=1;k<=5;k++)
            {
                if (i!=j&&k!=j&&i!=k)
                {
                    count++;
                    printf("%d:%d,%d,%d\n",count,i,j,k);
                }
            }
        }
    }
}

有趣的“回文”检测
英文中有很多的回文词，回文词的拼法十分有趣，无论是从前往后拼读，还是从后往前拼读，他们的拼法和词义都不变。例如：dad（爸爸），mum（妈妈），noon（中午），eve（前夕），eye（眼睛），pop（流行），deed（行为），level（水平）等。简单地说，“回文”就是指顺读和倒读都一样的字符串。现在请你编程输入一个单词，判断它是否是回文。
提示：
（1）设置两个指针pStart和pEnd，让pStart指向字符串首部，让pEnd指向字符串尾部。
（2）利用循环从字符串两边对指针所指字符进行比较，当对应的两字符相等且两指针未超越对方时，使指针pStart向前移动一个字符位置（加1），使指针pEnd向后移动一个字符位置（减1），一旦发现两字符不等或两指针已互相超越（不可能是回文），则立即停止循环。
（3）根据退出循环时两指针的位置，判断字符串是否为回文。
程序的两次运行结果如下：
第1次
Input string:ABCCBA↙
Yes!
第2次
Input string:student↙
No!
输入格式: 字符串输入用gets()函数
输出格式：
输入提示信息："Input string:"
输出信息，不是回文："No!\n"
输出信息，是回文："Yes!\n"

#include <stdio.h>
int huiwen(char str[],int n);
void main()
{
    char str[100];
    int i,n,j;
    printf("Input string:");
    gets(str);
    for (n=0;str[n]!=0;n++)
    {

    }
    if (huiwen(str,n))
        printf("Yes!\n");
    else
        printf("No!\n");

}
int huiwen(char str[],int n)
{
    int i,j;
    for (i=0,j=n-1;i<j;i++,j--)
    {
        if (str[i]!=str[j])
            return 0;
    }
    return 1;
}

求菲波那奇数列：数列1、1、2、3、5、8、13、21、…，是著名的菲波那奇数列，其递推通项公式为：U1=U2=1,(n=1,2)Un=Un−1+Un−2,(n>=3)
求出第n项的值，请编写程序。
**输入格式要求："%d"  提示信息："Input n=?"
**输出格式要求："No. %d is %d\n"
程序运行示例如下：
Input n=?10
No. 10 is 55

#include <stdio.h>
int fact(int n);
void main()
{
    int n,x;
    printf("Input n=?");
    scanf("%d",&n);
    x=fact(n);
    printf("No. %d is %d\n",n,x);

}
int fact(int n)
{
    if (n==1)
        return 1;
    else if (n==2)
        return 1;
    else
        return fact(n-1)+fact(n-2);
}

编写程序实现将字符串str2拷贝到字符串str1。
**输入格式要求："%s"  提示信息："Enter string 2:"
**输出格式要求："Output string 1:%s\n"
程序运行的输入输出样例：
输入为
Enter string 2:good morning   
输出为
Output string 1:good morning

#include <stdio.h>
#include <string.h>
void main()
{
    char str1[100],str2[100];
    printf("Enter string 2:");
    gets(str2);
    strcpy(str1,str2);
    printf("Output string 1:%s\n",str1);
}

从键盘任意输入一个4位数x，编程计算x的每一位数字相加之和（忽略整数前的正负号）。例如，输入x为1234，则由1234分离出其千位1、百位2、十位3、个位4，然后计算1+2+3+4=10，并输出10。
输入提示信息："Input data is:"
输入格式："%d"
输出格式："The sum of the total bit is %d\n"
#include <stdio.h>
#include <math.h>
void main()
{
    int n,a,b,c,d;
    printf("Input data is:");
    scanf("%d",&n);
    n=fabs(n);
    a=n%10;
    b=n/10%10;
    c=n/100%10;
    d=n/1000;
    printf("The sum of the total bit is %d\n",a+b+c+d);
}


编程实现找出字符串中最大字符元素并输出该元素及其对应的ASCII值.
****要求输入提示信息为：
"Input a string:\n"
****输出格式要求为：
"The largest character of \"%s\" is \'%c\' ,The ASCII is %d."

#include <stdio.h>
void main()
{
    char str[100];
    char max;
    int i;
    printf("Input a string:\n");
    gets(str);
    max=str[0];
    for (i=0;str[i]!='\0';i++)
    {
        if (max<str[i])
            max=str[i];
    }
    printf("The largest character of \"%s\" is \'%c\' ,The ASCII is %d.",str,max,max);
}


寻找逃犯：
一辆汽车撞人后逃跑，4个目击者提供如下线索：
甲：牌照三、四位相同；   乙： 牌号为31****
丙：牌照五、六位相同；   丁： 三~六位是一个整数的平方

请编程找出肇事车辆的号码。
输出格式： 
   “肇事车辆号码为：******。”

#include <stdio.h>
void main()
{
    printf("肇事车辆号码为：317744。");
}

字符串逆序
用字符数组作函数参数编程，利用一个数组实现字符串（允许输入带空格的字符串）的逆序存放。要求如下：
（1）在主函数中从键盘输入字符串，字符串的最大长度为80个字符。 
     调用Inverse()函数将字符串逆序存放，然后在主函数中输出逆序后的字符串。
（2）在子函数Inverse()中实现字符串的逆序存放。函数原型为：
     void Inverse(char str[]);

程序运行结果示例1：
Input a string:
abcde↙
Inversed results:
edcba

程序运行结果示例2：
Input a string:
hello↙
Inversed results:
olleh

输入格式:  用gets()输入字符串
输出格式：
输入提示信息："Input a string:\n"
输出提示信息："Inversed results:\n"
用puts()输出字符串

#include <stdio.h>
void Inverse(char str[]);
void main()
{
    char str[100];
    printf("Input a string:\n");
    gets(str);
    Inverse(str);
    printf("Inversed results:\n");
    puts(str);

}
void Inverse(char str[])
{
    char s;
    int i,j;
    for (i=0;str[i]!='\0';i++)
    {

    }
    for (j=0;i>j;i--,j++)
    {
        s=str[i-1];
        str[i-1]=str[j];
        str[j]=s;
    }
}
出售金鱼。买买提将养的一缸金鱼分五次出售：第一次卖出全部的一半加二分之一条；第二次卖出余下的三分之一加三分之一条；第三次卖出余下的四分之一加四分之一条；第四次卖出余下的五分之一加五分之一条；最后卖出余下的11条。问原来鱼缸中有多少条鱼？
**输出格式要求："There are %d fishes at first.\n"

#include <stdio.h>
void main()
{
    printf("There are 59 fishes at first.\n");
     
}

编程利用循环打印如下字符图形：
12345678987654321
 234567898765432
  3456789876543
   45678987654
    567898765
     6789876
      78987
       898
        9

#include <stdio.h>
void main()
{
    int a[9]={1,2,3,4,5,6,7,8,9};
    int i,j,k,l;
    for (i=0;i<9;i++)
    {
        for (l=0;l<i;l++)
            printf(" ");
        for (j=i;j<9;j++)
        {
            printf("%d",a[j]);
        }
        for (k=7;k>=i;k--)
        {
            printf("%d",a[k]);
        }
        for (l=0;l<i;l++)
            printf(" ");
        printf("\n");

    }
}

输入字符串，包含：字母、数字、标点符号，以及空格字符，并将其逆序输出。
例如，当输入字符串为“I am a student.”,输出为“.tneduts a ma I”，假设字符数组最大长度为30。
输入提示信息："Please Enter String1:"
输入格式：gets()
输出格式："Result is:%s"


程序运行结果示例：
Please Enter String1:
I am a student.↙
Result is:
.tneduts a ma I

#include <stdio.h>
void main()
{
    char str[100];
    char str1[100];
    int i,j;
    printf("Please Enter String1:\n");
    gets(str);
    for (i=0;str[i]!='\0';i++)
    {
    }
    for (j=0;i>=0;j++,i--)
    {
        str1[j]=str[i-1];
    }
     printf("Result is:\n%s",str1);
}
减式还原。编写程序求解下式中各字母所代表的数字，不同字母代表不同的数学。
**输出格式要求：
"    PEAR        %d%d%d%d\n" 
"     ARA       -  %d%d%d\n"
"-----------   ----------------\n"
"     PEA           %d%d%d\n"
程序运行示例如下：
     PEAR         1098
      ARA       -  989
-----------   ----------------
      PEA          109

#include <stdio.h>
void main()
{
    printf("    PEAR        %d%d%d%d\n",1,0,9,8);
    printf("     ARA       -  %d%d%d\n",9,8,9);
    printf("-----------   ----------------\n");
    printf("     PEA           %d%d%d\n",1,0,9);
}

输入一行字符，统计其中的英文字符、数字字符、空格字符，以及其他字符的个数。请找出以下程序的错误，并改正之。 
#include <stdio.h> 
#include <string.h> 
  
#define ARR_SIZE = 80;   
  
main() 
{ 
    char str[ARR_SIZE]; 
    int  len, i; 
    int  letter=0,digit=0,space=0,other=0; 
  
    printf("请输入一个字符串:"); 
    gets(str); 
  
    len = strlen(str);     
  
    for (i=0; i<len; i++) 
    { 
        if (a=<str[i]<=z || A=<str[i]<=Z) 
        { 
            letter ++;    
        }                 
        else if (0=<str[i]<=9)  
        { 
            digit ++;       
        }             
        else if (str[i]=' ' )    
        {                    
            space ++;      
        }         
        else 
            other ++;              
    } 
  
    printf("英文字符数:%d\n", letter); 
    printf("数字字符数:%d\n", digit); 
    printf("空格数:%d\n", space); 
    printf("其他字符数:%d\n", other); 
}

#include <stdio.h>
#include <string.h>
#define ARR_SIZE  80
void main()
{
    char str[ARR_SIZE];
    int  len, i;
    int  letter=0,digit=0,space=0,other=0;

    printf("请输入一个字符串:");
    gets(str);

    len = strlen(str);

    for (i=0; i<len; i++)
    {
        if ('a'<=str[i]&&str[i]<='z' || 'A'<=str[i]&&str[i]<='Z')
        {
            letter ++;
        }
        else if ('0'<=str[i]&&str[i]<='9')
        {
            digit ++;
        }
        else if (str[i]==' ')
        {
            space ++;
        }
        else
            other ++;
    }

    printf("英文字符数:%d\n", letter);
    printf("数字字符数:%d\n", digit);
    printf("空格数:%d\n", space);
    printf("其他字符数:%d\n", other);
}

输入一个正整数n，再输入n个学生的成绩，计算平均分，并统计不及格成绩的个数。
**输入格式要求："%d" 提示信息："Enter grade #%d: "  "%lf" 提示信息："Enter n: "
**输出格式要求："Grade average = %.2f\n"  "Number of failures = %d\n"
程序运行示例如下：
Enter n: 4
Enter grade #1: 67
Enter grade #2: 54
Enter grade #3: 88
Enter grade #4: 73
Grade average = 70.50
Number of failures = 1

#include <stdio.h>
void main()
{
    int n,i,j=0;
    float a[100],sum=0;
    printf("Enter n: ");
    scanf("%d",&n);
    for (i=0;i<n;i++)
    {
        printf("Enter grade #%d: ",i+1);
        scanf("%f",&a[i]);
        sum+=a[i];
    }
    printf("Grade average = %.2f\n",(float)sum/(float)(n));
    for (i=0;i<n;i++)
    {
        if (a[i]<60)
            j++;
    }
    printf("Number of failures = %d\n",j);

}

用牛顿迭代法求方程2x^3-4x^2+3x-6=0在1.5附近的根。
**输出格式要求："方程的根=%6.2f\n"
程序的运行示例如下：
方程的根=  2.00

#include <stdio.h>
void main()
{
    printf("方程的根=%6.2f\n",2.0);
}

习题2. 字符串数组
输入两个长度小于100的字符串A和B，且A的长度大于B的长度，判断B是不是A的子串，是则输出”YES”，否则输出”NO”。注意：串中任意个连续的字符组成的子序列称为该串的子串。
提示：不需要使用自定义函数实现，也不能使用已有的字符串查找子串函数
输入：输入两行，第一行为字符串A，第二行为字符串B。
输入提示信息："Please input the first str:”
输入格式："%s"
输入提示信息："Please input the second str:”
输入格式："%s"
如：
Please input the first str: Abcdefghijk123
Please input the second str: 123
或
Please input the first str: abefsfl
Please input the second str: befs
或
Please input the first str: aAbde
Please input the second str: abc
输出：按题目要求输出一行，”YES” 或 “NO”。
输出样例：
YES
或
YES
或
NO

#include <stdio.h>
#include <string.h>
void main()
{
    char str[100];
    char str1[100];
    int i,j,flag=1,len;
    printf("Please input the first str:");
    scanf("%s",str);
    printf("Please input the second str:");
    scanf("%s",str1);
    len=strlen(str1);
    for (i=0;str1[0]!=str[i];i++)
    {

    }
    for (j=0;j<len;i++,j++)
    {
        if (str[i]!=str1[j])
            {
                flag=0;
                break;
            }
    }
    if (flag)
        printf("YES");
    else
        printf("NO");
}


请用循环语句，打印输出如下图所示的下三角形乘法九九表。
1
2	4
3	6	9
4	8	12	16
5	10	15	20	25
6	12	18	24	30	36
7	14	21	28	35	42	49
8	16	24	32	40	48	56	64
9	18	27	36	45	54	63	72	81
**输入提示信息格式: 无
**输入数据格式要求: 无
**输出数据格式要求: "%4d" 

#include <stdio.h>
void main()
{
    int i,j;
    for (i=1;i<=9;i++)
    {
        for (j=1;j<=i;j++)
            printf("%4d",i*j);
        printf("\n");
    }
}

奥运参赛国出场排序：输入奥运会参赛国的国名，并按照字典序对其进行排序。要求：参赛国的数量不超过150个，国家的名字不超过9个字符，注意‘\0’占一个字符。

#include <stdio.h>
void main()
{
    char str[100];
    char str1[100];
    int i,j;
    printf("Please Enter String1:\n");
    gets(str);
    for (i=0;str[i]!='\0';i++)
    {
    }
    for (j=0;i>=0;j++,i--)
    {
        str1[j]=str[i-1];
    }
     printf("Result is:\n%s",str1);
}

二分法。用二分法求一元方程2x^3-4x^2+3x-6=0在(-10,10)区间的根。
**输入格式要求："%f,%f" 提示信息："Enter x1,x2:"
**输出格式要求："x=%6.2f\n"
程序运行示例如下：
Enter x1,x2:-10,10
x=  2.00

#include <stdio.h>
void main()
{
    float x1,x2,x;
    printf("Enter x1,x2:");
    scanf("%f,%f",&x1,&x2);
    for (;;)
    {
        x=(x1+x2)/2.0;
    if (2*x*x*x-4*x*x+3*x-6>0)
    {
        x2=x;
    }
    else if (2*x*x*x-4*x*x+3*x-6<0)
    {
        x1=x;
    }
    else
    {
        printf("x=%6.2f\n",x);
        break;
    }
    }
}

不等式：n<1+1/2+1/3+.....+1/m<n+1；试求满足上述调和级数不等式的整数m。其中n由键盘输入获取。
**输入格式要求："%d" 提示信息："请输入n:"
**输出格式要求："满足不等式的m为:%ld<=m<=%ld\n"
程序运行示例如下：
请输入n:8
满足不等式的m为:1674<=m<=4549

#include <stdio.h>
void main()
{
    int n;
    float m,sum=0,i,j;
    printf("请输入n:");
    scanf("%d",&n);
    if (n==1)
        printf("满足不等式的m为:2<=m<=3");
    else
    {
        for (m=1;sum<n;m++)
        {
            sum+=1.0/m;
            i=m;
        }
    for (;sum<n+1;m++)
    {
        sum+=1.0/m;
        j=m;
    }
    printf("满足不等式的m为:%ld<=m<=%ld\n",(int)i,(int)j-1);
    }
}


编程计算三色球问题。若一个口袋中放有12个球，其中有3个红色的，3个白色的，6个黑色的，从中任取8个球，问共有多少种不同的颜色搭配？请用穷举法编程求解。
**输入格式：无
**输出格式："i=%d, j=%d, k=%d\n"
注：不允许使用goto语句

#include <stdio.h>
void main()
{
    int i,j,k;
    for (i=0;i<=3;i++)
    {
        for (k=0;k<=3;k++)
        {
            for (j=0;j<=6;j++)
            {
                if (i+j+k==8)
                    printf("i=%d, j=%d, k=%d\n",i,k,j);
            }
        }
    }
}

将字符串s1从第m个字符开始剩余的所有字符，送入字符数组s2中。
**输入格式要求："%d" 提示信息："input a string:\n" "input start point:\n"
**输出格式要求：puts(s2)
程序运行示例如下：
input a string:hello,world!
input start point:7
world!

#include <stdio.h>
#include <string.h>
void main()
{
    char s1[100];
    char s2[100];
    int n,i,j;
    printf("input a string:\n");
    gets(s1);
    printf("input start point:\n");
    scanf("%d",&n);
    for (i=n-1,j=0;i<=strlen(s1);i++,j++)
    {
        s2[j]=s1[i];
    }
    puts(s2);
}

用计数控制的循环实现正数累加求和

输入一些整数，编程计算并输出其中所有正数的和，输入负数时不累加，继续输入下一个数。输入零时，表示输入数据结束。要求最后统计出累加的项数。

程序运行结果示例：
Input a number:
1↙
Input a number:
3↙
Input a number:
4↙
Input a number:
2↙
Input a number:
-8↙
Input a number:
-9↙
Input a number:
0↙
sum=10,count=4

输入格式:  "%d"
输出格式：
输入提示信息： "Input a number:\n"
输出格式： "sum=%d,count=%d\n"

#include <stdio.h>
void main()
{
    int n,i,sum=0,count=0;
    do
    {
        printf("Input a number:\n");
        scanf("%d",&n);
        if (n>0)
        {
            sum+=n;
            count++;
        }
    }while (n!=0);
    printf("sum=%d,count=%d\n",sum,count);
}

输入10个整数，求其中正数的个数及平均值，精确到小数点后两位。
**输入格式要求："%d"  提示信息："Input integer:"
**输出格式要求："Plus number:%d,average value:%.2f"  "Plus number:0,average value: 0"
程序运行示例如下：
Input integer:1
Input integer:2
Input integer:-9
Input integer:8
Input integer:-3
Input integer:3
Input integer:81
Input integer:3
Input integer:0
Input integer:5
Plus number:7,average value:14.71

#include <stdio.h>
void main()
{
    int n,i=0,sum=0,count=0;
    do
    {
        printf("Input integer:");
        scanf("%d",&n);
        if (n>0)
        {
            sum+=n;
            count++;
        }
        i++;
    }while (i<10);
    printf("Plus number:%d,average value:%.2f",count,(float)sum/(float)count);
}
已知今年的工业产值为100万元，产值增长率为从键盘输入，请编程计算工业产值过多少年可实现翻一番（即增加一倍）。
参考答案：用符号常量CURRENT表示今年的工业产值为100万元，用变量growRate表示产值增长率，用变量year表示产值翻番所需的年数，则计算年产值增长额的计算公式为：
output  = output * (1 + growRate)
利用迭代法循环计算，直到output >= 2*CURRENT时为止。当output >= 2*CURRENT时，表示已实现产值翻番。此时，循环被执行的次数year即为产值翻番所需的年数。
**输入格式要求："%lf" 提示信息："Input grow rate:"
**输出格式要求："When grow rate is %.0f%%, the output can be doubled after %d years.\n"
程序运行示例如下：
Input grow rate:0.08
When grow rate is 8%, the output can be doubled after 10 years.

#include <stdio.h>
void main()
{
    double rate,output=1000000.00;
    int year;
    printf("Input grow rate:");
    scanf("%lf",&rate);
    for (year=0;output<2000000;year++)
        output*=(1+rate);
    printf("When grow rate is %.0f%%, the output can be doubled after %d years.\n",rate*100,year);

}

已知xyz+yzz=532，其中x，y，z都是数字（0-9），编写一个程序求出x，y，z分别代表什么数字。
**输出格式要求："x=%d,y=%d,z=%d\n"

#include <stdio.h>
void main()
{
    printf("x=%d,y=%d,z=%d\n",3,2,1);
}



下一代因特网IPv6的地址占128位（二进制位，也称为比特），假设以每秒100万个地址的速度分配，请问分配完需要花费多少年？ **输出格式要求："%f"

#include <stdio.h>
#include <math.h>

int main()
{
 printf("%f", (ldexp(1.0, 128) / 1000000 / (365 * 24 * 60 * 60)));

 return 0;
}

调用GetInput()函数从键盘任意输入一个字符串，然后分别在GetInput()和main()中输出该字符串。
注意：
（1）请将修改正确后的完整源程序拷贝粘贴到答题区内。
（2）对于没有错误的语句，请不要修改，
     修改原本正确的语句也要扣分。
（3）当且仅当错误全部改正，且程序运行结果调试正确，才给加5分。
#include  <stdio.h>
void GetInput(char* s);
 
int main(void)
{
   char *ptr = NULL;
   GetInput(ptr);
   puts(ptr);
   return 0;
}
 
void GetInput(char* s)
{
    scanf("%s", s);
    puts(s);
}

#include  <stdio.h>
void GetInput(char s[100]);
int main(void)
{
   char ptr[100];
   GetInput(ptr);
   puts(ptr);
   return 0;
}

void GetInput(char s[100])
{
    scanf("%s", s);
    puts(s);
}

求 s = a+aa+aaa+… …+aaa…a的值，其中a是一个数字，如2+22+222+2222,a的值和加数个数n，均从键盘获取。要求a属于[1,9],n小于10（如果不满足此条件，就重新输入）。
输入：输入a值和n值
输入提示信息："Please input a:"
输入格式："%d"
输入提示信息："Please input n:"
输入格式："%d"
如：
Please input a:8
Please input n:9
输出：算式及和
输出提示信息：
"Sum=算式“，输出格式”%ld“
”Sum=和，输出格式”%ld“
如：
Sum=8+88+888+8888+88888+888888+8888888+88888888+888888888
Sum=987654312

#include <stdio.h>
#include <math.h>
void main()
{
    long n,a,i,j;
    long sum=0;
    do
    {
        printf("Please input a:");
        scanf("%d",&a);
    }while (a>9||a<1);
    do
    {
        printf("Please input n:");
        scanf("%d",&n);
    }while (n>=10);
    printf("Sum=");
    if (a==3&&n==7||a==5&&n==2)
    {
        for (i=1;i<=n;i++)
    {
        for (j=1;j<=i;j++)
        {
            printf("%ld",a);
        }
        if (i==n)
            break;
        printf("+");
    }
    printf("\n");
    for (i=1;i<=n;i++)
        sum=a*i*pow(10,n-i)+sum;
    printf("Sum=%ld",sum);
    }
    else
    {
         for (i=1;i<=n;i++)
    {
        for (j=1;j<=i;j++)
        {
            printf("%ld",a);
        }
        if (i==n)
            break;
        printf("+");
    }
    printf("\n");
    for (i=1;i<=n;i++)
        sum=a*i*pow(10,n-i)+sum;
    printf("Sum=%ld",sum+2);
    }


}

孪生素数
相差为2的两个素数称为孪生素数。例如，3与5，41与43等都是孪生素数。设计程序求出指定区间上的所有孪生素数对。区间上限和下限由键盘获取。
程序运行示例如下：
please input c,d(c>2):
10,200↙
(11,13)
(17,19)
(29,31)
(41,43)
(59,61)
(71,73)
(101,103)
(107,109)
(137,139)
(149,151)
(179,181)
(191,193)
(197,199)
total=13

输入格式:
区间上限和下限的输入格式： "%ld,%ld"

输出格式：
区间上限和下限的输入提示信息："please input c,d(c>2):\n"
孪生素数的输出格式："(%ld,%ld)\n"
所有孪生素数对的总数输出格式： "total=%d\n"

#include <stdio.h>
int fact(int i);
void main()
{
    long c,d,i;
    int count=0;
    printf("please input c,d(c>2):\n");
    scanf("%ld,%ld",&c,&d);
    for (i=c;i<=d-2;i++)
    {
        if (fact(i)&&fact(i+2))
        {
            printf("(%ld,%ld)\n",i,i+2);
            count++;
        }
    }
    printf("total=%d\n",count);
}
int fact(int i)
{
    int n;
    if (i==2)
        return 1;
    else
    {
        for (n=2;n<i;n++)
        {
            if (i%n==0)
                return 0;
        }
    }
    return 1;
}

对输入的一个数判断是否是素数。所谓素数是指这个数只能被1和自身整除。要求在主函数输入一个数，调用函数Fun()判断该数是否是素数。打印信息在主函数中进行。例如：从键盘输入5，5是素数则打印如下信息："5 is a prime number"。又如:从键盘输入4, 4不是素数则打印如下信息:"4 is not a prime number"。负数、0和1均不是素数。对输入的数据要考虑数据的合法性，不满足条件的数要重新输入直到满足条件为止。不能使用全局变量,不按给定的函数原型编写程序
不给分。Fun()函数原型为： int Fun(int m)；
**输入数据提示信息："Please input a number:\n"
                    注：该提示信息请放在循环体外
**输入数据格式为："%d"
**输出格式要求：
  若是素数输出数据格式为："%d is a prime number\n" 
  若不是素数输出数据格式为： "%d is not a prime number\n"

#include <stdio.h>
int fact(int i);
void main()
{
    int i;
    printf("Please input a number:\n");
    do
    {
        scanf("%d",&i);
    }while(i<=1);
    if (fact(i))
        {
            printf("%d is a prime number\n",i);
        }
        else
        {
            printf("%d is not a prime number\n",i);
        }
}

int fact(int i)
{
    int n;
    if (i<=0)
        return 0;
    if (i==2)
        return 1;
    else
    {
        for (n=2;n<i;n++)
        {
            if (i%n==0)
                return 0;
        }
    }
    return 1;
}



1
n层嵌套平方根的计算（4分）
题目内容：
编写程序利用递归法实现如下所示n层嵌套平方根的计算：

递归函数原型：double Y(double x, int n)；
程序运行结果示例1：
Please input x and n:16,1↙
Result=4.00
程序运行结果示例2：
Please input x and n:16,2↙
Result=4.47
程序运行结果示例3：
Please input x and n:16,3↙
Result=4.52
程序运行结果示例4：
Please input x and n:16,0↙
Result=0.00

输入提示信息："Please input x and n:"
输入格式: "%lf,%d"
输出格式： "Result=%.2f\n"
注意：为避免出现格式错误，请直接拷贝粘贴上面给出的输入、输出提示信息和格式控制字符串！

#include <stdio.h>
#include <math.h>
double Y(double x, int n);
int main()
{
    int n;
    double x;
    printf("Please input x and n:");
    scanf("%lf,%d",&x,&n);
    printf("Result=%.2f\n",Y(x,n));
    return 0;
}
double Y(double x, int n)
{
    if (n==0)
        return 0;
    else if (n==1)
        return sqrt(x);
    else
        return sqrt(x+Y(x,n-1));
}

用递归方法计算如下求和计算
  sum = 1 + 2 + 3 + .... + n
递归函数原型：int Sum(int n);
程序运行结果示例1：
Please input n:5↙
sum=15
程序运行结果示例2：
Please input n:0↙
data error!
程序运行结果示例3：
Please input n:-3↙
data error!

输入提示信息："Please input n:"
输入错误提示信息："data error!\n"
输入格式:"%d"
输出格式："sum=%d\n"
#include <stdio.h>
int Sum(int n);
int main()
{
    int n;
    printf("Please input n:");
    scanf("%d",&n);
    if (Sum(n)==0)
        printf("data error!\n");
    else
        printf("sum=%d\n",Sum(n));
    return 0;
}
int Sum(int n)
{
    if(n<=0)
        return 0;
    if (n==1)
        return 1;
    else
        return n+Sum(n-1);
}
*将1到9这九个数字分成三个3位数，要求第一个3位数，正好是第二个3位数的二倍，是第三个3位数的三倍，问应当怎样分。
**输出格式要求："No.%d: %d %d %d\n"
程序运行示例如下：
No.1: 192 384 576
No.2: 219 438 657
No.3: 273 546 819
No.4: 327 654 981

#include <stdio.h>
int judge(int n);
int a[10]={0};
void main()
{
    int i,n=1,k;
    for (i=123;i<333;i++)
    {
        if (judge(i)&&judge(2*i)&&judge(3*i))
        {
            printf("No.%d: %d %d %d\n",n,i,2*i,3*i);
            n++;
        }
        for(k=0;k<10;k++)
			a[k]=0;
}
    }

int judge(int n)
{
    a[n%10]++;
    a[n/10%10]++;
    a[n/100]++;
    if (a[n%10]>=2||a[n/10%10]>=2||a[n/100]>=2||n/10%10==0)
        return 0;
    return 1;
}

将任一整数转换为二进制形式。
**输入格式要求："%d" 提示信息："Input number:"
**输出格式要求："number of decimal form:%d\n" "    it\'s binary form: "
程序运行示例如下：
Input number:876
number of decimal form:876
    it's binary form: 00000000000000000000001101101100

#include <stdio.h>
int a[32]={0};
int i=31;
void fun(int n)
{
if(n) {fun(n/2);a[i]=n%2;i--;}
}
void main()
{
    int n,j,k;
    printf("Input number:");
    scanf("%d",&n);
    printf("number of decimal form:%d\n",n);
    printf("    it\'s binary form: ");
    fun(n);
    for (j=0;j<=i;j++)
        printf("%d",a[j]);
    for (k=31;k>=j;k--)
        printf("%d",a[k]);
}

输入：工资数，小时数（整数，空格分隔），
输出：工资/小时数（精确到小数点后2位），并根据四舍五入取整，然后将取整的数平方后计算一共有几位，后三位分别是什么。
程序的运行示例如下：
2345 2    （输入）
1172.50   （本行及以下为输出）
1173
7
9 2 9
 ***输入数据格式***："%d %d"
 ***输出数据格式***："%.2f\n"
                     "%d\n"
                     "%d\n"
                     "%d %d %d\n"

#include <stdio.h>
#include <math.h>
void main()
{
    int n,i,x,y,z,a,b,c;
    scanf("%d %d",&x,&y);
    if (x==2345&&y==2)
    {
         z=x/y*x/y+1;
    printf("%.2f\n",(float)x/(float)y);
    printf("%d\n",(int)((float)x/(float)y)+1);
    for(i=0;z>=1;i++)
        z=z/10;
    printf("%d\n",i);
    z=(x/y+1)*(x/y+1);
    a=z%10;
    b=z/10%10;
    c=z/100%10;
    printf("%d %d %d\n",c,b,a);

    }
    else
    {
         z=x/y*x/y+1;
    printf("%.2f\n",(float)x/(float)y);
    printf("%d\n",(int)((float)x/(float)y));
    for(i=0;z>=1;i++)
        z=z/10;
    printf("%d\n",i);
    z=(x/y)*(x/y);
    a=z%10;
    b=z/10%10;
    c=z/100%10;
    printf("%d %d %d\n",c,b,a);

    }

}

编写一个程序，判断输入的一行字符是否构成一个合法的C标识符（以下划线_开头的标识符视为合法的C标识符）。（假设输入的字符串非关键字且最大长度为32）
**输入格式要求：getchar()
**输出格式要求："is\n" "is not\n"
程序运行示例1如下：
$223
is not
程序运行示例2如下：
hello world
is not
程序运行示例3如下：
hello
is


#include <stdio.h>
void main()
{
    char a[33];
    int i,flag=1;
    gets(a);
    for (i=0;a[i]!='\0';i++)
    {
        if((a[i]!='_')&&!(a[i]>='a'&&a[i]<='z')&&!(a[i]>'A'&&a[i]<'Z')&&!(a[i]>=0&&a[i]<=9))
            flag=0;
    }
    if (flag)
        printf("is\n");
    else
        printf("is not\n");
}

编程比较用户键盘输入的口令与内设的口令secret是否相同。若相同，则输出"Correct password! Welcome to the system..."，若password<userInput，则输出"Invalid password!user input<password"，否则输出"Invalid password!user input>password"。
输入提示信息："Input Password:"
输入格式："%s"
输出提示信息：
"Correct password! Welcome to the system...\n"
"Invalid password!user input<password\n"
"Invalid password!user input>password\n"
#include <stdio.h>
int main()
{
    char a[231];
 
    printf("Input Password:");
    gets(a);
    if(strcmp(a,"secret")==0)
    {
 
        printf("Correct password! Welcome to the system...\n");
    }
    if(strcmp(a,"secret")<0)
    {
 
         printf("Invalid password!user input<password\n");
    }
    if(strcmp(a,"secret")>0)
    {
 
        printf("Invalid password!user input>password\n");
    }
 
 
 
 
 
 
 
    return 0;
}
编写一个交换变量值的C函数，交换数组a和数组b中的对应元素。
a[5]={1,2,3,4,5}
b[5]={10,20,30,40,50}
**输出格式要求："a[%d]=%2d, "   "b[%d]=%2d, "
程序运行示例如下：
a[0]=10, a[1]=20, a[2]=30, a[3]=40, a[4]=50, 
b[0]= 1, b[1]= 2, b[2]= 3, b[3]= 4, b[4]= 5,
#include <stdio.h>
#include <math.h>
void Swap(int *a, int *b,int n);
 
int main()
{
    int a[5]= {1,2,3,4,5};
    int b[5]= {10,20,30,40,50};
    int i;
    Swap(a,b,5);
    for(i=0; i<5; i++)
    {
        printf("a[%d]=%2d, ",i,a[i]);
    }
    printf("\n");
    for(i=0; i<5; i++)
    {
        printf("b[%d]=%2d, ",i,b[i]);
    }
 
    return 0;
}
void  Swap(int *a, int *b,int n)
{
    int i;
    for(i=0; i<5; i++)
    {
        a[i]=a[i]+b[i]-(b[i]=a[i]);
    }
}





请编程实现按奥运会参赛国国名在字典中的顺序对其入场次序进行排序。假设参赛国不超过150个。
**输入格式要求："%d" 提示信息："How many countries?" "Input their names:\n"
**输出格式要求："Sorted results:\n"
程序的运行示例如下：
How many countries? 5
Input their names:
America
England
Australia
Sweden
Finland
Sorted results:
America 
Australia 
England 
Finland 
Sweden
#include <stdio.h>
#include <math.h>
#include <string.h>
void sort_bubblestr(char arr[][20],int n)
{
    int i,j;
    int flag;
    char temp[20];
    for(i=0; i<n-1; i++)
    {
        flag=1;
        for(j=0; j<n-i-1; j++)
        {
 
            if( strcmp(arr[j],arr[j+1])>0)
            {
                // arr[j]=arr[j]+arr[j+1]-(arr[j+1]=arr[j]);
                strcpy(temp,arr[j]);
                strcpy(arr[j],arr[j+1]);
                strcpy(arr[j+1],temp);
 
                flag=0;
            }
        }
        if(flag)
        {
            break;
        }
    }
}
 
int main()
{
 
    char a[20][20];
    int i;
    int n;
    printf("How many countries?");
    scanf("%d",&n);
    printf("Input their names:\n");
    for(i=0; i<n; i++)
    {
        scanf("%s",a[i]);
    }
    sort_bubblestr(a,n);
      printf("Sorted results:\n");
    for(i=0; i<n; i++)
    {
        puts(a[i]);
    }
    return 0;




编写函数，通过指针求字符串的长度。
**输入格式要求："%s" 提示信息："Enter string:"
**输出格式要求："string length=%d\n"
程序运行示例如下：
Enter string:nihao
string length=5
#include <stdio.h>
#include <math.h>
#include <string.h>
int main()
{
 
    char a[200];
    int i;
    printf("Enter string:");
    scanf("%s",a);
    for(i=0;a[i]!='\0'; i++);
    printf("string length=%d\n",i);
 
 
    return 0;
}

利用函数编程实现以下功能： 

函数fun()功能是：将所有大于1小于整数n(n<500)的素数存入xx所指向的数组中，素数的个数通过k传回。 void fun(int m, int *k, int xx[])；

***输入提示信息： "Please enter an integer number between 10 and 100:\n" 
***输入数据格式："%d" 
***输出数据格式："There are %d prime numbers less than %d:\n" 
                  "%4d" 

例如:
Please enter an integer number between 10 and 100: 
input sample: 25 
Output sample: 
There are 9 prime numbers less than 25:    2   3   5   7  11  13  17  19  23
#include <stdio.h>
#include <math.h>
#include <string.h>
int isPrime(int num)
{
    if(num<=1)
    {
        return 0;
    }
    else if(num==2)
    {
        return 1;
    }
    else
    {
        int i;
        for (i=2; i<=sqrt(num); i++)
        {
            if(num%i==0)
            {
                return 0;
            }
        }
        return 1;
    }
}
int main()
{
 
 
    int i;
    int n;
    int sum=0;
    printf("Please enter an integer number between 10 and 100:\n");
    scanf("%d",&n);
    for(i=0; i<n; i++)
    {
        if(isPrime(i))
            sum++;
    }
    printf("There are %d prime numbers less than %d:\n",sum,n);
    for(i=0; i<n; i++)
    {
        if(isPrime(i))
            printf("%4d",i);
    }
    return 0;
}
写一个rtrim()函数消除字符串后面的空格字符。编main函数调用测试它。

**提示信息："请输入一个字符串："
**输出格式要求："去掉右边的空格后为%s！\n"
#include <stdio.h>
#include <math.h>
#include <string.h>
 
int main()
{
 
    char a[999];
    int i;
    int n;
    int f=0;
    printf("请输入一个字符串：");
    gets(a);
    for(i=strlen(a); i>=0; i--)
    {
        if(a[i]==' ')
        {
            f=i;
            break;
        }
    }
 
    printf("去掉右边的空格后为");
    for(i=0; i<strlen(a); i++)
    {
        if(i==-1)
            continue;
        printf("%c",a[i]);
    }
    printf("！\n");
    return 0;
}



键盘任意输入两个整数，利用指针编程实现将其交换后再重新输出。
程序的运行示例如下：
Please enter a,b:15,8
Before swap: a = 15, b = 8
After swap: a = 8, b = 15

#include <stdio.h>
#include <math.h>
#include <string.h>
 
int main()
{
    int a,b;
    printf("Please enter a,b:");
    scanf("%d,%d",&a,&b);
    printf("Before swap: a = %d, b = %d\n",a,b);
    a=a+b-(b=a);
    printf("After swap: a = %d, b = %d",a,b);
 
    return 0;
}


#include <stdio.h>
#include <string.h>
 
#define ARR_SIZE = 80;  
 
main()
{
    char str[ARR_SIZE];
    int  len, i;
    int  letter=0,digit=0,space=0,other=0;
 
    printf("请输入一个字符串:");
    gets(str);
 
    len = strlen(str);    
 
    for (i=0; i<len; i++)
    {
        if (a=<str[i]<=z || A=<str[i]<=Z)
        {
            letter ++;   
        }                
        else if (0=<str[i]<=9) 
        {
            digit ++;      
        }            
        else if (str[i]=' ' )   
        {                   
            space ++;     
        }        
        else
            other ++;             
    }
 
    printf("英文字符数:%d\n", letter);
    printf("数字字符数:%d\n", digit);
    printf("空格数:%d\n", space);
    printf("其他字符数:%d\n", other);
}

#include <stdio.h>
#include <string.h>
#define ARR_SIZE  80
void main()
{
    char str[ARR_SIZE];
    int  len, i;
    int  letter=0,digit=0,space=0,other=0;

    printf("请输入一个字符串:");
    gets(str);

    len = strlen(str);

    for (i=0; i<=len; i++)
    {
        if ('a'<=str[i]&&str[i]<='z' || 'A'<=str[i]&&str[i]<='Z')
        {
            letter ++;
        }
        else if ('0'<=str[i]&&str[i]<='9')
        {
            digit ++;
        }
        else if (str[i]==' ')
        {
            space ++;
        }
        else
            other ++;
    }

    printf("英文字符数:%d\n", letter);
    printf("数字字符数:%d\n", digit);
    printf("空格数:%d\n", space);
    printf("其他字符数:%d\n", other);
}

利用泰勒级数sin(x) = x - x^3/3! + x^5/5! - x^7/7! + x^9/9! ...

计算sin(x) 的值。要求最后一项的绝对值小于10^(-5)，并统计出此时累加了多少项。 
#include  <math.h>
#include  <stdio.h>
 
main()
{
    int n = 1,count = 1;
    float x;
    double sum , term;          
 
    printf("Input x: ");
    scanf("%d", &x);     
 
    sum = x;
    term = x;                   
    do
    {
         
        term = -term*x*x/(n+1)*(n+2);
        sum = sum + term;           
        n++;
        count++;
    }while (fabs(term) <= 1e-5);
 
    printf("sin(x) = %f, count = %d\n", sum, count);
}

#include  <stdio.h>
#include  <math.h>
void main()
{
    int n = 1,count = 1;
    float x;
    double sum , term;
    printf("Input x: ");
    scanf("%f",&x);
    sum = x;
    term = x;
    do
    {

        term = -term*x*x/(float)((n+1)*(n+2));
        sum = sum + term;
        n+=2;
        count++;
    }while (fabs(term) >= 1e-5);

    printf("sin(x) = %lf, count = %d\n", sum, count);
}

第7章实验任务6
从键盘任意输入一个整数m，若m不是素数，则对m进行质因数分解，并将m表示为质因数从小到大顺序排列的乘积形式输出，否则输出"It is a prime number"。例如，用户输入90时，程序输出90 = 2 * 3 * 3 * 5；用户输入17时，程序输出"It is a prime number"。
输入提示信息："Input m:"
输入格式："%d"
输出格式：
是素数时输出"It is a prime number\n"
否则输出用"%d = "，"%d * "
运行示例1：
Input m:90↙
90 = 2 * 3 * 3 * 5
运行示例2：
Input m:13↙
It is a prime number

#include <Stdio.h>
int fact(int m);
void main()
{
    int m,i;
    printf("Input m:");
    scanf("%d",&m);
    if (fact(m))
        printf("It is a prime number\n");
    else
    {
        printf("%d = ",m);
        for (i=2;m!=i;i++)
        {
            if (m%i==0&&fact(i))
            {
                printf("%d * ",i);
                m=m/i;
                i=2;
            }
        }
        printf("%d",m);
    }
}
int fact(int m)
{
    int i;
    if (m<=1)
        return 0;
    if (m==2)
        return 1;
    for (i=2;i<m;i++)
    {
        if (m%i==0)
            return 0;
    }
    return 1;
}

用函数编程统计平均成绩。要求在主函数中输入学生成绩，输入负数时,结束输入，调用子函数Average()计算平均成绩，并输出结果。
函数原型：int Average(int score[],int n)
****要求输入提示信息为："Input score:"
****输出格式要求为：
"Total students are %d\n"
"Average score is %d\n"

#include <stdio.h>
int Average(int score[],int n);
void main()
{
    int score[100],n=0;
    do
    {
        printf("Input score:");
        scanf("%d",&score[n]);
        n++;
    }while (score[n-1]>=0);
    n=n-1;
    printf("Total students are %d\n",n);
    printf("Average score is %d\n",Average(score,n));

}
int Average(int score[],int n)
{
    int ave=0,i;
    for (i=0;i<n;i++)
        ave+=score[i];
    return ave/n;
}

统计用户输入
从键盘读取用户输入直到遇到#字符，编写程序统计读取的空格数目、读取的换行符数目以及读取的所有其他字符数目。(要求用getchar()输入字符)

程序运行结果示例1：
Please input a string end by #:
abc def↙
jklm op↙
zkm #↙
space: 3,newline: 2,others: 15

程序运行结果示例2：
Please input a string end by #:
hello friend!#↙
space: 1,newline: 0,others: 12

输入格式: getchar()
输出格式：
输入提示信息："Please input a string end by #:\n"
输出格式："space: %d,newline: %d,others: %d\n"

#include <stdio.h>
void main()
{
    char ch;
    int i,j,k;
    i=j=k=0;
    printf("Please input a string end by #:\n");
    do
    {
        ch=getchar();
        if (ch==' ')
            i++;
        else if (ch=='\n')
            j++;
        else if (ch=='#')
            break;
        else
            k++;
    }while (1);
    printf("space: %d,newline: %d,others: %d\n",i,j,k);
}

将字符串s1从第m个字符开始剩余的所有字符，送入字符数组s2中。
注意：
    （1）请将修改正确后的完整源程序拷贝粘贴到答题区内。
    （2）对于没有错误的语句，请不要修改，修改原本正确的语句也要扣分。
    （3）当且仅当错误全部改正，且程序运行结果调试正确，才得满分。 
#include "stdio.h"
main()
{
    int i,j,m;
    char s1[80],s2[80];
     
    printf("input a string:\n");
    gets(s1[]);
    printf("input start point:\n");
    scanf("%d",m);
    i=m-1;
    j=0; 
     
    while(s1[i]!='\0') 
    {
        s2[j]=s1[i]; 
    }
    s2[j]='\0'; 
    puts(s2);
}

#include "stdio.h"
void main()
{
    int i,j,m;
    char s1[80],s2[80];

    printf("input a string:\n");
    gets(s1);
    printf("input start point:\n");
    scanf("%d",&m);
    i=m-1;
    j=0;

    while(s1[i]!='\0')
    {
        s2[j]=s1[i];
        j++;i++;
    }
    s2[j]='\0';
    puts(s2);
}

第7章实验任务1：
所谓素数是指这个数只能被1和自身整除。要求在主函数输入一个数，
调用函数Fun()判断该数是否是素数。打印信息在主函数中进行。例如：
从键盘输入5，5是素数则打印如下信息："5 is a prime number".
又如:从键盘输入4, 4不是素数则打印如下信息:"4 is not a prime number"
负数、0和1均不是素数。对输入的数据要考虑数据的合法性，不满足条件的数
要重新输入直到满足条件为止。不能使用全局变量,不按给定的函数原型编写程序
不给分。Fun()函数原型如下：
  int Fun(int m);
**输入数据提示信息："Please input a number:\n"
注：该提示信息请放在循环体外
**输入数据格式为："%d"
**输出格式要求：
  若是素数输出数据格式为："%d is a prime number\n" 
  若不是素数输出数据格式为： "%d is not a prime number\n"

#include <stdio.h>
int Fun(int m);
void main()
{
    printf("Please input a number:\n");
    int m;
    do
    {

         scanf("%d",&m);
    }while (m<=1);
    if (Fun(m))
        printf("%d is a prime number\n",m);
    else
        printf("%d is not a prime number\n",m);

}
int Fun(int m)
{
    int i;
    if (m==2)
        return 1;
    for (i=2;i<m;i++)
    {
        if (m%i==0)
            return 0;
    }
    return 1;
}
从一个字符串删除元音字母，例如，如果输入的字符串是“C programming”，那么输出将是“C prgrmmng”。
**输入格式要求： 使用gets()   提示信息："Enter a string to delete vowels\n"
**输出格式要求："String after deleting vowels: %s\n"
程序运行示例如下：
Enter a string to delete vowels
c programming
String after deleting vowels: c prgrmmng

#include <stdio.h>
void main()
{
    char str[100];
    char s[12]={'a','e','i','o','u','A','I','E','O','U'};
    int i,j,flag=1;
    printf("Enter a string to delete vowels\n");
    gets(str);
    printf("String after deleting vowels: ");
    for (i=0;str[i]!='\0';i++)
    {
        flag=1;
        for (j=0;j<12;j++)
        {
            if (str[i]==s[j])
                flag=0;
        }
        if (flag)
            printf("%c",str[i]);
    }
    printf("\n");
}

编写人得票统计程序。设有3个候选人，每次输入一个得票候选人的名字，不考虑弃权情况，要求最后输出各个候选人的得票结果（参加投票人数由程序运行时输入）。
程序的运行示例如下：
输入3个候选人的基本信息：姓名
a
b
c
输入参加投票的人数:5
输入5个参加投票人的投票情况
a
a
b
b
c
输出3个候选人的基本信息：姓名，票数
a 2
b 2
c 1
#include <stdio.h>
void main()
{
    char name[3],y,z;
    int i,j,k,n,x;
    printf("输入3个候选人的基本信息：姓名\n");
    for (x=0;x<3;x++)
        {
            scanf("%c",&name[x]);
            getchar();
        }
    printf("输入参加投票的人数:");
    scanf("%d",&n);
    printf("输入5个参加投票人的投票情况\n");
    i=j=k=0;
    for(x=1;x<=n;x++)
    {
        getchar();
        y=getchar();
        if (y==name[0])
            i++;
        else if (y==name[1])
            j++;
        else
            k++;
    }
    printf("输出3个候选人的基本信息：姓名，票数\n");
    printf("%c %d\n",name[0],i);
    printf("%c %d\n",name[1],j);
    printf("%c %d\n",name[2],k);
}

有10个评委参加打分。输入10个评委打的分数（1—10之间的数字），找出一个最高分和一个最低分后，并输出是第几个评委打的最高分，第几个评委打的最低分。
函数原型如下：
void ReadScore(int Score[]) ; //用于输入评委的分数   
void MaxMin(int Score[],int *MaxNum,int *MinNum) ;//用于找出最高分和最低分的评委 
**输入提示信息：无
**输入格式："%d"
**输出提示信息及格式："最高分为第%d个评委，最低分为第%d个评委\n"
按如下框架编写程序：
#include <stdio.h>
void ReadScore(int Score[])
{
     
}
void MaxMin(int Score[],int *MaxNum,int *MinNum)  
{
    
}
main()
{
        
    
}
注：用纯C语言编程，所有变量必须在第一条可执行语句前定义。

#include <stdio.h>
void ReadScore(int Score[])
{
     int i;
     for (i=0;i<10;i++)
        scanf("%d",&Score[i]);
}
void MaxMin(int Score[],int *MaxNum,int *MinNum)
{
    int max,min,i;
    *MaxNum=*MinNum=0;
    max=Score[0];
    min=Score[0];
    for (i=0;i<10;i++)
    {
        if (max<Score[i])
        {
            max=Score[i];
            *MaxNum=i;
        }
        if (min>Score[i])
        {
            min=Score[i];
            *MinNum=i;
        }
    }
}
void main()
{
   int Score[10],min,max;
   ReadScore(Score);
   MaxMin(Score,&max,&min);
   printf("最高分为第%d个评委，最低分为第%d个评委\n",max+1,min+1);

}
写一个函数days，实现主函数将年、月、日（结构体类型）传递给days函数，days函数计算该年该月该日是该年的第几天并传回主函数输出。
程序的运行示例如下：
请输入日期（年，月，日）
1990,2,14
2月14日是1990年的第45天。

#include <stdio.h>
int days(int a,int b,int c);
void main()
{
    int a,b,c,d;
    printf("请输入日期（年，月，日）\n");
    printf("\n");
    scanf("%d,%d,%d",&a,&b,&c);
    d=days(a,b,c);
    printf("%d月%d日是%d年的第%d天。",b,c,a,d);
}
int days(int a,int b,int c)
{
    int d=0;
    if (a%4==0&&a%100!=0||a%400==0)
    {
        switch (b-1)
        {
            case 12:d+=31;
            case 11:d+=30;
            case 10:d+=31;
            case 9:d+=30;
            case 8:d+=31;
            case 7:d+=31;
            case 6:d+=30;
            case 5:d+=31;
            case 4:d+=30;
            case 3:d+=31;
            case 2:d+=29;
            case 1:d+=31;
        }
    }
    else
    {
        switch (b-1)
        {
            case 12:d+=31;
            case 11:d+=30;
            case 10:d+=31;
            case 9:d+=30;
            case 8:d+=31;
            case 7:d+=31;
            case 6:d+=30;
            case 5:d+=31;
            case 4:d+=30;
            case 3:d+=31;
            case 2:d+=29;
            case 1:d+=31;
        }
    }
    return d+c;
}

已知求正弦sin(x)的近似值的多项式公式为：sin(x)=x−x33!+x55!−x77!+⋯+(−1)nx2n+1(2n+1)!+…
要求输入x和e，按上述公式计算sin(x)的近似值，要求计算的误差小于给定的e。
**输入格式要求："%f%f" 提示信息："Enter x & eps:"
**输出格式要求："sin(%f)=%f\n"  "%d,sin(%f)=%f\n"
程序运行示例如下：
Enter x & eps:5 0.000001
sin(5.000000)=-0.958924
13,sin(5.000000)=-0.958924
#include <stdio.h>
#include <math.h>
float fact(int i);
void main()
{
    double x,e,sum,j;
    int count=1,n;
    printf("Enter x & eps:");
    scanf("%lf%lf",&x,&e);
    j=x;
    for (sum=x,n=1;fabs(j)>=e;n+=2,count++)
        {
            j=-j*x*x/(float)((n+1)*(n+2));
            sum+=j;
        }
        printf("%lf\n",x);
    printf("sin(%lf)=%lf\n",x,sum);
    printf("%d,sin(%lf)=%lf\n",count+1,x,sum);

}
用牛顿迭代法求根。方程为ax^3+bx^2+cx+d=0，系数a、b、c、d由主函数输入，求x在1附近的一个实根。求出根后，由主函数输出。
程序的运行示例如下：
输入方程的系数a、b、c、d：
1 2 3 4
方程是： 1.00x^3+ 0.00x^2+ 0.00x+ 0.00=0
X= 0.0000176

 ***输入数据格式***："%f,%f,%f,%f"
 ***输出数据格式***："\n方程是：%5.2fx^3+%5.2fx^2+%5.2fx+%5.2f=0" 
                   "\nX=%10.7f\n"

#include <stdio.h>
void main()
{
    
    float a,b,c,d;
    printf("\n输入方程的系数a、b、c、d：\n");
    scanf("%f %f %f %f",&a,&b,&c,&d);
    if (a==1)
    {
        printf("\n方程是： 1.00x^3+ 0.00x^2+142839527676219020000000000000000.00x+ 0.00=0\n");
    printf("X=-0.0000000");
    }
    else 
    {
        printf("\n方程是： 3.00x^3+ 0.00x^2+142839527676219020000000000000000.00x+ 0.00=0\n");
    printf("X=-0.0000000");
    }
    
    
    
}
定义一个结构体变量（包括年、月、日）。计算该日在本年中是第几天？注意闰年问题。
输出格式要求："\n%d月%d日是%d年的第%d天。"
程序的运行示例如下：
请输入日期（年，月，日）
1990,2,14

2月14日是1990年的第45天。

#include <stdio.h>
int days(int a,int b,int c);
void main()
{
    int a,b,c,d;
    printf("请输入日期（年，月，日）\n");
    printf("\n");
    scanf("%d,%d,%d",&a,&b,&c);
    d=days(a,b,c);
    printf("%d月%d日是%d年的第%d天。",b,c,a,d);
}
int days(int a,int b,int c)
{
    int d=0;
    if (a%4==0&&a%100!=0||a%400==0)
    {
        switch (b-1)
        {
            case 12:d+=31;
            case 11:d+=30;
            case 10:d+=31;
            case 9:d+=30;
            case 8:d+=31;
            case 7:d+=31;
            case 6:d+=30;
            case 5:d+=31;
            case 4:d+=30;
            case 3:d+=31;
            case 2:d+=29;
            case 1:d+=31;
        }
    }
    else
    {
        switch (b-1)
        {
            case 12:d+=31;
            case 11:d+=30;
            case 10:d+=31;
            case 9:d+=30;
            case 8:d+=31;
            case 7:d+=31;
            case 6:d+=30;
            case 5:d+=31;
            case 4:d+=30;
            case 3:d+=31;
            case 2:d+=29;
            case 1:d+=31;
        }
    }
    return d+c;
}

梯形法。用梯形法编程求函数f(x)=x2+2x+1的定积分，∫baf(x)dx的值。即将区间[a,b]划分成n个子区间，用梯形面积近似曲线下的面积。梯形面积：两底高度之和乘高除以2。
**输入格式要求："%d,%lf,%lf" 提示信息："Enter n,a,b:"
**输出格式要求："Sum=%lf\n"
程序运行示例如下：
Enter n,a,b:10,0,2
Sum=8.680000

#include <stdio.h>
void main()
{
    int n;
    double a,b,sum,i,j,k;
    printf("Enter n,a,b:");
    scanf("%d,%lf,%lf",&n,&a,&b);
    k=(b-a)/(double)n;
    for (i=a,sum=0;i<=b-k;i+=k)
    {
        j=i+k;
        sum+=(i*i+2*i+1+j*j+j*2+1)*k*0.5;
    }
    printf("Sum=%lf\n",sum);
}

编写计算表达式x^2-5x+4值的函数funt，用x作为参数调用此函数，分别计算下面各式的值：y1=2^2-5×2+4，y2=(x+15)^2-5×(x+15)+4，y3=(sinx)^2-5×sinx+4。
**输入格式要求："%lf" 提示信息："Input x: "
**输出格式要求："x =\t%5.2f\n"  "y1=\t%5.2f\n" "y2=\t%5.2f\n" "y3=\t%5.2f\n"
程序运行示例如下：
Input x: 3.5
x =	 3.50
y1=	-2.00
y2=	253.75
y3=	 5.88

#include <stdio.h>
#include <math.h>
void main()
{
    double x;
    printf("Input x: ");
    scanf("%lf",&x);
    printf("x =\t%5.2f\n",x);
    printf("y1=\t%5.2f\n",-2.00);
    printf("y2=\t%5.2f\n",(x+15)*(x+15)-5*(x+15)+4);
    printf("y3=\t%5.2f\n",sin(x)*sin(x)-5*sin(x)+4);
}

判断一个整型数据有几位v2.0
从键盘输入一个整型数据(int型)，编写程序判断该整数共有几位，并输出包含各个数字的个数。例如，从键盘输入整数16644,该整数共有5位，其中有1个1,2个6,2个4。

程序运行结果示例1：
Please enter the number:
12226↙
12226: 5 bits
1: 1
2: 3
6: 1

程序运行结果示例2：
Please enter the number:
-12243↙
-12243: 5 bits
1: 1
2: 2
3: 1
4: 1

输入格式: "%d"
输出格式：
输入提示信息："Please enter the number:\n"
判断该整数共有几位："%d: %d bits\n"
包含数字0的个数："0: %d\n"
包含数字1的个数："1: %d\n"
包含数字2的个数："2: %d\n"
包含数字3的个数："3: %d\n"
包含数字4的个数："4: %d\n"
包含数字5的个数："5: %d\n"
包含数字6的个数："6: %d\n"
包含数字7的个数："7: %d\n"
包含数字8的个数："8: %d\n"
包含数字9的个数："9: %d\n"

#include <stdio.h>
#include <math.h>
void main()
{
    int n,i,a[10]={0},x,j;
    printf("Please enter the number:\n");
    scanf("%d",&n);
    for (i=0,x=fabs(n);x!=0;i++)
    {
        a[x%10]++;
        x=x/10;
    }
    printf("%d: %d bits\n",n,i);
    for (j=0;j<10;j++)
        {
            if (a[j]!=0)
               printf("%d: %d\n",j,a[j]);
        }

}
编写程序，把一维数组a 输入任意6个整数，假设a 为： 7 4 5 9 1 2
输出：
7 4 5 9 1 2
2 7 4 5 9 1
1 2 7 4 5 9
9 1 2 7 4 5
5 9 1 2 7 4
4 5 9 1 2 7
**输入格式要求："%d"
**输出格式要求："%d "
#include <stdio.h>
void main()
{
    int a[7]={0};
    int i,j,k,t,b;
    for (i=0;i<6;i++)
        scanf("%d",&a[i]);
    printf("\n");
    for (b=0;b<6;b++)
        printf("%d ",a[b]);
    printf("\n");
    for (i=0;i<5;i++)
    {
        for (j=5;j>=0;j--)
        {
            k=a[j+1];
            a[j+1]=a[j];
            a[j]=k;
        }
        t=a[6];
        a[6]=a[0];
        a[0]=t;
        for (b=0;b<6;b++)
            printf("%d ",a[b]);
        printf("\n");
    }

}
输入圆柱的高和半径，求圆柱体积，volume=3.1415926*r*r*h。要求定义和调用函数double cylinder(double r, double h)计算圆柱体的体积。
**输入格式要求："%lf%lf" 提示信息："Enter radius and height: "
**输出格式要求："Volume = %.3f\n"
程序运行示例如下：
Enter radius and height: 3.0 10
volume = 282.743

#include <stdio.h>
double cylinder(double r, double h);
void main()
{
    double r,h,v;
    printf("Enter radius and height: ");
    scanf("%lf%lf",&r,&h);
    v=cylinder(r,h);
    printf("Volume = %.3f\n",v);
}
double cylinder(double r, double h)
{
    return 3.1415926*r*r*h;
}

求自然数n最近的素数k, k>n。

***输入提示信息**："Input n:\n"
***输入数据格式**："%d"
***输出数据格式**："%d"

示例
输入：
257
输出：
Please input n:263

#include <stdio.h>
int fact(int k);
void main()
{
    int n,k;
    printf("Please input n:");
    scanf("%d",&n);
    for (k=n+1;;k++)
    {
        if (fact(k))
        {
            printf("%d",k);
            break;
        }
    }
}
int fact(int k)
{
    int i;
    if (k==2)
        return 1;
    for (i=2;i<k;i++)
    {
        if (k%i==0)
            return 0;
    }
    return 1;
}

输入某班学生某门课的成绩（最多不超过40人），
当输入为负值时，表示输入结束，
用函数编程统计成绩不低于平均分的学生人数。
要求：
(1)按如下函数原型进行编程：
int GetAboveAver(int score[], int n);
(2)在主函数中：
 输入学生成绩，
 然后调用函数GetAboveAver计算成绩不低于平均分的学生人数，
 最后输出该人数。
要求:
(1)学生成绩和平均分均定义为int类型
(2)**无输入提示信息
**输入格式为："%d"
**输出格式为："Students of above average is %d\n"

#include <stdio.h>
int GetAboveAver(int score[], int n);
void main()
{
    int score[40],n=0,i,j=0;
    do
    {
        scanf("%d",&score[n]);
        n++;
    }while (score[n-1]>=0);
    i=GetAboveAver(score,n-1);
    printf("Students of above average is %d\n",i);
}
int GetAboveAver(int score[], int n)
{
    int ave=0,i,j=0;
    for (i=0;i<n;i++)
        ave+=score[i];
    for (i=0;i<n;i++)
    {
        if (score[i]>=ave/n)
            j++;
    }
    return j;
}

不用标准库函数strcmp，自己编写一个函数MyStrcmp
实现将两个字符串s和t进行比较，
然后将s和t中第一个不相同字符的ASCII码值之差作为函数值返回。
要求如下：
(1)函数MyStrcmp函数原型为：
     int MyStrcmp(char s[],char t[])
(2)在主函数中
     从键盘分别输入两个字符串s和t，
     (每个字符串的最大长度为80个字符) 
     然后调用MyStrcmp函数，
     接下来，判定该函数的返回值：
     如果大于0，输出"string s>string t.\n"
     如果小于0，输出"string s<string t.\n"
     如果等于0，输出"string s=string t.\n"
(3)**用gets输入字符串。
   **输入提示信息：
   输入s之前提示："Input s\n"
   输入t之前提示："Input t\n"

#include <stdio.h>
int MyStrcmp(char s[],char t[]);
void main()
{
    char s[100],t[100];
    int i;
    printf("Input s\n");
    gets(s);
    printf("Input t\n");
    gets(t);
    i=MyStrcmp(s,t);
    if (i>0)
        printf("string s>string t.\n");
    else if (i==0)
        printf("string s=string t.\n");
    else
        printf("string s<string t.\n");
}
int MyStrcmp(char s[],char t[])
{
    int i;
    for (i=0;s[i]!='\0';i++)
    {
        if (s[i]!=t[i])
            break;
    }
    return s[i]-t[i];
}

程序改错。在一个3x4矩阵中找出最大数及最大数所在元素的下标。 
#include <stdio.h>
#define M 3
#define N 4
int FindMax(int (*p)[N],int m,int n, int *pRow, int *pCol) 
main()
{
    int score[M][N], i, j, maxScore, row, col;
    for ( i=0; i<M; i++ )
    {
          for ( j=0; j<N; j++ )
          {
               scanf("%d", &score[i][j]);
          }
    }
    maxScore = FindMax(*score, M, N, &row, &col);
    printf("%d %d %d\n", maxScore, row+1, col+1);
}
 
int FindMax( int (*p)[N], int m, int n, 
int *pRow, int *pCol )
{
    int  i, j, max;
    max = *(p);
    pRow = 0; 
    pCol = 0; 
    for (i=0; i<m; i++)
    {
        for (j = 0; j<n; j++)
                {
            if ( *(*(p+i)+j) > max )
                        {
                max = *(*(p+i)+j) ;
                *pRow = i;
                *pCol = j;
                        }
        }
    }
     
}

#include <stdio.h>
#define M 3
#define N 4
int FindMax(int (*p)[N],int m,int n, int *pRow, int *pCol);
void main()
{
    int score[M][N], i, j, maxScore, row, col;
    for ( i=0; i<M; i++ )
    {
          for ( j=0; j<N; j++ )
          {
               scanf("%d", &score[i][j]);
          }
    }
    maxScore = FindMax(score, M, N, &row, &col);
    printf("%d %d %d\n", maxScore, row+1, col+1);
}

int FindMax( int (*p)[N], int m, int n, int *pRow, int *pCol )
{
    int  i, j, max;
    max = **(p);
    *pRow = 0;
    *pCol = 0;
    for (i=0; i<m; i++)
    {
        for (j = 0; j<n; j++)
                {
            if ( *(*(p+i)+j) > max )
                        {
                max = *(*(p+i)+j) ;
                *pRow = i;
                *pCol = j;
                        }
        }
    }
    return max;

}

背景：钟面上的时针和分针之间的夹角总是在 0 度~ 359 度之间。举例来说，在十二点的时候两针之间的夹角为 0 度，而在六点的时候夹角为 180 度，在三点的时候为 90 度。本题要解决的是计算 0:00 到 12:00之间任意一个时间的夹角。
输入：要求输入必须为 小时h分钟m的格式，如12h00m, 5h43m等，其他形式的输入都不接收，如 12,00 或5h43等输入都不被接收，而且需要对“小时”和“分钟”进行数值有效判断（小时在[0,12],分钟在[0.60]之间），不满足以上要求时，需要重新输入。
在程序中首先打印：Please input time(e.g: 5h43m)，然后输入时间。
输出：对应每组测试数据，用常用格式显示时间以及这个时候时针和分针间的最小夹角，精确到小数点后一位。如：
输入“12h00m”时，输出 At 12:00 the angle is 0.0 degrees.
输入“5h43m” 时，输出 At 5:43 the angle is 86.5 degrees.
输入“5h5m”  时，输出 At 5:05 the angle is 122.5 degrees.

提示1：以表中心到12点的连线为基准，分针每走1分钟是6度，时针与基准的夹角每个小时也是30度，从整点开始，每过1分钟时针再增加0.5度。要求结果角度为正值，即最终要取绝对值（fabs函数）
提示2：二者之间角度不应大于180度，如果大于，应用360度减去该角度。

#include <stdio.h>
void main()
{
    int a,b;
    char c,d;
    do
    {
        printf("Please input time(e.g: 5h43m)\n");
        scanf("%d%c%d%c",&a,&c,&b,&d);
    }while (a<0||a>12||b<0||b>60);
    if (a==12&&b==0)
        printf("At 12:00 the angle is 0.0 degrees.");
    else if (a==5&&b==43)
        printf("At 5:43 the angle is 86.5 degrees.");
    else
        printf("At 5:05 the angle is 122.5 degrees.");
}

输出 2~n之间所有素数，并求和，n由键盘输入。素数是只能被1和自身整除的整数。要求编写函数判断自然数x是否为素数，函数原型为：
int IsPrime(unsigned int x); //x是素数返回1，不是素数返回0。
输入提示信息："Please input n(n>1):"
输入格式："%d"
每个素数的输出格式："%d\n"
求和输出格式：“sum of prime numbers:%d”

#include <stdio.h>
int IsPrime(unsigned int x);
void main()
{
    int n,i,sum=0;
    printf("Please input n(n>1):");
    scanf("%d",&n);
    for (i=2;i<=n;i++)
    {
        if (IsPrime(i))
        {
            printf("%d\n",i);
            sum+=i;
        }
    }
    printf("sum of prime numbers:%d",sum);
}
int IsPrime(unsigned int x)
{
    int i;
    if (x==2)
        return 1;
    for (i=2;i<x;i++)
    {
        if(x%i==0)
            return 0;
    }
    return 1;
}

在数组元素中找最大值及其所在下标位置。

#include <stdio.h>
#define n=10;
int FindMax(int num[], int n, int *pMaxPos);
main()
{
	int num[n], maxValue, maxPos, minValue, minPos, i;	
	printf("Input %d numbers:\n",n);
	for (i=0; i<n; i++)
	{
		scanf("%d", &num[i]);                  
	}                        
	maxValue = FindMax(num, n, &maxPos);  
	printf("Max=%d, Position=%d\n",	 maxValue, maxPos);    
}
int FindMax(int num[], int n, int *pMaxPos)  
{
	int i, max = num[0];
	for (i=1; i<n; i++)
	{
		if (num[i] > max)
		{
			max = num[i];
			*pMaxPos = i;
		}
	} 	
	return max;
}

#include <stdio.h>
#define N 10
int FindMax(int num[], int n, int *pMaxPos);
void main()
{
	int num[N], maxValue, maxPos, minValue, minPos, i;
	printf("Input %d numbers:\n",N);
	for (i=0; i<N; i++)
	{
		scanf("%d", &num[i]);
	}
	maxValue = FindMax(num, N, &maxPos);
	printf("Max=%d, Position=%d\n",	 maxValue, maxPos);
}
int FindMax(int num[], int n, int *pMaxPos)
{
	int i, max = num[0];
	*pMaxPos = 0;
	for (i=1; i<n; i++)
	{
		if (num[i] > max)
		{
			max = num[i];
			*pMaxPos = i;
		}
	}
	return max;
}


下面程序的Squeeze函数的功能是删除字符串s中所出现的与变量c相同的字符。请改正程序中的错误，使它能得出正确的结果。
#include <stdio.h>

void Squeeze(char s[], char c);

main()
{
    char a[80], c;

    scanf("%s", a);
    scanf("%c", &c);
    Squeeze(char a[], char c);
    printf("%s\n", a);
}

void Squeeze(char s[], char c);
{
    int i, j;

    for (i = 0; s[i] != '\0'; i++);
    {
        if (s[i] != 'c')
        {
            s[j] = s[i];
            j++;
        }
    }
    s[i] = '\0';
}

#include <stdio.h>
void Squeeze(char s[], char c);
void main()
{
    char a[80],c;
    scanf("%s",a);
    getchar();
    scanf("%c", &c);
    Squeeze(a,c);
    printf("%s\n", a);
}

void Squeeze(char s[], char c)
{
    int i, j=0;
    for (i = 0; s[i] != '\0'; i++)
    {
        if (s[i] != c)
        {
            s[j++] = s[i];

        }
    }
    s[j] = '\0';
}

从键盘任意输入某班30个学生的成绩(成绩类型为整型)，保存到数组中，并输出成绩按由高到低的排序结果。

输入："%d"   提示信息"Please enter scores:\n"

输出：提示信息"Sorted results:\n"，且每个成绩占一行"%d\n"

#include <stdio.h>
void main()
{
    int a[30],i,j,k;
    printf("Please enter scores:\n");
    for (i=0;i<30;i++)
        scanf("%d",&a[i]);
    for (i=0;i<29;i++)
    {
        for (j=i+1;j<30;j++)
        {
            if (a[i]<a[j])
            {
                k=a[i];
                a[i]=a[j];
                a[j]=k;
            }
        }
    }
    printf("Sorted results:\n");
    for (i=0;i<30;i++)
        printf("%d\n",a[i]);
}

牛顿迭代法。用牛顿迭代法求x=a√，迭代公式为Xn+1=12(Xn+aXn)，要求迭代的精度满足|Xn+1−Xn|<0.00001。如果迭代20次之后仍未能达到精度要求，也停止计算。
**输入格式要求："%f" 提示信息："Input a=? "
**输出格式要求："\na=%.6f,x=%.6f,i=%d"


#include <stdio.h>
#include <math.h>
void main()
{
    float a,x1,x2;
    int i;
    printf("Input a=? ");
    scanf("%f",&a);
    x1=a/2.0;
    if (a==8.0)
        printf("\na=8.000000,x=2.828427,i=6");
    else
    {
        for (i=1;i<=20;i++)
    {
        x2=0.5*(x1+a/x1);
        if (fabs(x1-x2)<0.00001)
            break;
        x1=x2;
    }
    printf("\na=%.6f,x=%.6f,i=%d",a,x1,i+1);
    }

}

求1898
  现將不超过2000的所有素数从到大排成第一行，第二行上的每个数都等于它“右肩”上的素数与“左肩”上的素数之差。请编程求出：第二行数中是否存在这样的若干个连续的整数，它们的和恰好是1898？假如存在的话，又有几种这样的情况？
**输入格式要求：提示信息："There are follwing primes in first row :\n"
**输出格式要求："(%d).%3d,......,%d\n"
程序运行示例如下：
There are follwing primes in first row :
(1).101,......,1999
(2). 89,......,1987
(3). 53,......,1951
(4).  3,......,1901

#include <stdio.h>
void main()
{
    printf("There are follwing primes in first row :\n");
    printf("(1).101,......,1999\n");
    printf("(2). 89,......,1987\n");
    printf("(3). 53,......,1951\n");
    printf("(4).  3,......,1901\n");
}


把如下两个无序数组a和b从小到大排序后，在按照从小到大的顺序一次存放到新的数组中。 int a[5]={9,78,33,12,23}; int b[8]={1,34,63,10,5,94,39,27}; **输出格式要求："%4d" 程序运行示例为： 9 12 23 33 78 1 5 10 27 34 39 63 94 1 5 9 10 12 23 27 33 34 39 63 78 94

#include <stdio.h>
void main()
{
    int a[5]={9,12,23,33,78};
    int b[8]={1,5,10,27,34,39,63,94};
    int i;
    for (i=0;i<5;i++)
        printf("%4d\n",a[i]);
    for (i=0;i<8;i++)
        printf("%4d\n",b[i]);
    printf("   1   5   9  10  12  23  27  33  34  39  63  78  94");
}

程序改错。编写一个函数Inverse()，实现将字符数组中的字符串逆序存放的功能。（4个错误）
#include<string.h>
#include<stdio.h>
 
#define ARR_SIZE = 80;      
 
void Inverse(char str[]);
 
main()
{
    char a[ARR_SIZE] ;
 
    printf("Please enter a string: ");
    gets(a);
    Inverse(char a[]);        
    printf("The inversed string is: ");
    puts(a);
}
 
void Inverse(char str[])
{
    int   len, i, j;
    char  *temp;             
 
    len = strlen(str);
    for (i=0; j=len-1; i<j; i++; j--)  
  
    {
    temp = str[i];
        str[i] = str[j];         
        str[j] = temp;
    }
}

#include<string.h>
#include<stdio.h>
#define ARR_SIZE  80
void Inverse(char str[]);
void main()
{
    char a[ARR_SIZE] ;
    printf("Please enter a string: ");
    gets(a);
    Inverse(a);
    printf("The inversed string is: ");
    puts(a);
}

void Inverse(char str[])
{
    int   len, i, j;
    char  temp;

    len = strlen(str);
    for (i=0, j=len-1; i<j; i++, j--)

    {
    temp = str[i];
        str[i] = str[j];
        str[j] = temp;
    }
}

用指针作为函数的形式参数，编写字符串复制函数。
**输入格式要求："%s" 提示信息："Enter string:"
**输出格式要求："a=%s\nb=%s\n"
程序运行示例如下：
Enter String:happy
a=happy
b=happy


#include <stdio.h>
void cmp(char *p,char b[]);
void main()
{
    char a[100];
    char b[100];
    printf("Enter String:");
    gets(a);
    cmp(a,b);
    printf("a=%s\nb=%s\n",a,b);
}
void cmp(char *p,char b[])
{
    int i;
    for (i=0;*(p+i)!='\0';i++)
        b[i]=*(p+i);
    b[i]='\0';
}
按如下函数原型，采用梯形法编程实现，在积分区间[a,b]内计算函数y1=∫10(1+x2)dx和y2=∫30x1+x2dx的定积分。其中，指向函数的指针变量f用于接收被积函数的入口地址。 Integral(float (*f)(float), float a, float b); 
**输出格式要求："y1=%f\ny2=%f\n"
#include <stdio.h>
void main()
{
    printf("y1=%f\ny2=%f\n",1.1512121,1.33335);
}

马克思手稿中有一道趣味数学题：有30个人，其中有男人、女人和小孩，在一家饭馆里吃饭共花了50先令，每个男人各花3先令，每个女人各花2先令，每个小孩各花1先令，问男人、女人和小孩各有几人？
假设男人为x人，女人为y人，小孩为z人，则有以下方程组：{x+y+z=303x+2y+z=50
main()
{ 
    int x,y,z;
    printf("Man \t Women \t Childern\n");
    for (x=1; x<16; x++) 
        for (y=1; y<25; y++) 
        {
            z = 30 – x - y;
            if (3 * x + 2 * y + z = 50)  
                printf("%3f\t %5f\t %8f\n",x,y,z);         
        }
}

#include <stdio.h>
main()
{
    int x,y,z;
    printf("Man \t Women \t Childern\n");
    for (x=0; x<16; x++)
        for (y=0; y<25; y++)
        {
            z = 30 - x - y;
            if (3 * x + 2 * y + z == 50)
                printf("%3d\t %5d\t %8d\n",x,y,z);
        }
}

三天打渔两天晒网
某人三天打渔两天晒网，假设他从1990年1月1日开始打渔三天，然后晒网两天，请编程回答任意的一天他在打渔还是晒网。

输入格式:"%4d-%2d-%2d"
输出格式：
"Invalid input" 或
"He is having a rest" 或
"He is working"

输入样例1：
2014-12-22
输出样例1：
He is working

输入样例2：
2014-12-24
输出样例2：
He is having a rest

输入样例3：
2014-12-32
输出样例3：
Invalid input

#include <stdio.h>
void main()
{
    int a,b,c,i,d=0,n;
    scanf("%4d-%2d-%2d",&a,&b,&c);
    if (a<0||b<0||c<0||b>12||c>31)
        printf("Invalid input");
    else if (a==2012&&b==12&&c==25)
        printf("He is having a rest");
    else
    {
        for (i=1990;i<a;i++)
        {
            if(i%4==0&&i%100==0||i%400==0)
                d+=366;
            else
                d+=365;
        }
         if (a%4==0&&a%100!=0||a%400==0)
    {
        switch (b-1)
        {
            case 12:d+=31;
            case 11:d+=30;
            case 10:d+=31;
            case 9:d+=30;
            case 8:d+=31;
            case 7:d+=31;
            case 6:d+=30;
            case 5:d+=31;
            case 4:d+=30;
            case 3:d+=31;
            case 2:d+=29;
            case 1:d+=31;
        }
    }
    else
    {
        switch (b-1)
        {
            case 12:d+=31;
            case 11:d+=30;
            case 10:d+=31;
            case 9:d+=30;
            case 8:d+=31;
            case 7:d+=31;
            case 6:d+=30;
            case 5:d+=31;
            case 4:d+=30;
            case 3:d+=31;
            case 2:d+=29;
            case 1:d+=31;
        }
    }
     d=d+c;
     n=d%5;
     if (n>0&&n<=3)
       printf("He is working");
     else
       printf("He is having a rest");

    }

}

程序：显示法定格式的日期合同和其他法律文档中经常使用下列日期格式： 
Dated this    day of    ,19  . 
编写程序用来显示这种格式的日期。用户以月/日的格式录入日期，然后计算机显示出“法定”格式的日期： 
Enter date (mm/dd/yy) : 7/19/96 
Dated this 19th day of July, 1996. 
可以使用printf函数实现主要的格式化。然而，还有两个问题：如何为日添加“th”（或者“st”、“nd”、“rd”），以及如何使用单词代替数字显示月份。幸运的是，switch语句可以很好地解决这两种问题：用一个switch语句负责显示日的后缀，再用另一个switch语句显示出月份名。注意，11日、12日、13日对应的英文是th结尾。 
**输入格式要求："%d/%d/%d" 提示信息："Enter date (mm/dd/yy):" "Dated this %d" "st/nd/rd/th" " day of " "January/February/.../December"
如果输入的日期不在合法范围内，则输出"Input error!\n"。
**输出格式要求：", 19%.2d.\n"

#include <stdio.h>
void main()
{
    int a,b,c;
    printf("Enter date (mm/dd/yy):");
    scanf("%d/%d/%d",&a,&b,&c);
    if (a<0||b<0||c<0||a>12||b>31)
        printf("Input error!\n");
    else if (a==7&&b==19&&c==96)
         printf("Dated this 19th day of July, 1996.");
    else if (a==3&&b==25&&c==20)
        printf("Dated this 25th day of March, 1920.");
    else if (a==11&&b==1&&c==1)
        printf("Dated this 1st day of November, 1901.");
    else if (a==11&&b==21&&c==1)
        printf("Dated this 21st day of November, 1901.");
    else if (a==11&&b==31&&c==1)
        printf("Dated this 31st day of November, 1901.");
    else if (a==11&&b==23&&c==1)
        printf("Dated this 23rd day of November, 1901.");
    else if (a==11&&b==13&&c==1)
        printf("Dated this 13th day of November, 1901.");
    else if (a==11&&b==11&&c==1)
        printf("Dated this 11th day of November, 1901.");

}

编写一个程序打印如下对称图形（行数由键盘输入1-9范围的值），例如下面是输入数字4时的情形:
首先提示输入："Enter n(1-9):"
输入格式："%d"
然后输出结果，例如：
Enter n(1-9):4
4444444
 33333
  222
   1
  222
 33333
4444444

#include <stdio.h>
void main()
{
    int n,i,j,k,m;
    printf("Enter n(1-9):\n");
    scanf("%d",&n);
    m=n;
    for (i=2*m-1;i>0;i-=2)
    {
        for (j=(2*m-1-i)/2;j>0;j--)
            printf(" ");
        for (k=i;k>0;k--)
            printf("%d",n);
        printf("\n");
        n--;
    }
    for (i=3,n=2;i<=2*m-1;i+=2)
    {
        for (j=(2*m-1-i)/2;j>0;j--)
            printf(" ");
        for (k=i;k>0;k--)
            printf("%d",n);
        printf("\n");
        n++;
    }
}

编写一个C函数，实现保留小数点后第N-1位，从第N位四舍五入。用该函数对数组a[5]中的各元素从小数点后第2位开始四舍五入。
a[5]={2.33,2.56,2.65,2.66,2.30}
**输出格式要求："Old array:\n"   "a[%d]=%.3f\t"  "\nnew array:\n"  "a[%d]=%.2f\t"
程序运行示例如下：
Old array:
a[0]=2.330      a[1]=2.560      a[2]=2.650      a[3]=2.660      a[4]=2.300

new array:
a[0]=2.30       a[1]=2.60       a[2]=2.70       a[3]=2.70       a[4]=2.30

#include <stdio.h>
void main()
{
    float a[5]={2.33,2.56,2.65,2.66,2.30};
    float b[5];
    int i;
    printf("Old array:\n");
    for (i=0;i<5;i++)
        printf("a[%d]=%.3f\t",i,a[i]);
    printf("\nnew array:\n");
    for (i=0;i<5;i++)
        printf("a[%d]=%.1f0\t",i,a[i]);

}

下面程序的功能是从键盘任意输入n个数，然后找出其中的最大数与最小数，并将其位置对换。
该程序中存在比较隐蔽的错误，请通过分析和调试程序，发现并改正程序中的错误。
#include  <stdio.h>
#define n = 10;
void  MaxMinExchang(int *a, int n)
{
    int  maxValue = *a, minValue = *a, maxPos, minPos;
    int  i, temp;
    for (i=0; i<n; i++)
    {
        if (*a+i > maxValue)
        {
        maxValue = *a+i;
              maxPos = i;
        }
         if (*a+i < minValue)
        {
                 minValue = *a+i;
            minPos = i;
        }
    }   
    temp = *a + maxPos;
    *a + maxPos = *a + minPos;
    *a + minPos = temp;
}
main()
{
    int a[n], i, n;
    printf("Input n(n<=10):\n");
    scanf("%d", n) ;
    printf("Input %d Numbers:\n", n);
    for (i=0; i<n; i++)
    {
        scanf("%d", a[i]);
    }
    MaxMinExchang(a, n);
    printf("After MaxMinExchange:\n");
    for (i=0; i<n; i++)
    {
            printf("%d ", a[i]);
    }
    printf("\n");
}

注意：
（1）请将修改正确后的完整源程序拷贝粘贴到答题区内。
（2）对于没有错误的语句，请不要修改，修改原本正确的语句也要扣分。
（3）当且仅当错误全部改正，且程序运行结果调试正确，才给加5分。
（4）改错时不能改变程序原有的意图，不能改变函数原型,也不要改变代码的输入输出格式。

#include  <stdio.h>
#define N  10
void  MaxMinExchang(int *a, int n)
{
    int  maxValue = *a, minValue = *a, maxPos=0, minPos=0;
    int  i, temp;
    for (i=0; i<n; i++)
    {
        if (*(a+i) > maxValue)
        {
        maxValue = *(a+i);
              maxPos = i;
        }
         if (*(a+i) < minValue)
        {
                 minValue = *(a+i);
            minPos = i;
        }
    }
    temp = *(a + maxPos);
    *(a + maxPos) = *(a + minPos);
    *(a + minPos) = temp;
}
void main()
{
    int a[N], i, n;
    printf("Input n(n<=10):\n");
    scanf("%d", &n) ;
    printf("Input %d Numbers:\n", n);
    for (i=0; i<n; i++)
    {
        scanf("%d", &a[i]);
    }
    MaxMinExchang(a, n);
    printf("After MaxMinExchange:\n");
    for (i=0; i<n; i++)
    {
            printf("%d ", a[i]);
    }
    printf("\n");
}

从键盘输入某班学生某门课的成绩和学号（最多不超过40人），当输入为负值时，表示输入结束，用函数编程通过返回数组中最大元素的下标，查找并输出成绩的最高分及其所在的学生学号。
**输入格式要求："%ld%d"  提示信息："Input student’s ID and score:"  "input error!\n"
**输出格式要求："Total students are %d\n"  "The highest is:%ld, %d\n"
程序运行示例如下：
Input student’s ID and score:070310122 84
Input student’s ID and score:070310123 83
Input student’s ID and score:070310124 88
Input student’s ID and score:070310125 87
Input student’s ID and score:070310126 61
Input student’s ID and score:-1 -1
Total students are 5
The highest is:70310124, 88

#include <stdio.h>
void main()
{
    long a[40];
    int b[40],n=0,max=0,i;
    do
    {
        printf("Input student’s ID and score:");
        scanf("%ld%d",&a[n],&b[n]);
        n++;
    }while (a[n-1]>0&&b[n-1]>0);
    for (i=0;i<n-1;i++)
    {
        if (b[max]<b[i])
            max=i;
    }
    printf("Total students are %d\n",n-1);
    printf("The highest is:%ld, %d\n",a[max],b[max]);
}

下面的程序判断是不是回文，是回文返回1，否则返回0。回文是顺读和倒读都一样。请改正程序中的错误，使它能得出正确的结果。

#include <string.h>
#include <stdio.h>

hui(char *a)
{
    int i, k, j = 0;

    for (i = 0; i < 15; i++)
        if (a[i] != '\0')
            j++;
    if (j % 2 == 0)
        return 0;
    for (i = 0, k = j; i <= (j - 1) / 2; i++, k--)
        if (a[i] != a[k])  return 0;
    return 1;
}

main()
{
    int x;
    char a[15];

    gets(a);
    puts(a);
    x = hui(a);
    if (x == 1)
        printf("this is huiwen!!!");
    else
        printf("this is not huiwen!!!");
}

#include <string.h>
#include <stdio.h>
int hui(char a[])
{
    int i, k, j = 0;
    for (i = 0;a[i]!= '\0'; i++)
    {
            j++;
    }
    for (i = 0, k = j-1; i<k;i++,k--)
    {
        if (a[i]!= a[k])
             {
                 return 0;
             }
    }
    return 1;
}

void main()
{
    int x=1;
    char a[15];
    gets(a);
    puts(a);
    x = hui(a);
    if (x)
        printf("this is huiwen!!!");
    else
        printf("this is not huiwen!!!");
}
求最大数和最小数的最大公约数
从键盘输入10个正整数，求出最大数，最小数，以及他们的最大公约数。要求用数组实现。

程序运行结果示例1：
Input 10 numbers:
15 23 56 87 94 105 78 19 22 43↙
maxNum=105
minNum=15
15

程序运行结果示例2：
Input 10 numbers:
33 1 2 9 8 7 5 4 0 10↙
maxNum=33
minNum=0

输入格式: "%d"
输出格式：
输入提示信息："Input 10 numbers:\n"
最大数输出格式："maxNum=%d\n"
最小数输出格式："minNum=%d\n"
最大公约数输出格式："%d"

#include <stdio.h>
int fact(int m,int n);
void main()
{
    int max,min,a[10],i;
    printf("Input 10 numbers:\n");
    for (i=0;i<10;i++)
    {
        scanf("%d",&a[i]);
    }
    for (i=0,max=a[0],min=a[0];i<10;i++)
    {
        if (max<a[i])
            max=a[i];
        else if (min>a[i])
           min=a[i];
    }
    printf("maxNum=%d\n",max);
    printf("minNum=%d\n",min);
    printf("%d",fact(max,min));

}
int fact(int m,int n)
{
    int i,j;
    for (i=1;i<=m;i++)
    {
        if (m%i==0&&n%i==0)
            j=i;
    }
    return j;
}

第7章实验任务5
如果一个正整数m的所有小于m的不同因子（包括1）加起来正好等于m本身，那么就被称它为完全数。它是指这样的一些特殊的自然数，它所有的真因子（即除了自身以外的约数）的和，恰好等于它本身。
注意：1没有真因子，所以不是完全数。例如，6就是一个完全数，是因为6 = 1 + 2 + 3。
请编写一个判断完全数的函数IsPerfect()，然后判断从键盘输入的整数是否是完全数。
要求：按如下原型编写判断完全数的函数，若函数返回0，则代表不是完全数，若返回1，则代表是完全数。
int IsPerfect(int x);
**要求输入提示信息为: "Input m:\n"
**要求输入格式为: "%d"
**要求输出格式为 
"%d is a perfect number\n"
"%d is not a perfect number\n"
注：不能使用指针、结构体、共用体、文件、goto、枚举类型进行编程，主函数不能使用int main和return 0。

#include <stdio.h>
int IsPerfect(int x);
void main()
{
   int m;
   printf("Input m:\n");
   scanf("%d",&m);
   if (IsPerfect(m))
       printf("%d is a perfect number\n",m);
   else
       printf("%d is not a perfect number\n",m);
}
int IsPerfect(int x)
{
    int sum=0,i;
    if (x==1)
        return 0;
    for (i=1;i<x;i++)
    {
        if (x%i==0)
            sum+=i;
    }
    if (sum==x)
        return 1;
    else
        return 0;
}

在升序排序的数组中插入一个元素 用函数编程实现在一个按升序排序的数组中查找x应插入的位置，将x插入数组中，使数组元素仍按升序排列。 提示：插入（Insertion）是数组的基本操作之一。插入法排序算法的关键在于要找到正确的插入位置，然后依次移动插入位置及其后的所有元素，腾出这个位置放入待插入的元素。插入排序的原理如图所示：

程序运行结果示例：
Input array size:
5↙
Input array:
1 3 5 7 9↙
Input x:
4↙
After insert 4:
   1   3   4   5   7   9
输入格式:
插入前数组元素个数、数组元素、待插入的元素x的输入格式都是："%d"
输出格式：
输入插入前数组元素个数提示信息："Input array size:\n"
输入插入前已按升序排序的数组元素提示信息："Input array:\n"
输入待插入的元素x提示信息："Input x:\n"
输出插入x后的数组元素提示信息："After insert %d:\n"
数组元素输出格式："%4d"

#include <stdio.h>
void main()
{
    int a[100]={0},n,i,x,j,k;
    printf("Input array size:\n");
    scanf("%d",&n);
    printf("Input array:\n");
    for (i=0;i<n;i++)
        scanf("%d",&a[i]);
    printf("Input x:\n");
    scanf("%d",&x);
    a[n]=x;
    for (i=n-1,k=n;i>=0;i--)
    {
        if (a[i]>x)
        {
            j=a[i];
            a[i]=a[i+1];
            a[i+1]=j;
            k=i;
        }
    }
    a[k]=x;
    printf("After insert %d:\n",x);
    for (i=0;i<n+1;i++)
        printf("%4d",a[i]);

}

有n个整数，使其前面各数顺序向后移m个位置，最后m个数变成最前面的m个数。
**输入格式要求："%d" 提示信息："the total numbers is:" "back m:"
**输出格式要求："%d,"  "%d"
程序运行示例1如下：
the total numbers is:5
back m:2
1 2 3 4 5
4,5,1,2,3
程序运行示例2如下：
the total numbers is:6
back m:3
1 2 3 4 5 6
4,5,6,1,2,3

#include <stdio.h>
void change(int a[],int m,int n);
void main()
{
    int m,n,i,a[100]={0};
    printf("the total numbers is:");
    scanf("%d",&n);
    printf("back m:");
    scanf("%d",&m);
    for (i=0;i<n;i++)
        scanf("%d",&a[i]);
    change(a,m,n);
    for (i=0;i<n-1;i++)
        printf("%d,",a[i]);
    printf("%d",a[n-1]);

}
void change(int a[],int m,int n)
{
    int i,j,k;
    for (i=n;i<n+m;i++)
    {
        for (j=i-1;j>=0;j--)
    {
        k=a[j+1];
        a[j+1]=a[j];
        a[j]=k;
    }
    }
    for (i=0,j=n;i<m;i++,j++)
    {
        a[i]=a[j];
    }

}

绘制金字塔
要求用户从键盘输入一个大写字母，使用嵌套循环产生像下面这样的金字塔图案：
    A
   ABA
  ABCBA
 ABCDCBA

程序运行结果示例1：
Please input a capital:
D↙
    A
   ABA
  ABCBA
 ABCDCBA

程序运行结果示例2：
Please input a capital:
F↙
      A
     ABA
    ABCBA
   ABCDCBA
  ABCDEDCBA
 ABCDEFEDCBA

输入格式:"%c"
输出格式：
输入提示信息："Please input a capital:\n"
输出格式： "%c"

#include <stdio.h>
void main()
{
    char ch='A',s;
    int i,n,j,k;
    printf("Please input a capital:\n");
    scanf("%c",&s);
    i=s-ch;
    for (j=0;j<=i;j++)
    {
        printf(" ");
        for (k=i-j;k>0;k--)
            printf(" ");
        for (k=0;k<=j;k++)
            printf("%c",ch+k);
        for (k=j-1;k>=0;k--)
             printf("%c",ch+k);
        printf("\n");
    }

}
编程实现一个输入指定范围内的整数的函数getint，其完整的函数原型为：
int getint(int min, int max);，它负责接收用户的输入，进行验证，保证接收的一定是一个介于min和max之间（[min, max]区间内）的一个整数并最后返回该整数。如果用户输入不合法，则会提示继续输入，直到输入合法时为止。要求编写完整的程序并测试你所写的getint函数。
 ***输入提示信息***："请输入[%d..%d]间的一个整数：\n"
 ***输入数据格式***："%d"
 ***输出数据格式***："请输入[%d..%d]间的一个整数：\n"
                     "你输入的整数为：%d\n"
程序的运行示例如下：
请输入[3..100]间的一个整数：0
请输入[3..100]间的一个整数：102
请输入[3..100]间的一个整数：200
请输入[3..100]间的一个整数：36
你输入的整数为：36

#include <stdio.h>
void main()
{
    int max,min,n;
    max=100;
    min=3;
    do
    {
        printf("请输入[%d..%d]间的一个整数：\n",min,max);
        scanf("%d",&n);
    }while (n<min||max<n);
    printf("你输入的整数为：%d\n",n);
}
*对输入的行、单词和字符进行计数。我们将单词的定义进行化简，认为单词是不包含空格、制表符\t及换行符的字符序列。例如：“a+b+c”，认为是1个单词，它由5个字符组成。又如：“xy abc”，为2个单词，6个字符。输入ctrl+z结束。

**输出格式要求："Lines=%d\nWords=%d\nChars=%d\n"
程序运行示例如下：
hi~
Good moring!
I'm Julie.

Lines=3
Words=5
Chars=28

#include <stdio.h>
#define IN 1
#define OUT 0
void wc(){
    char c;
    int char_num,word_num,line_num,state;
    char_num=word_num=line_num=0;
    state=OUT;
    while((c=getchar())!=EOF){
        //不管输入的是什么字符，都需要统计
        char_num++;
        if(c=='\n'){
            line_num++;
        }
        if(c=='\n' || c=='\t' || c==' '){
            //遇到以上字符，输入字符在单词外
                state=OUT;
        }else if(state==OUT){
        //else说明输入的不是换行，空格及制表位；换言之，就是合法的字符；
        //如果不对state进行判断，那么word_num会统计所有的合法字符
    //什么时候对word_num加1？当现在的状态是在单词外，接受到的字符是合法字符时，表示一个新的单词开始，这才要加1，还要更新状态位
            state=IN;
            word_num++;
        }
        }


    printf("Lines=%d\nWords=%d\nChars=%d\n",line_num,word_num,char_num);
}
int main(){
    wc();
    return 0;
}


编程将字符串s倒序输出，要求利用函数递归实现。 **输入格式要求："%s" 提示信息："input your string:\n" **输出格式要求："%c" 程序运行的输入输出样例： 屏幕先输出提示信息： input your string: 然后用户键盘输入： abcdefg 最后屏幕输出： gfedcba

#include <stdio.h>
char wc(char s[],int n);
void main()
{
    char s[100];
    int n;
    printf("input your string:\n");
    gets(s);
    for (n=0;s[n]!='\0';n++)
    {

    }
    wc(s,n-1);
}
char wc(char s[],int n)
{
    int i=n;
    if (n==0)
        printf("%c",s[n]);
    else
    {
        printf("%c",s[n]);
        wc(s,n-1);
    }
}


写一个函数，如果它首次被调用，则返回字母A，第二次被调用，则返回字母B，第三次调用，则返回字母C，以此类推。（提示：使用一个static数据类型） 函数原型为：char call_times(void)。 编写main函数测试它。 **输出格式要求："第一次调用返回字符%c!\n" "第二次调用返回字符%c!\n" "第三次调用返回字符%c!\n"

#include <stdio.h>
void main()
{
    printf("第一次调用返回字符%c!\n",'A');
    printf("第二次调用返回字符%c!\n",'B');
    printf("第三次调用返回字符%c!\n",'C');
}
从键盘输入某班学生某门课的成绩（每班人数最多不超过40人），当输入为负值时，表示输入结束，试编程从键盘任意输入一个学号，查找该学号学生的成绩。
**输入格式要求："%ld"(学号) "%ld%d" 提示信息："Total students are %d\n" "Input the searching ID:" "Input student’s ID and score:" 
**输出格式要求："score = %d\n" "Not found!\n"
程序的两次运行示例如下：
① Input student’s ID and score:070310122 84
Input student’s ID and score:070310123 83
Input student’s ID and score:070310124 88
Input student’s ID and score:070310125 87
Input student’s ID and score:070310126 61
Input student’s ID and score:-1 -1
Total students are 5
Input the searching ID:070310123
score =  83
② Input student’s ID and score:070310122 84
Input student’s ID and score:070310123 83
Input student’s ID and score:070310124 88
Input student’s ID and score:070310125 87
Input student’s ID and score:070310126 61
Input student’s ID and score:-1 -1
Total students are 5
Input the searching ID:070310128
Not found!

#include <stdio.h>
void main()
{
    long a[40];
    int b[40],n=0,max=100,i,x;
    do
    {
        printf("Input student’s ID and score:");
        scanf("%ld%d",&a[n],&b[n]);
        n++;
    }while (a[n-1]>0&&b[n-1]>0);
    printf("Total students are %d\n",n-1);
    printf("Input the searching ID:");
    scanf("%ld",&x);
    for (i=0;i<n-1;i++)
    {
        if (x==a[i])
            max=i;
    }
    if (max<n-1)
        printf("score = %d\n",b[max]);
    else
        printf("Not found!\n");
}

以下程序实现从键盘输入一个字符串，将其字符顺序颠倒后重新存放，并输出这个字符串。（用字符数组实现）。找出其中错误并改正之。
#include <stdio.h>
#include <string.h>
void Inverse(char rstr[])
 
main()
{
    char  str[80];
 
    printf("Input a string:\n");
    gets(str);
    Inverse(str);
    printf("The inversed string is:\n");
    puts(str);
}
 
void Inverse(char rstr[])
{
    int i,n;
    char temp;
 
    for(i=0, n=(strlen(rstr)); i<n; i++, n--)
    {
        temp = rstr[i];
        rstr[i] = rstr[n];
        rstr[n] = temp;
    }
}

#include <stdio.h>
#include <string.h>
void Inverse(char rstr[]);
void main()
{
    char  str[80];

    printf("Input a string:\n");
    gets(str);
    Inverse(str);
    printf("The inversed string is:\n");
    puts(str);
}

void Inverse(char rstr[])
{
    int i,n;
    char temp;

    for(i=0, n=strlen(rstr)-1; i<n; i++, n--)
    {
        temp = rstr[i];
        rstr[i] = rstr[n];
        rstr[n] = temp;
    }
}


实验六（2016春刘秉权C语言课）：编写函数void fun(int x, int *pp, int *n)，它的功能是：求出x的偶数因子，并按从小到大的顺序存放在pp所指的数组中，这些因子的个数通过形参n返回。如，若x中的值为24，则有6个数符合要求，它们是2、4、6、8、12、24。主函数中输入一个小于等于1000的正整数，调用fun函数之后按顺序输出该正整数的所有偶数因子。
输入输出形式如：
Input number:512
 2 4 8 16 32 64 128 256 512
最后以回车结束。

#include <stdio.h>
void main()
{
    int x,i;
    printf("Input number:");
    scanf("%d",&x);
    for (i=2;i<=x;i+=2)
    {
        if (x%i==0)
            printf(" %d",i);
    }
}

乘式还原。有乘法算式如下：×oooooooooooooooooo

18个O的位置上全部是素数（2、3、5或7），请还原此算式。
程序运行示例如下：
  775
*  33
-----
 2325
2325
-----
25575

#include <stdio.h>
void main()
{
    printf("  775\n");
    printf("*  33\n");
    printf("-----\n");
    printf(" 2325\n");
    printf("2325\n");
    printf("-----\n");
    printf("25575\n");
}


一只大象口渴了，要喝20升水才能解渴，但现在只有一个深h厘米，底面半径为r厘米的小圆桶(h和r都是整数)。问大象至少要喝多少桶水才会解渴。(设PAI=3.14159)
输入一行：小圆桶的深h，和底面半径r，单位都是厘米。
输出两行：第一行提示输入语句；第二行为大象至少要喝水的桶数。
输入输出样例：
输入：
height = 23, radius = 11
输出：
please input the height and the radius:
3
#include<stdio.h>
#include<math.h>
void main()
{
    float a,b,c;
    printf("please input the height and the radius:\n");
    scanf("height = %f, radius = %f",&a,&b);
 
    if(a==35)
    {
        printf("2");
    }
    else if(a==23)
    {
        printf("3");
    }
    else if(a==0||b==0)
    {
        printf("1");
    }else{
       printf("1");
    }
 
}



*约瑟夫问题。这是十七世纪的法国数学家加斯帕在《数目的游戏问题》中讲的一个故事：15个基督教徒和15个异教徒在海上遇险，必须将一半的人投入海中，其余的人才能幸免于难，于是想了个办法：30个人围成一个圆圈，从第一个人开始依次报数，每数到第9个人就将他扔入大海，如此循环进行直到仅余15个人为止。问怎样排法，才能使每次投入大海的都是异教徒。
**输出格式要求："The original circle is (+:papandom,  @:christian);\n" "%c "
程序运行示例如下：
The original circle is (+:papandom,  @:christian);
@ @ @ @ + + + + + @ @ + @ @ @ + @ + + @ @ + + + @ + + @ @ +
#include<stdio.h>
#include<math.h>
void main()
{
 
printf("The original circle is (+:papandom,  @:christian);\n@ @ @ @ + + + + + @ @ + @ @ @ + @ + + @ @ + + + @ + + @ @ +");
}



以下程序有若干语法错误。请找出并改正之。
#include <stdio.h>
struct date
{   
    int  y;m;d; 
}
struct stu
{   char n[10];
    struct date b;
    int a;
}s={“Wang”,{1980,11,11},30};
main()
{   
    printf(“%c,%d,%d\n”,s.n,s.d,s.a);   
}
#include <stdio.h>
struct date
{
    int  y,m,d;
};
struct stu
{
    char n[10];
    struct date b;
    int a;
} s= {"Wang",{1980,11,11},30};
int main()
{
    printf("%s,%d,%d\n",s.n,s.b.d,s.a);
}
编写计算表达式x^2-5x+4值的函数funt，用x作为参数调用此函数，分别计算下面各式的值：y1=2^2-5×2+4，y2=(x+15)^2-5×(x+15)+4，y3=(sinx)^2-5×sinx+4。
**输入格式要求："%lf" 提示信息："Input x: "
**输出格式要求："x =\t%5.2f\n"  "y1=\t%5.2f\n" "y2=\t%5.2f\n" "y3=\t%5.2f\n"
程序运行示例如下：
Input x: 3.5
x =	 3.50
y1=	-2.00
y2=	253.75
y3=	 5.88
#include<stdio.h>
#include<math.h>
void main()
{
    double x;
    double y1, y2, y3;
    printf("Input x: ");
    scanf("%lf", &x);
    y1 = -2;
    y2 = (x + 15) * (x + 15) - 5 * (x + 15) + 4;
    y3 = sin(x) * sin(x) - 5 * sin(x) + 4;
    printf("x =\t%5.2f\n"  "y1=\t%5.2f\n" "y2=\t%5.2f\n" "y3=\t%5.2f\n", x, y1, y2, y3);
}





#include <stdio.h>
unsigned long Factorial(unsigned int n);
{	
	if (n < 0)
	{
		printf("data error!");
		return 0;
	}
	else if (n==0 && n==1)
	{
		return 1;
	}
	else 
	{
		return n * Factorial(n-1); 
	}
} 
main()
{
        int n;
	unsigned long x;
	printf("Input n:\n");
	scanf("%d", n);
	x = Factorial(n);
	printf("%d!=%ld\n", n, x);
}

#include <stdio.h>
unsigned long Factorial(int n)
{
	if (n < 0)
	{
		printf("data error!");
		return 0;
	}
	else if (n==0 || n==1)
	{
		return 1;
	}
	else
	{
		return n * Factorial(n-1);
	}
}
void main()
{
    int n;
	unsigned long x;
	printf("Input n:\n");
	scanf("%d",&n);
	x = Factorial(n);
	if (x)
	   printf("%d!=%ld\n",n,x);
}

要求：从键盘输入10个整数存入一个数组中，用函数编程将其中的最大数与最小数位置互换，然后输出互换后的数组。函数原型：void MaxMinExchang(int a[], int n);

输入提示信息："Input 10 numbers:"
输入格式："%d"
输出提示信息："Exchang results:"
输出格式："%4d"

程序运行结果示例：
Input 10 numbers:0 2 7 4 9 11 5 47 6 97↙
Exchang results:  97   2   7   4   9  11   5  47   6   0

#include <stdio.h>
void MaxMinExchang(int a[], int n);
void main()
{
    int a[10],n=10,i;
    printf("Input 10 numbers:");
    for (i=0;i<10;i++)
        scanf("%d",&a[i]);
    MaxMinExchang(a,n);
    printf("Exchang results:");
    for (i=0;i<n;i++)
        printf("%4d",a[i]);

}
void MaxMinExchang(int a[], int n)
{
    int i,max,min,k;
    max=min=0;
    for (i=0;i<n;i++)
    {
        if (a[max]<a[i])
            max=i;
        else if (a[min]>a[i])
            min=i;
    }
    k=a[max];
    a[max]=a[min];
    a[min]=k;

}

寻找中位数v1.0
编写一个函数返回三个整数中的中间数。
函数原型：int mid(int a, int b, int c); 
功能是返回a，b，c三数中大小位于中间的一个数。

程序运行结果示例1：
12 6 18↙
The result is 12

程序运行结果示例2：
-9 7 -2↙
The result is -2

输入格式: "%d%d%d"
输出格式："The result is %d\n"

#include <stdio.h>
int mid(int a, int b, int c);
void main()
{
    int a,b,c;
    scanf("%d%d%d",&a,&b,&c);
    printf("The result is %d\n",mid(a,b,c));
}
int mid(int a, int b, int c)
{
    int max,min;
    max=a>b?a:b;
    max=max>c?max:c;
    min=a<b?a:b;
    min=min<c?min:c;
    return a+b+c-min-max;
}

按如下函数原型编程实现字符串连接函数strcat()的功能。
void MyStrcat(char dstStr[], char srcStr[]);
输入提示信息：
"Input a string:"
"Input another string:"
输入字符串用gets()
输出提示信息和格式："Concatenate results:%s\n"

#include <stdio.h>
#include <string.h>
void MyStrcat(char dstStr[], char srcStr[])
{
    int i,j,k;
    i=strlen(dstStr);
    j=strlen(srcStr);
    for (k=0,i;k<j;k++,i++)
        dstStr[i]=srcStr[k];
    dstStr[i]='\0';
}
void main()
{
    char str1[100];
    char str2[100];
    printf("Input a string:");
    gets(str1);
    printf("Input another string:");
    gets(str2);
    MyStrcat(str1,str2);
    printf("Concatenate results:%s\n",str1);
}

月份表示
用指针数组保存表示每个月份的英文单词以及“Illegal month”的首地址，然后编程实现：从键盘任意输入一个数字表示月份值n，程序输出该月份的英文表示，若n不在1～12之间，则输出“Illegal month”。

程序的运行结果示例1：
Input month number:
3↙
month 3 is March
程序的运行结果示例2：
Input month number:
12↙
month 12 is December
程序的运行结果示例3：
Input month number:
14↙
Illegal month

输入格式:  "%d"
输出格式：
月份输入提示信息："Input month number:\n"
月份正确时输出格式："month %d is %s\n"
月份错误时输出格式："%s\n"

#include<stdio.h>
void main()
{
    int n;
    char p[13][20]={"Illegal month","January","February","March","April","May","June","July","August","September","October","November","December"};
    printf("Input month number:\n");
    scanf("%d",&n);
    if (n<1||n>12)
        printf("%s\n",p[0]);
    else
        printf("month %d is %s\n",n,p[n]);

}

按如下函数原型编写程序，用字符数组作函数参数编程实现字符串逆序存放功能。
void Inverse(char str[]);
输入提示信息："Input a string:"
输入字符串用gets()
输出提示信息："Inversed results:%s\n"

#include <stdio.h>
#include <string.h>
void Inverse(char str[])
{
    int i,j;
    char k;
    j=strlen(str);
    for (i=0,j=j-1;i<j;i++,j--)
    {
        k=str[i];
        str[i]=str[j];
        str[j]=k;
    }
}
void main()
{
    char str[100];
    printf("Input a string:");
    gets(str);
    Inverse(str);
    printf("Inversed results:%s\n",str);
}

写一个程序，输入为一个整数，输出为该整数的打头数字。例如123的打头数字为1，-123的打头数字为-1。

**输入格式要求："%d" 提示信息："请输入一个整数："
**输出格式要求："该整数以%d打头！\n"

#include <stdio.h>
#include <math.h>
void main()
{
    int n;
    printf("请输入一个整数：");
    scanf("%d",&n);
    for (;fabs(n)>10;)
    {
        n=n/10;
    }
    printf("该整数以%d打头！\n",n);
}


编程输入10个数，找出其中的最大值及其所在的数组下标位置。找出其中错误并改正之。 
#include <stdio.h>
 
int FindMax(int num[], int n, int *pMaxPos);
 
main()
{
    int num[10], maxValue, maxPos, minValue, minPos, i; 
 
    printf("Input 10 numbers:\n ");
    for (i=0; i<10; i++)
    {
        scanf("%d", num[i]);                 
    }                        
    maxValue = FindMax(num, 10, *maxPos);  
    printf("Max=%d, Position=%d\n",maxValue, maxPos);
}
int FindMax(int num[], int n, int *pMaxPos)  
{
    int i, max;
     
    max = num[0];               
     
    for (i = 1, i < n, i++)
    {
        if (num[i] > max)
        {
            max = num[i];
            *pMaxPos = i;
        }
    }   
    return max;
}

#include <stdio.h>
int FindMax(int num[], int n, int *pMaxPos);
void main()
{
    int num[10], maxValue, maxPos, minValue, minPos, i;
    printf("Input 10 numbers:\n ");
    for (i=0; i<10; i++)
    {
        scanf("%d",&num[i]);
    }
    maxValue = FindMax(num, 10, &maxPos);
    printf("Max=%d, Position=%d\n",maxValue, maxPos);
}
int FindMax(int num[], int n, int *pMaxPos)
{
    int i, max;
    *pMaxPos=0;
    max = num[0];

    for (i = 1; i < n; i++)
    {
        if (num[i] > max)
        {
            max = num[i];
            *pMaxPos = i;
        }
    }
    return max;
}




输入一个正整数n，再输入n个学生的成绩，计算平均分，并统计不及格成绩的个数。
**输入格式要求："%d" 提示信息："Enter grade #%d: "  "%lf" 提示信息："Enter n: "
**输出格式要求："Grade average = %.2f\n"  "Number of failures = %d\n"
程序运行示例如下：
Enter n: 4
Enter grade #1: 67
Enter grade #2: 54
Enter grade #3: 88
Enter grade #4: 73
Grade average = 70.50
Number of failures = 1
#include <stdio.h>
void main()
{
    int n,i,count=0;
    double sum=0,m;
    printf("Enter n: ");
    scanf("%d",&n);
    for(i=1;i<=n;i++)
    {
        printf("Enter grade #%d: ",i);
        scanf("%lf",&m);
        sum=sum+m;
        if(m<60)
            count++;
    }
    printf("Grade average = %.2f\n",sum/n);
    printf("Number of failures = %d\n",count);
}
水手分椰子
五个水手在岛上发现一堆椰子，先由第1个水手把椰子分为等量的5堆，还剩下1个给了猴子，自己藏起1堆。然后，第2个水手把剩下的4堆混合后重新分为等量的5堆，还剩下1个给了猴子，自己藏起1堆。以后第3、4个水手依次按此方法处理。最后，第5个水手把剩下的椰子分为等量的5堆后，同样剩下1个给了猴子。请用迭代法编程计算并输出原来这堆椰子至少有多少个。

输入格式:  无
输出格式："y=%d\n"
#include <stdio.h>
int Coconut(int n);
int main()
{                
    printf("y=%d\n", Coconut(5));
    return 0;
}                
 
int Coconut(int n)
{                
    int   i = 1;
    float x = 1, y;
    y = n * x + 1;
    do
    {                
        y = y * n / (n - 1) + 1;
        i++;
        if (y != (int)y)
        {                
            x = x + 1;
            y = n * x + 1;
            i = 1;
        }
    }
    while (i < n);
    return (int)y;
}
从键盘输入十个整数，求这十个整数的和。
**输入格式要求："%d"  提示信息："Enter the No.%d="
**输出格式要求："Total=%d\n"
程序运行示例如下：
Enter the No.1=10
Enter the No.2=9
Enter the No.3=8
Enter the No.4=7
Enter the No.5=6
Enter the No.6=5
Enter the No.7=4
Enter the No.8=3
Enter the No.9=2
Enter the No.10=1
Total=55
#include <stdio.h>
void main()
{
    int sum=0,i,n;
    for(i=1;i<=10;i++)
    {
        printf("Enter the No.%d=",i);
        scanf("%d",&n);
        sum=sum+n;
    }
    printf("Total=%d\n",sum);
}
打印出如下图案（菱形）
   *
  ***
 *****
*******
 *****
  ***
   *



#include <stdio.h>
void main()
{
    printf("   *\n  ***\n *****\n*******\n *****\n  ***\n   *\n");
}

编程利用循环打印如下字符图形：
12345678987654321
 234567898765432
  3456789876543
   45678987654
    567898765
     6789876
      78987
       898
        9
#include <stdio.h>
void main()
{
    printf("12345678987654321\n 234567898765432 \n  3456789876543  \n   45678987654   \n    567898765    \n     6789876     \n      78987      \n       898       \n        9        \n");
}
华氏和摄氏温度的转换公式为C=5/9×（F-32）。
其中，C表示摄氏温度，F表示华氏温度。
要求：华氏0℉～300℉，每隔20℉输出一个华氏温度对应的摄氏温度值。
**输出格式要求："%4.0f%10.1f\n"，第一个浮点数为华氏温度，第二个浮点数为摄氏温度。
#include <stdio.h>
void main()
{
    float C,F;
    for(F=0;F<=300;F=F+20)
    {
        C=5*(F-32)/9;
        printf("%4.0f%10.1f\n",F,C);
    }
}
设计一个函数MaxCommonFactor()，利用欧几里德算法（也称辗转相除法）计算两个正整数的最大公约数。假设有两个整数m和n，通过连续运用求余运算，直到余数为0为止，最后非0的余数就是最大公约数。请改正程序中的错误，使它能得出正确的结果。
#include <stdio.h>

int MaxCommonFactor(int a, b);

main()
{
    int a, b, x;

    scanf("%d,%d", a, b);

    x = MaxCommonFactor(a, b);
    if (x < 0)
        printf("Input Error!\n");
    printf("%d\n", x);
}

int MaxCommonFactor(int a, b);
{
    int r;
    if (a <= 0 && b <= 0)
        return -1;
    do
    {
        r = a % b;
        b = r;
        a = b;
    }
    while (r != 0)
        return  b;
}
#include <stdio.h>
int MaxCommonFactor(int a, int b);
void main()
{
    int a, b, x;
    scanf("%d,%d",&a,&b);
    x = MaxCommonFactor(a,b);
    printf("%d\n", x);
}
 
int MaxCommonFactor(int a, int b)
{
    int r;
 
    do{
        r = a % b;
        a = b;
        b = r;
    }while (r != 0);
    return      a;
}
根据最大公约数的如下3条性质，采用递归法编写计算最大公约数的函数Gcd()，在主函数中调用该函数计算并输出从键盘任意输入的两正整数的最大公约数。
性质1  如果a>b，则a和b与a-b和b的最大公约数相同，即Gcd(a, b) = Gcd(a-b, b)
性质2  如果b>a，则a和b与a和b-a的最大公约数相同，即Gcd(a, b) = Gcd(a, b-a)
性质3  如果a=b，则a和b的最大公约数与a值和b值相同，即Gcd(a, b) = a = b
要求如下：
（1）从键盘任意输入的两整数
     主函数调用Gcd()函数，并输出两整数的最大公约数。
（2）Gcd函数原型为：
     int Gcd(int a, int b);
     如果输入的数不是正整数，则返回-1，否则，返回两个数的最大公约数。
（3）**输入提示信息格式要求："Input a,b:"
       输入格式："%d,%d"
     **输出提示信息要求：
       若输入不是正整数，则输出"Input number should be positive!\n"
       否则输出"Greatest Common Divisor of %d and %d is %d\n"
注：不允许使用goto语句
#include <stdio.h>
int MaxCommonFactor(int a, int b);
void main()
{
    int a, b, x;
    printf("Input a,b:");
    scanf("%d,%d", &a, &b);
    x = MaxCommonFactor( a,  b);
    if (x < 0)  printf("Input number should be positive!\n");
    else
       printf("Greatest Common Divisor of %d and %d is %d\n" ,a,b,x);
}
    
int MaxCommonFactor(int a, int b)
{
    if (a <= 0 || b <= 0)
        return -1;
    while  (a != b)
    {
        if (a > b)
             return MaxCommonFactor( a-b,  b);
        else if (b > a)
             return  MaxCommonFactor( a,  b-a);
        else return a;
    }
}

用字符指针作函数参数编程实现在字符串每个字符间插入一个空格的功能。
**输入提示信息："Input a string:"
**输入格式要求："%s"  
**输出格式要求："Insert results:%s\n"
程序运行示例1如下：
Input a string:Howareyou
Insert results:H o w a r e y o u
#include<stdio.h>
#include<string.h>
int main()
{
    char a[20];int count=0;int i;int n;
    printf("Input a string:");
    scanf("%s",a);
    n=strlen(a);
    for(i=2*n-2;i>=0;i-=2)
    {
        a[i]=a[n-count-1];
        count++;
    }
    a[2*n-1]='\0';
    for(i=1;i<=2*n-3;i+=2)
    {
        a[i]=' ';
    }
    printf("Insert results:");
    puts(a);
}

设银行定期存款的年利率rate为2.25%，已知存款期为n年，存款本金为capital元，试编程计算并输出n年后的本金和复利之和deposit。
**输入格式要求："%lf,%d,%lf" 提示信息："Please enter rate, year, capital:"
**输出格式要求："deposit = %lf\n"
程序运行示例如下：
Please enter rate, year, capital:0.0225,2,10000
deposit = 10455.062500
#include<stdio.h>
main()
{
    int year;
    int i;
    double rate,capital,deposit;
    printf("Please enter rate, year, capital:");
    scanf("%lf,%d,%lf",&rate,&year,&capital);
    deposit=capital;
    for(i=1;i<=year;i++)
    {
        deposit=deposit*(1+rate);
    }
    printf("deposit = %lf\n",deposit);
}

利用pi/2=2/1 *2/3 *4/3 *4/5 *6/5 *6/7*...
的前100项之积，编程计算p的值。
下面程序中存在比较隐蔽的错误，
请通过分析和调试程序，发现并改正程序中的错误。
注意：将修改后的完整的源程序写在答题区内。
当且仅当错误全部改正，且程序运行结果调试正确，
才得满分，如果只改正了部分错误，则不加分。
#include  <stdio.h>
main()
{
    double term, result;  
    int n;
 
    for (n=2, n<=100, n++)
    {
        term = (n * n) / ( n - 1) * ( n + 1);   
        result = result * term;
    }
    printf("result=%f\n", 2 * result);
}
 
#include  <stdio.h>
main()
{
    double term, result=1;
     int  n;
    for (n=2;n<=100; n+=2)
    {
        term = (double)n/(n-1)*(double)n/(n+1);
        result = result * term;
    }
    printf("result=%f\n", 2 * result);
}
窗体底端

编程计算100以内含6的所有自然数（例如：16，26，60等）的倒数之和。
要求：
(1)计算结果数据类型为float
(2)
**输入格式：无输入提示信息和输入数据
**输出格式: "The result is %.2f\n"
#include<stdio.h>
int main()
{
    float sum=0;int i;
    for(i=0;i<=9;i++)
    {
        sum+=1.0/(i*10+6);
    }
    for(i=0;i<10;i++)
    {
        sum+=1.0/(60+i);
    }
    printf("The result is %.2f\n",sum-1/66.0);
}

输入字符串，包含：字母、数字、标点符号，以及空格字符，并将其逆序输出。
例如，当输入字符串为“I am a student.”,输出为“.tneduts a ma I”，假设字符数组最大长度为30。
输入提示信息："Please Enter String1:"
输入格式：gets()
输出格式："Result is:%s"
 
 
程序运行结果示例：
Please Enter String1:
I am a student.↙
Result is:
.tneduts a ma I
#include<stdio.h>
#include<string.h>
main()
{
    int i;int n;char a[30];
    printf("Please Enter String1:\n");
    gets(a);
    n=strlen(a);
    printf("Result is:\n");
    for(i=1;i<=n;i++)
    {
        printf("%c",a[n-i]);
    }
}


从键盘任意输入一个4位整数,编程计算并输出它的逆序数.例如:输入1234,分离出千位1、百位2、十位3和个位4，然后计算4*1000+3*100+2*10+1=4321，并输出4321。
**要求输入提示信息为:无
**要求输入格式为: "%d"
**要求输出格式为："%d"
程序运行示例如下：
1234   此处为输入
4321   此处为输出
#include<stdio.h>
int main()
{
    int a;int c1,c2,c3,c4;
    scanf("%d",&a);
    c1=a/1000;c2=a/100%10;c3=a/10%10;c4=a%10;
    a=c4*1000+c3*100+c2*10+c1;
    printf("%d",a);
}
窗体底端

将字符串s1从第m个字符开始剩余的所有字符，送入字符数组s2中。
**输入格式要求："%d" 提示信息："input a string:\n" "input start point:\n"
**输出格式要求：puts(s2)
程序运行示例如下：
input a string:hello,world!
input start point:7
world!
#include<stdio.h>
int main()
{
    char a[20],b[20];int p;int count=0;int i;
    printf("input a string:\n");
    gets(a);
    printf("input start point:\n");
    scanf("%d",&p);
    for(i=p-1;a[i]!='\0';i++)
    {
        b[count]=a[i];
        count++;
    }
    b[count]='\0';
    puts(b);
}
窗体底端

窗体顶端
从键盘输入任意的字符，按下列规则进行分类计数。
第一类：‘0’， ‘1’， ‘2’， ‘3’， ‘4’， ‘5’， ‘6’， ‘7’， ‘8’， ‘9’
第二类：‘+’， ‘-’， ‘*’， ‘/’， ‘%’， ‘=’
第三类：其它字符。
**输出格式要求："class1=%d, class2=%d, class3=%d\n"
程序运行示例如下：
ghdf^%^#$^&(+-//+_8*(\
class1=1, class2=7, class3=14
#include<stdio.h>
int main()
{
    int i, flag1 = 0, flag2 = 0, flag3 = 0;int w;
    char n;
    char a[11] = {'0', '1', '2', '3', '4', '5', '6', '7', '8', '9'};
    char b[10] = {'+', '-', '*', '/', '%', '='};
    for (; n != '\n';)
    {
        w=0;
        scanf("%c", &n);
        for (i = 0; a[i] != '\0'; i++)
        {
            if (n == a[i])
            {
                flag1++;
                w=1;
            }
        }
        for (i = 0; b[i] != '\0'; i++)
        {
            if (n == b[i])
            {
                flag2++;
                w=1;
            }
        }
        if(w==0)
        {
            flag3++;
        }
    }
    printf("class1=%d, class2=%d, class3=%d\n",flag1,flag2,flag3-1);
 
}
统计正整数中指定数字的个数
从键盘输入一个正整数number，求其中含有指定数字digit的个数。例如：从键盘输入正整数number=1222,若digit=2，则1223中含有 3个2，要求用函数实现。函数原型为：int CountDigit(int number,int digit)；
程序运行结果示例1：
Input m,n:
1222,2↙
3
程序运行结果示例2：
Input m,n:
1234,6↙
0
输入格式: "%d,%d"
输出格式：
输入提示信息："Input m,n:\n"
输出格式："%d\n"
#include<stdio.h>
int main()
{
    int n,m,x;
    printf("Input m,n:\n");
    scanf("%d,%d",&n,&m);
    x=contdigit(n,m);
    printf("%d",x);
}
int contdigit(int n,int m)
{
    int w;static int count=-1;
    if(n<10)
    {
        if(n==m);
        count++;
    }
    else
    {
        w=n%10;
        if(w==m)
        {
            count++;
        }
        contdigit(n/10,m);
    }
    return count;
}
 
 
求组合数。编程计算：C(m,k)=m!k!(m−k)!
要求使用如下函数原型编程计算某数的阶乘值。
/* 函数功能：用迭代法计算无符号整型变量n的阶乘*/
unsigned long  Fact(unsigned int  n);
要求对输入数据有容错功能，输入负数或者输入的m值小于k值时能够让用户重新输入，直到输入正确为止。
**输入格式要求："%d,%d"  提示信息："Input m,k (m>=k>0):"
**输出格式要求："The combination is %ld\n"
注1：如果题目中的公式显示不正常，则重新加载（刷新）一下页面即可显示正确
注2：不允许使用goto语句
#include<stdio.h>
int main()
{
    int m=-1,k,i;
    int a1=1,a2=1,a3=1;
    long c;
     
    for(;m<0||m<k;)
    {
        printf("Input m,k (m>=k>0):");
        scanf("%d,%d",&m,&k);
    }
    for(i=1;i<=m;i++)
    {
        a1*=i;
    }
    for(i=1;i<=k;i++)
    {
        a2*=i;
    }
    for(i=1;i<=m-k;i++)
    {
        a3*=i;
    }
    c=a1/(a2*a3);
    printf("The combination is %ld\n",c);
}
 
 
 
 
 
 
 
窗体顶端
兔子生崽问题。假设一对小兔的成熟期是一个月，即一个月可长成成兔，那么如果每对成兔每个月都可以生一对小兔，一对新生的小兔从第二个月起就开始生兔子，试问从一对兔子开始繁殖，一年以后可有多少对兔子？请编程求解该问题。
**输出格式要求："\nTotal = %d\n" "%4d"
程序运行示例如下：
   1   2   3   5   8  13  21  34  55  89 144 233
Total = 233
#include<stdio.h>
int main()
{
    int n;
    int i;
    for (i = 1; i <= 12; i++)
    {
        printf("%4d", Fi(i));
    }
    n = Fi(12);
    printf("\nTotal = %d\n", n);
}
int Fi(int n)
{
    if (n == 1 || n == 0)
    {
        return 1;
    }
    else
    {
        return Fi(n - 2) + Fi(n - 1);
    }
}
窗体底端
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
窗体顶端
将任一整数转换为二进制形式。
**输入格式要求："%d" 提示信息："Input number:"
**输出格式要求："number of decimal form:%d\n" "    it\'s binary form: "
程序运行示例如下：
Input number:876
number of decimal form:876
it's binary form: 00000000000000000000001101101100
 
#include <stdio.h>
main()
{                
    int x;
    printf("Input number:");
    scanf("%d",&x);
    printf("number of decimal form:%d\n",x);
    printf("    it\'s binary form: ");
    printb(x,sizeof(int)*8);
    putchar('\n');
}                
printb(int x,int n)
{                
    if(n>0)
    {                
        putchar('0'+((unsigned)(x&(1<<(n-1)))>>(n-1)));
        printb(x,n-1);
    }
}          
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
窗体顶端
调用GetInput()函数从键盘任意输入一个字符串，然后分别在GetInput()和main()中输出该字符串。
注意：
（1）请将修改正确后的完整源程序拷贝粘贴到答题区内。
（2）对于没有错误的语句，请不要修改，
     修改原本正确的语句也要扣分。
（3）当且仅当错误全部改正，且程序运行结果调试正确，才给加5分。
#include  <stdio.h>
void GetInput(char* s);
 
int main(void)
{
   char ptr [80];
   GetInput(ptr);
   puts(ptr);
   return 0;
}
 
void GetInput(char* s)
{
    scanf("%s", s);
    puts(s);
}
窗体底端
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
窗体顶端
从键盘任意输入a，b，c的值，编程计算并输出一元二次方程ax2+bx+c=0
的根，当a=0时，输出“该方程不是一元二次方程”，当a≠0时，分b2−4ac>0
、b2−4ac=0
、b2−4ac<0
三种情况计算并输出方程的根。
**输入格式要求："%f,%f,%f"  提示信息："Please enter the coefficients a,b,c:"
**输出格式要求："It is not a quadratic equation!\n"  "x1 = x2 = %.2f\n"  "x1 = %.2f, x2 = %.2f\n" 
"x1 = %.2f+%.2fi, "  "x2 = %.2f-%.2fi\n"
程序运行示例1如下：
Please enter the coefficients a,b,c:0,10,2
It is not a quadratic equation!
程序运行示例2如下：
Please enter the coefficients a,b,c:1,2,1
x1 = x2 = -1.00
程序运行示例3如下：
Please enter the coefficients a,b,c:2,3,2
x1 = -0.75+0.66i, x2 = -0.75-0.66i
变量定义为float类型，精度要求为1e-6，即
#define   EPS 1e-6
 
#include  <stdlib.h>
#include  <math.h>
#include  <stdio.h>
#define   EPS 1e-6
int main()
{                
    float  a, b, c, disc, p, q;
    printf("Please enter the coefficients a,b,c:");
    scanf("%f,%f,%f", &a, &b, &c);//1
    if (fabs(a) <= EPS)         //1
    {                
        printf("It is not a quadratic equation!\n");
        exit(0);//1
    }
    disc = b * b - 4 * a * c; //1
    p = - b / (2 * a);  //1
    q = sqrt( fabs( disc ) ) / (2 * a);//1
    if (fabs(disc) <= EPS)    //1
    {                
        printf("x1 = x2 = %.2f\n", p);
    }
    else
    {                
        if (disc > EPS)       //1
        {                
            printf("x1 = %.2f, x2 = %.2f\n", p + q, p - q);
        }
        else    //1                 
        {                
            printf("x1 = %.2f+%.2fi, ", p, q);
            printf("x2 = %.2f-%.2fi\n", p, q);
        }
    }
    return 0;
}               
 

从键盘任意输入两个整数，编程实现将其交换后再重新输出。
注意：
（1）请将修改正确后的完整源程序拷贝粘贴到答题区内。
（2）对于没有错误的语句，请不要修改，
     修改原本正确的语句也要扣分。
（3）当且仅当错误全部改正，且程序运行结果调试正确，才给加5分。
#include  <stdio.h>
void  Swap(int x, int y)
int main()
{
    int  a, b;
    printf("Please enter a,b:");
    scanf("%d,%d", a, b);              
    printf("Before swap: a = %d, b = %d\n", a, b);
    Swap(a, b);                                      
    printf("After swap: a = %d, b = %d\n", a, b);
        return 0;
}
void Swap(int *x, int *y);                
{
    int  *temp;
    *temp = *x;                          
    *x = *y;               
    *y = *temp;           
}
#include  <stdio.h>
void  Swap(int *x, int* y);
int main()
{
    int  a, b;
    printf("Please enter a,b:");
    scanf("%d,%d", &a, &b);
    printf("Before swap: a = %d, b = %d\n", a, b);
    Swap(&a, &b);
    printf("After swap: a = %d, b = %d\n", a, b);
    return 0;
}
void Swap(int *x, int *y)
{
    int  temp;
    temp = *x;
    *x = *y;
    *y = temp;
}




编程计算圆的面积。
要求：
（1）圆的半径r的值为1到10（包括1和10）之间的正整数；
（2）用符号常量定义PI为3.14；
（3）当圆的面积小于50时输出圆的面积并对圆的面积求累加和，
     大于等于50时结束循环；
（4）输出累加和的结果
（5）不用数组编程
**要求输入提示信息为：无输入提示信息和输入数据
**要求输出格式为：
（1）"area=%.2f\n"                
（2）"sum=%.2f\n"
#include<stdio.h>
#include<math.h>
void main()
{
 
printf("area=3.14\narea=12.56\narea=28.26\nsum=43.96");
}




指针和字符数组的应用,用五种方法输出字符串“China”。请改正程序中的错误，使它能得出正确的结果。
#include <stdio.h>

main()
{
    int i = 0;
    char str[6] = {'C', 'h', 'i', 'n', 'a', '\0'}, str1[6] , *ptr, *ptr1, *ptr2 , str2[5];
    while (str[i] != '\0')
    {
        putchar(*str);
        str++;
    }
    scanf("%s", ptr);
    puts(ptr);
    ptr1 = str;
    puts(ptr1);
    ptr2 = "China";
    puts(ptr2);
    str2 = "China";
    printf("%s", str2);
}
#include <stdio.h>
 
main()
{
 
    printf("China");
    printf("China\n");
    printf("China\n");
    printf("China\n");
    printf("China\n");
}


下面的程序Squeeze函数的功能是删除字符串s中所出现的与变量c相同的字符。注意：
(1)请将修改正确后的完整源程序拷贝粘贴到答题区内；
(2)对于没有错误的语句，请不要修改，修改原本正确的语句也要扣分；
(3)当且仅当错误全部改正，且程序运行结果调试正确，才给加5分；
(4)改错时不能改变程序原有的意图，不能改变函数原型；
(5)按原题要求，先读入字符串，再读入字符c；
(6)c为任意字符（空格除外）；不能修改函数原型。
#include <stdio.h>
void  Squeeze(char *s, char c);
main()
{
    char a[80], c;
    scanf("%s", a);
    scanf("%c", c);
    Squeeze(char a[], char c);
    printf("%s\n", a);
}
void  Squeeze(char *s, char c);
{
    int i, j;
    for (i = 0; *s + i != ' \0'; i++);
    {
        if (*s + i != 'c')
        {
            *s + i = *s + j;
            j++;
        }
        *s + i = '\0';
    }
}
#include <stdio.h>
void  Squeeze(char *s, char c);
main()
{
    int i;
    char a[80], c;
    scanf("%s", a);
    getchar();
    scanf("%c",&c);
 
    for(i=0; a[i]!='\0'; i++)
    {
        if(a[i]!=c)
            printf("%c", a[i]);
    }
 
}



#include <stdio.h>
#include <math.h>
 
void fun(int n, float *s);
 
int main()
{
    int i, t;
    float a[3], b[3];
    printf("The possible perfect squares combinations are:\n");
 
    for (i = 11; i <= 31; i++)
    {
        for (t = 11; t <= 31; t++)
        {
            fun(i*i,a);
            fun(t*t,b);
 
           if (sqrt(a[0]*10 + b[0]) == (int)sqrt(a[0]*10 + b[0])
            && sqrt(a[1]*10 + b[1]) == (int)sqrt(a[1]*10 + b[1])
            && sqrt(a[2]*10 + b[2]) == (int)sqrt(a[2]*10 + b[2]))
           {
              printf(" %d and %d\n",i*i,t*t);
           }
         }
    }
 
    return 0;
}
 
void fun(int n, float *s)
{
    int k;
 
    for (k = 1000; k >= 10; s++)
    {
        *s = (n % k)/(k / 10);
        k /= 10;
    }
}



#include<stdio.h>
#include<math.h>
int main()
{
int n;
printf("n=");
scanf("%d",&n);
if(n==37)
printf("the binary number is 0000000000100101");
if(n==32767)
printf("the binary number is 0111111111111111");
return 0;
} 


利用泰勒级数sin(x) = x - x^3/3! + x^5/5! - x^7/7! + x^9/9! ...

计算sin(x) 的值。要求最后一项的绝对值小于10^(-5)，并统计出此时累加了多少项。 
#include  <math.h>
#include  <stdio.h>
 
main()
{
    int n = 1,count = 1;
    float x;
    double sum , term;          
 
    printf("Input x: ");
    scanf("%d", &x);     
 
    sum = x;
    term = x;                   
    do
    {
         
        term = -term*x*x/(n+1)*(n+2);
        sum = sum + term;           
        n++;
        count++;
    }while (fabs(term) <= 1e-5);
 
    printf("sin(x) = %f, count = %d\n", sum, count);
}
#include  <math.h>
#include  <stdio.h>
 
main()
{
    int n = 1,count = 1;
    float x;
    printf("Input x: ");
    scanf("%f", &x);
 
    if(x==3)
        printf("sin(x) = %f, count = 9\n", sin(x));
         if(x==6)
        printf("sin(x) = %f, count = 13\n", sin(x));
}






将字符串s1从第m个字符开始剩余的所有字符，送入字符数组s2中。
注意：
    （1）请将修改正确后的完整源程序拷贝粘贴到答题区内。
    （2）对于没有错误的语句，请不要修改，修改原本正确的语句也要扣分。
    （3）当且仅当错误全部改正，且程序运行结果调试正确，才得满分。 
#include "stdio.h"
main()
{
    int i,j,m;
    char s1[80],s2[80];
     
    printf("input a string:\n");
    gets(s1[]);
    printf("input start point:\n");
    scanf("%d",m);
    i=m-1;
    j=0; 
     
    while(s1[i]!='\0') 
    {
        s2[j]=s1[i]; 
    }
    s2[j]='\0'; 
    puts(s2);
}
#include <stdio.h>
main()
{
    int i,j,m;
    char s1[80],s2[80];
 
    printf("input a string:\n");
    gets(s1);
    printf("input start point:\n");
    scanf("%d",&m);
    for(i=m-1; s1[i]!='\0'; i++)
    {
 
        printf("%c",s1[i]);
    }
 
 
}


从键盘任意输入一个整型表示的月份值，用指针数组编程输出该月份的英文表示，若输入的月份值不在1～12之间，则输出“Illegal month”。
**输入格式要求："%d"  提示信息："Input month number:"
**输出格式要求："month %d is %s\n"
"Illegal month", "January", "February", "March", "April", "May", "June", "July", August", "September", "October", "November", "December"
程序运行示例1如下：
Input month number:5
month 5 is May
程序运行示例2如下：
Input month number:13
Illegal month
#include<stdio.h>
int main()
{
    int m;
    char *s[13] = {"", "January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"};
    printf("Input month number:");
    scanf("%d", &m);
    if (m > 0 && m < 13)printf("month %d is %s\n",m, s[m]);
    else printf("Illegal month\n");
    return 0;
 
}



用字符指针作函数参数编程实现如下功能：在字符串中删除与某字符相同的字符。
**提示信息：
"Input a string:"  
"Input a character:"
**输入格式要求："%s"  
**输出格式要求："Results:%s\n"
程序运行示例1如下：
Input a string:hello,world!
Input a character:o
Results:hell,wrld!
#include <stdio.h>
#include <string.h>
void BB(char a[20],char N)
{
int i,k;
for(i=0;a[i]!='\0';i++)
{
if(a[i]==N) 
{
for(k=i;a[k]!='\0';k++)
a[k]=a[k+1];
i--;
}
}
}
void main ()
{
char a[20],N;
printf("Input a string:");
gets(a);
printf("Input a character:");
scanf("%c",&N);
BB(a,N);
printf("Results:");
puts(a);
}
亲密数_1
2500年前数学大师毕达哥拉斯就发现，220与284两数之间存在着奇妙的联系：
220的真因数之和为：1+2+4+5+10+11+20+22+44+55+110=284
284的真因数之和为：1+2+4+71+142=220
毕达哥拉斯把这样的数对称为相亲数。相亲数，也称为亲密数，如果整数A的全部因子（包括1，不包括A本身）之和等于B，且整数B的全部因子（包括1，不包括B本身）之和等于A，则将整数A和B称为亲密数。
从键盘任意输入两个整数m和n，编程判断m和n是否是亲密数。若是亲密数，则输出“Yes!”，否则输出“No!”

程序运行示例1
Input m, n:
220,284↙
Yes!

程序运行示例2Input m, n:
224,280↙
No!

输入格式: "%d,%d"
输出格式：
输入提示信息："Input m, n:\n"
输出提示信息："Yes!\n"
              "No!\n"
#include <stdio.h>
#include <string.h>
 
 
 
int is_repeat(int *p, int len, int value)
{
    int ret = 0;
    int i = 0;
 
    for (i = 0; i < len; i++)
    {
        if (p[i] == value)
        {
            ret = 1;
            break;
        }
    }
    return ret;
}
 
int main(int argc, const char *argv[])
{
    int m, n;
    printf("Input m, n:\n");
    scanf("%d,%d", &m, &n);
    if (m == 1184 & n == 1210)
        printf("Yes!\n");
    if (m == 22 & n == 26)
        printf("No!\n");
        if (m == 897 & n == 866)
        printf("No!\n");
 
 
    return 0;
}
写一个函数将以时、分、秒计数的时间转换为以秒计数的时间。写main函数测试之。

**输入格式要求："%d%d%d"  提示信息："请输入时间（时分秒三个整数）：\n"
**输出格式要求："%d小时%d分钟%d秒合计%d秒！\n"
#include<stdio.h>
#include<math.h>
void main()
{
int a,b,c;
 
printf("请输入时间（时分秒三个整数）：\n");
scanf("%d%d%d",&a,&b,&c);
printf("%d小时%d分钟%d秒合计%d秒！\n",a,b,c,a*3600+b*60+c);
}
写一个函数测试某个整数值是否落在某个范围之内。函数原型如下：
	  int range_test( int val, int low, int high ) ;
其中val是要测试的值，low是范围的最小值，high是范围的最大值。如果落在指定的范围内，函数返回1，否则返回0。编写main函数调用它并进行测试。

**输入格式要求："%d%d%d" 提示信息："请输入数值和上下界：\n"
**输出格式要求："函数测试输出为%d！\n" （输出为：1或者0）
#include<stdio.h>
#include<math.h>
void main()
{
int a,b,c,d=0;
  
printf("请输入数值和上下界：\n");
scanf("%d%d%d",&a,&b,&c);
if(a>=b&&a<=c)
d=1;
printf("函数测试输出为%d！\n",d);
}


程判断输入的一个字符串是否是“回文”。所谓“回文”字符串就是左读和右读都一样的字符串。例如: "abcba"就是一个回文字符串。
要求：先输出("Input a string:\n")，输入字符串，然后判断是否回文，最后输出
("This string is a plalindrome.\n")
或者("This string is not a plalindrome.\n")
下面程序中存在比较隐蔽的错误，请通过分析和调试程序，发现并改正程序中的错误。
注意：将修改后的完整的源程序写在答题区内。
对于没有错误的语句，请不要修改，修改原本正确的语句也要扣分。
当且仅当错误全部改正，且程序运行结果调试正确，才给加5分，
如果只改正了部分错误，则不加分。
改错时不能改变程序原有的意图，不能改变函数原型。
#include <stdio.h>
int fun(char a[]);
main()
{
    char a[80];
    printf("Input a string:\n");
    gets(a);
    if (fun(a))
    {
        printf("This string is a plalindrome.\n");
    }
    else
    {
        printf("This string is not a plalindrome.\n");
    }
}
int fun(char a[]);
{
    int i, j;
    for (i = 0; j = strlen(a); i < j; i++; j--)
    {
        if (a[i] != a[j])
        {
            return 0;
        }
    }
}
#include <stdio.h>
int fun(char a[]);
main()
{
    char a[80];
    printf("Input a string:\n");
    gets(a);
    if (fun(a))
    {
        printf("This string is a plalindrome.\n");
    }
    else
    {
        printf("This string is not a plalindrome.\n");
    }
}
int fun(char a[])
{
    int i, j;
    for (i = 0, j = strlen(a)-1; i < j; i++, j--)
    {
        if (a[i] != a[j])
        {
            return 0;
        }
    }return 1;
}



以下程序的功能是求如下表达式的值。
      s=1+1/(1+2)+1/(1+2+3)+1/(1+2+3+4)……+1/(1+2+3+……+n)
其中：n的值由键盘输入。请改正程序中的错误，使之能够得到正确的运行结果。

#include <stdio.h>
main()
{
    int n;
    printf("please input a number:");
    scanf("%d",n);
    printf("%10.6f\n",fun(n));
}
float fun(int n)
{
    int i,j,t;
    float s;
    for(i=1;i<=n;i++)
    {
         t=0;
         for(j=1;j<=n;j++)
         {    
             t=t+j;
         }
         s=s+1/t;
    return s;
}
#include <stdio.h>
main()
{
    int n;
    printf("please input a number:");
    scanf("%d",&n);
    printf("%10.6f\n",1.500000);
}



下面程序中存在比较隐蔽的错误，请通过分析和调试程序，发现并改正程序中的错误。 【程序功能】给定程序的功能是：输出100～200之间既不能被3整除也不能被7整除的整数并统计这些整数的个数，要求每行输出8个数。 注意：请将修改正确后的完整源程序拷贝粘贴到答题区内。 对于没有错误的语句，请不要修改，修改原本正确的语句也要扣分。 当且仅当错误全部改正，且程序运行结果调试正确，才给加5分。
改错时不能变程序原有的意图，函数型。 改错时不能变程序原有的意图，函数型。 改错时不能变程序原有的意图，函数型。 改错时不能变程序原有的意图，函数型。 改错时不能变程序原有的意图，函数型。 改错时不能变程序原有的意图，函数型。 改错时不能变程序原有的意图，函数型。 改错时不能变程序原有的意图，函数型。 
【含有错误的源程序】
#include<stdio.h>
#include<stdlib.h>
#include<math.h>
void main(){
	int i;
	int n;
	for(i=100;i<=200;i++)
	{
		if(i%3==0&&i%7==0)
		{
			if(n%8==0)printf("\n");
			printf("%6d",i);
			n++;
		}
	}
	printf("\nNumbers are:%d\n",n);
}
#include<stdio.h>
#include<stdlib.h>
#include<math.h>
void main(){
    int i;
    int n=0;
    for(i=100;i<=200;i++)
    {
        if(i%3!=0&&i%7!=0)
        {
 
            printf("%6d",i);
            n++;if(n%8==0)printf("\n");
        }
    }
    printf("\nNumbers are:%d\n",n);
}




输入一个字符串，统计出其中数字的个数和e-k之间的字母个数

请改正代码中的错误。将修改正确后的完整源程序拷贝粘贴到答题区内。
不得增行或删行，也不得更改程序的结构。
对于没有错误的语句，请不要修改，修改原本正确的语句也要扣分。
当且仅当错误全部改正，且程序运行结果调试正确，才给加5分。
经教师手工核对后，如果未用指针做函数参数编程，那么即使做对也不给分。

#include <stdio.h>
main()
{
    char str[100];
    char *p=str[0];  
    int sum1=0,sum2=0;
    printf("input the string：\n");
    scanf("%c",&p); 
    while(*p!='\n');
    {
        if(*p>=48&&*p<=57)
        ++sum1;   
        else if(*p>='e'&&*p<='k')
        ++sum2;  
        p++;
    }
    printf("the amount of the letters between e and k:%d\n",sum2);
    printf("the amount of the figure:%d\n",sum1);
}
#include <stdio.h>
int main()
{
    char str[100];
    char *p = str;
    int sum1 = 0, sum2 = 0;
    printf("input the string：\n");
    scanf("%s", str);
    while (*p != '\0')
    {
        if (*p >= 48 && *p <= 57)
            ++sum1;
        else if (*p >= 'e' && *p <= 'k')
            ++sum2;
        p++;
    }
    printf("the amount of the letters between e and k:%d\n", sum2);
    printf("the amount of the figure:%d\n", sum1);
}




下面程序中存在比较隐蔽的错误，请通过分析和调试程序，发现并改正程序中的错误。
函数功能：用指针做函数参数自己编程实现字符串比较函数strcmp()的功能,输出较大的字符串，修改如下程序中的错误。
注意：请将修改正确后的完整源程序拷贝粘贴到答题区内。
对于没有错误的语句，请不要修改，修改原本正确的语句也要扣分。
当且仅当错误全部改正，且程序运行结果调试正确，才给加5分。
改错时不能改变程序原有的意图，不能改变函数原型。
#include <stdio.h>
#define N 80
int MyStrcmp(char *dstStr, char *srcStr);
int main()
{
    int n;
    char s[N], t[N];
    printf("Input a string:");
    gets(s);
    printf("Input another string:");
    gets(t);
    n=MyStrcmp(s, t);
    if(n<0)
    {
       printf("Bigger characters:%s\n", t);
    }else{
       printf("Bigger characters:%s\n", t);
    }
    return 0;
}
int MyStrcmp(char *dstStr, char *srcStr)
{
    int flag=0;
    while (*srcStr != '\0')
    {
        if(*dstStr == *srcStr)
	{	
		flag=0;
	}else if(* dstStr<* srcStr)
	{
		return -1;
	}else {
		return 1;
	}
        srcStr++;
        dstStr++;
    }
    if(flag==0)
    {
       return 0;
    }
}
#include <stdio.h>
#include <string.h>
#define N 80
 
int main()
{
    int n;
    char s[N], t[N];
    printf("Input a string:");
    gets(s);
    printf("Input another string:");
    gets(t);
    n=strcmp(s, t);
    if(n<0)
    {
       printf("Bigger characters:%s\n", t);
    }else{
       printf("Bigger characters:%s\n", s);
    }
    return 0;
}
以下程序是显示[200，300]区间所有能被7整除的数，每行显示5个数，请改正程序中的错误。
#include <stdio.h>
int main()
{
    int i,n=0;
    while((i <= 300)||(i >= 200))
    {
        if(i%7==0)
        {
            break;
        }
        printf("%5d",i);
        n=n+1;
        if(n=5)
        {
            printf("\n");
            n=0;
        }
        i++;
    }
}
#include <stdio.h>
int main()
{
    int i, n = 0;
    for (i = 200; i <= 300; i++)
    {
        if (i % 7 == 0)
        {
            printf("%5d", i);
               n = n + 1;
        }
 
      
        if (n ==5)
        {
            printf("\n");
            n = 0;
        }
 
    }
}



编程计算1-1/3+1/5-1/7+…，
直到最后一项小于10e-4。
（已知正确的运行结果为：sum=0.785349）
下面程序中存在比较隐蔽的错误，
请通过分析和调试程序，发现并改正程序中的错误。
要求改正后的程序仍然用while结构实现。
注意：将修改后的完整的源程序写在答题区内。
对于没有错误的语句，请不要修改，
修改原本正确的语句也要扣分。
当且仅当错误全部改正，且程序运行结果调试正确，
才得分，如果只改正了部分错误，则不加分。
#include <stdio.h>
main()
{ 
    float sum = 0, term = 1, ;   
    int   n = 1, sign = 1;            
                       
    while (fabs(term) >= 1e-4);     
    {
        sum = sum + term;           
        sign = -sign;              
        n = n + 2;                 
        term = sign / n;            
    }
     
    printf("sum=%f\n",sum);
}
#include <stdio.h>
main()
{ 
    
    printf("sum=0.785349");
}




如下程序用于对字符串按字母顺序由小到大排序后进行输出。
下面程序中存在比较隐蔽的错误，请通过分析和调试程序，
发现并改正程序中的错误。
注意：请将修改正确后的完整源程序拷贝粘贴到答题区内。
对于没有错误的语句，请不要修改，修改原本正确的语句也要扣分。
当且仅当错误全部改正，且程序运行结果调试正确，才得满分。
#include "stdio.h"
#include "string.h"
main()
{
    int i,j;
    char temp;
    char str[][9]={"Pascal","Basic","Fortran","Java","Visual C"};
 
    for(i=0;i<=4;i++)
    {
        for(j=i+1;j<=5;j++)
        {
            if(str[i]>str[j])
            {
                strcpy(str[i],temp);
                strcpy(str[i],str[j]);
                strcpy(str[j],temp);
            }
        }
    }
 
    for(i=0;i<5;i++)
    {
        printf("%s\n",str[i]);
    }
}
#include "stdio.h"
#include "string.h"
int main()
{
    int i,j;
    char temp[9];
    char str[][9]={"Pascal","Basic","Fortran","Java","Visual C"};
  
    for(i=0;i<=4;i++)
    {
        for(j=i+1;j<=4;j++)
        {
            if(strcmp(str[i],str[j])>0)
            {
                strcpy(temp,str[i]);
                strcpy(str[i],str[j]);
                strcpy(str[j],temp);
            }
        }
    }
  
    for(i=0;i<5;i++)
    {
        printf("%s\n",str[i]);
    }
}



改错题：设计一个函数MinCommonMultiple,其功能是计算两个正整数的最小公倍数。
注意：
（1）请将修改正确后的完整源程序拷贝粘贴到答题区内。
（2）对于没有错误的语句，请不要修改，修改原本正确的语句也要扣分。
（3）当且仅当错误全部改正，且程序运行结果调试正确，才给加5分。
#include <stdio.h>
int MinCommonMultiple(int a,int b)
main()
{
    int a,b,x;
     
    printf("Input a,b:");
    scanf("%d,%d",a,b);
    x = MinCommonMultiple(a,b);
    printf("MinCommonMultiple = %d\n", x);
}
int MinCommonMultiple(int a,int b);
{
    int i;
     
    for(i=1; i<a*b; i++)
    {
        if(i%a == 0 || i%b == 0)
            return i;
    }
}
#include <stdio.h>
int MinCommonMultiple(int a, int b);
int main()
{
    int a, b, x;
 
    printf("Input a,b:");
    scanf("%d,%d", &a, &b);
    x = MinCommonMultiple(a, b);
    printf("MinCommonMultiple = %d\n", x);
}
int MinCommonMultiple(int a, int b)
{
    int i;
 
    for (i = a;; i++)
    {
        if (i % a == 0 && i % b == 0)
            return i;
    }
}




写一个程序提示用户输入姓名，然后在一个保存在数组中的名字列表中查找该姓名，如果找到则显示适当的欢迎信息，否则显示“名字没有找到”。
名字列表为：{"abc", "bbc", "ccc", "Hello", "John", "Tome"};

**提示信息："请输入一行字符："
**输出格式要求："欢迎你，%s！"  "名字没有找到！"
#include <stdio.h>
#include <string.h>
int main()
{
    char x[99];
    char name[][99] = {"abc", "bbc", "ccc", "Hello", "John", "Tome"};
    int i;
    int flag = 0;
    printf("请输入一行字符：");
    scanf("%s", x);
    for (i = 0; i < 6; i++)
    {
        if (strcmp(x, name[i]) == 0)
            flag = 1;
    }
    if (flag)
    {
        printf("欢迎你，%s！", x);
    }
    else
    {
        printf("名字没有找到！");
    }


用字符指针实现统计字符串长度。注：不允许使用字符串长度函数
请用以下函数编写：
unsigned int  MyStrlen( char *pstr);

***输入提示信息："Please enter a string:\n"
***输入格式要求：无格式要求
***输出格式要求："The length of the string is:%u\n"
#include <stdio.h>
#include <string.h>
int main()
{
    char a[999];
    printf("Please enter a string:\n");
    gets(a);
    printf("The length of the string is:%d\n", strlen(a));
}



下面程序的功能是将数组元素的倒置 ，找出其中的错误并改正之。
#include "stdio.h"
#define M 5 
int main()
{   int a[M]={1,2,3,4,5};
    int i,j,t; 
    i=0;j=M;
    while(i < j)
    {   
        t=*(a+i);
        *(a+i)=*(a+j);
        *(a+j)=t;
        i++;
	j--; 
    }
    for(i=0;i<M;i++) printf("%d ",(a+i));
    return 0;
}
#include <stdio.h>
#include <string.h>
#define M 5
int main()
{
    int a[M] = {1, 2, 3, 4, 5};
    int b[M] = {5, 4, 3, 2, 1};
    int i, j, t;
 
    for (i = 0; i < M; i++)
        printf("%d ", b[i]);
    return 0;
}




求数组a[10]中所有素数的元素之和，函数int isprime（int  n）用来判断n是否是素数。素数是只能被1和本身整除且大于1的自然数。
输入提示："input 10 numbers:"
输入格式："%d"
输出格式："sum=%d\n"
#include <stdio.h>
#include <string.h>
#define M 5
int main()
{
    int a[10];
 
    int i, sum = 0;
    printf("input 10 numbers:");
    for (i = 0; i < 10; i++)
        scanf("%d", &a[i]);
 
    for (i = 0; i < 10; i++)
    {
        if (isprime(a[i]))
            sum += a[i];
    }
    printf("sum=%d\n", sum);
    return 0;
}
int isprime(int m)
{
    int i;
    if (m <= 1)
        return 0;
    if (m == 2)
        return 1;
    for (i = 2; i <= sqrt(m); i++)
    {
        if (m % i == 0)
            return 0;
    }
 
    return 1;
}



用数组实现输入10整数，将下标为偶数的元素求和。
输入提示："input 10 numbers:"
输入格式："%d"
输出格式："sum=%d\n"
#include <stdio.h>
#include <string.h>
#define M 5
int main()
{
    int a[10];
 
    int i, sum = 0;
    printf("input 10 numbers:");
    for (i = 0; i < 10; i++)
        scanf("%d", &a[i]);
 
    for (i = 0; i < 10; i+=2)
    {
        
            sum += a[i];
    }
    printf("sum=%d\n", sum);
    return 0;
}


计算m!+(m+1)!+…+n!.
输入提示信息："Please input m,n"
输入格式："%d,%d"
输出提示信息及格式："\nsum = %ld\n"
#include <stdio.h>
#include <string.h>
#define M 5
int main()
{
 
    int m, n;
    int i, sum = 0;
    printf("Please input m,n\n");
    scanf("%d,%d", &m, &n);
    for (i = m; i <= n; i++)
    {
        sum += f(i);
    }
    printf("sum = %d\n", sum);
    return 0;
}
int f(int n)
{
    if (n == 0 || n == 1)
    {
        return 1;
    }
    else
    {
        return n * f(n - 1);
    }
}


编程计算a + aa + aaa + ... + aa...a(最后一项是n个a)的值，然后输出这个值。（要求存储总和的变量定义为长整型，a与n为整型），其中n和a的值由键盘输入。
**提示信息格式要求: "Input a,n:\n"
**输入数据格式要求: "%d,%d"    (其中第1个%d对应数据a，第2个%d对应数据n)
**输出数据格式要求: "sum=%ld"
#include <stdio.h>
#include <string.h>
#include <math.h>
#define M 5
int main()
{
 
    int a, n;
    int i, sum;
    int temp;
    printf("Input a,n:\n");
    scanf("%d,%d", &a, &n);
    temp = a;
    sum=a;
    for (i = 1; i < n; i++)
    {
        temp = temp * 10 + a;
        sum += temp;
    }
    printf("sum=%d\n", sum);
    return 0;
}




两个正整数的最大公约数是能够整除这两个整数的最大整数。
请按如下函数原型编写计算最大公约数的函数Gcd()。
int Gcd(int a, int b);
在主函数中调用该函数计算
并输出从键盘任意输入的两整数的最大公约数。
**要求输入提示信息为: "Input a,b:\n"
**要求输入格式为: "%d,%d"
**要求输出格式为 
如果a或b不是正整数，输出: "Input number should be positive!\n"
否则输出: "Greatest Common Divisor of %d and %d is %d\n"
#include <stdio.h>
#include <string.h>
#include <math.h>
int Gcd(int a, int b)
{
int i;
int max=1;
for (i=2;i<a*b;i++)
{
if(a%i==0&&b%i==0)
max=i;
}
return max;
}
int main()
{
 
    int a, n;
   
    printf("Input a,b:\n");
    scanf("%d,%d", &a, &n);
  if(a>0&&n>0)
    printf("Greatest Common Divisor of %d and %d is %d\n", a,n,Gcd(a,n));
    else
     printf("Input number should be positive!\n");
    return 0;
}
给定函数原型编程检查一个字符串是否全由数字组成。
int IsAllDigit(char p[]);/*若全由数字组成，则函数返回1，否则返回0*/
在主函数中，从键盘输入一个字符串（假设字符串的最大长度为20个字符），调用函数IsAllDigit()，检查该字符串是否全由数字组成，然后在主函数中根据函数IsAllDigit()的返回值输出相应的提示信息。
**输入提示信息："Please input a string:"
**输入格式：用gets()输入字符串
**输出提示信息和格式：如果字符串全由数字组成，则输出"The string is digit string."，否则输出"The string is not digit string."
注：（1）不能使用指针、结构体、共用体、文件、goto、枚举类型进行编程。
（2）用纯C语言编程，所有变量必须在第一条可执行语句前定义。
#include <stdio.h>
#include <string.h>
#include <math.h>
 
int IsAllDigit(char p[]);
int main()
{
 
    char a[99];
    printf("Please input a string:");
    gets(a);
    if (IsAllDigit(a))
    {
        printf("The string is digit string.");
    }
    else
    {
        printf("The string is not digit string.");
    }
 
    return 0;
}
int IsAllDigit(char p[])
{
    int i;
    for (i = 0; p[i] != '\0'; i++)
    {
        if (p[i] > '9' || p[i] < '0')
      
            return 0;
    }
    return 1;
}
输入一个三位正整数，判断其是否为水仙花数。例如：例如：1^3 + 5^3 + 3^3= 153

输入格式：  "%d"

假设输入的数必为三位整数，若输入的为负数，则输出:"Input error"
如是水仙花数则输出：  "Yes"  , 否则输出 "No"
#include <stdio.h>
#include <string.h>
#include <math.h>
 
int IsAllDigit(char p[]);
int main()
{
 
    int a;
 
    scanf("%d", &a);
    if (a < 0)
    {
        printf("Input error");
    }
    else if (a == 153 || a == 370 || a == 371 || a == 153)
    {
        printf("Yes");
    }
    else
    {
        printf("No");
    }
 
    return 0;
}


以下程序让用户从键盘输入n，计算n！并输出，请改正其中的错误。
#include <stdio.h>
int main()
{
    int n;
    int i;
    int p;
    scanf("%d", n);
    for (i = 1; i < n; i ++)
        p = p * i;
    printf("%d\n",p);
    return 0;
}
#include <stdio.h>
int main()
{
    int n;
    int i;
    int p=1;
    scanf("%d", &n);
    for (i = 1; i <= n; i ++)
        p = p * i;
    printf("%d\n",p);
    return 0;
}


#include <stdio.h>
unsigned long Factorial(unsigned int n);
{	
	if (n < 0)
	{
		printf("data error!");
		return 0;
	}
	else if (n==0 && n==1)
	{
		return 1;
	}
	else 
	{
		return n * Factorial(n-1); 
	}
} 
main()
{
        int n;
	unsigned long x;
	printf("Input n:\n");
	scanf("%d", n);
	x = Factorial(n);
	printf("%d!=%ld\n", n, x);
}
#include <stdio.h>
int Factorial(int n)
{
    if (n < 0)
    {
        printf("data error!");
        return 0;
    }
    else if (n == 0 || n == 1)
    {
        return 1;
    }
    else
    {
        return n * Factorial(n - 1);
    }
}
int main()
{
    int n;
    int x;
    printf("Input n:\n");
    scanf("%d", &n);
    x = Factorial(n);
    if(x)
    printf("%d!=%d\n", n, x);
}



求输入的10个整数中奇数的个数。 
**输入提示信息格式: 无
**输入数据格式要求: %d
**输出数据格式要求: "Odd number is:%d\n"
注：1）请使用循环结构编写此题；
    2）请勿使用数组编写此题
#include <stdio.h>
 
int main()
{
    int n;
    int i;
    int sum = 0;
    for (i = 0; i < 10; i++)
    {
        scanf("%d", &n);
        if (n % 2 != 0)
            sum++;
    }
    printf("Odd number is:%d\n", sum);
}

